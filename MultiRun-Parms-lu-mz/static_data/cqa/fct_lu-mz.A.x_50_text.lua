_cqa_text_report = {
  paths = {
    {
      hint = {
        {
          details = "Calling (and then returning from) a function prevents many compiler optimizations (like vectorization), breaks control flow (which reduces pipeline performance) and executes extra instructions to save/restore the registers used inside it, which is very expensive (dozens of cycles). Consider to inline small functions.\n - unknown: 5 occurrences\n",
          title = "CALL instructions",
          txt = "Detected function call instructions.\n",
        },
        {
          workaround = "Avoid mixing data with different types. In particular, check if the type of constants is the same as array elements.",
          details = " - CLTQ: 4 occurrences\n",
          title = "Conversion instructions",
          txt = "Detected expensive conversion instructions.",
        },
        {
          title = "Type of elements and instruction set",
          txt = "No instructions are processing arithmetic or math operations on FP elements. This function is probably writing/copying data or processing integer elements.",
        },
        {
          title = "Matching between your function (in the source code) and the binary function",
          txt = "The binary function does not contain any FP arithmetical operations.\nThe binary function is loading 556 bytes.\nThe binary function is storing 364 bytes.",
        },
      },
      expert = {
        {
          title = "General properties",
          txt = "nb instructions    : 406\nloop length        : 1750\nused x86 registers : 16\nused mmx registers : 0\nused xmm registers : 6\nused ymm registers : 3\nused zmm registers : 0\nnb stack references: 27\n",
        },
        {
          title = "Front-end",
          txt = "MACRO FUSION NOT POSSIBLE\ninstruction fetch    : 110.00 cycles\ninstruction queue    : 203.00 cycles\ndecoding             : 203.00 cycles\nmicro-operation queue: 209.00 cycles\nfront end            : 209.00 cycles\n",
        },
        {
          title = "Back-end",
          txt = "       | P0     | P1   | P2    | P3    | P4     | P5     | P6\n----------------------------------------------------------------\nuops   | 115.00 | 0.00 | 64.00 | 64.00 | 140.00 | 140.00 | 60.00\ncycles | 115.00 | 0.00 | 64.00 | 64.00 | 140.00 | 140.00 | 60.00\n\nCycles executing div or sqrt instructions: 88.00-104.00\n",
        },
        {
          title = "Cycles summary",
          txt = "Front-end : 209.00\nDispatch  : 140.00\nDIV/SQRT  : 88.00-104.00\nOverall L1: 209.00\n",
        },
        {
          title = "Vectorization ratios",
          txt = "INT\nall    : 1%\nload   : 0%\nstore  : 0%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 4%\nFP\nall     : 33%\nload    : 50%\nstore   : NA (no store vectorizable/vectorized instructions)\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 0%\nINT+FP\nall     : 5%\nload    : 25%\nstore   : 0%\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: 0%\nother   : 4%\n",
        },
        {
          title = "Vector efficiency ratios",
          txt = "INT\nall    : 9%\nload   : 6%\nstore  : 10%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 8%\nFP\nall     : 25%\nload    : 31%\nstore   : NA (no store vectorizable/vectorized instructions)\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 12%\nINT+FP\nall     : 11%\nload    : 18%\nstore   : 10%\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: 6%\nother   : 9%\n",
        },
        {
          title = "Cycles and memory resources usage",
          txt = "Assuming all data fit into the L1 cache, each call to the function takes 209.00 cycles. At this rate:\n - 2% of peak load performance is reached (2.66 out of 128.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 2% of peak store performance is reached (1.74 out of 64.00 bytes stored per cycle (GB/s @ 1GHz))\n",
        },
        {
          title = "Front-end bottlenecks",
          txt = "Performance is limited by instruction throughput (loading/decoding program instructions to execution core) (front-end is a bottleneck).\n",
        },
        {
          title = "ASM code",
          txt = "In the binary file, the address of the function is: 2d9a0\n\nInstruction                          | Nb FU | P0    | P1 | P2   | P3   | P4    | P5   | P6 | Latency | Recip. throughput\n-------------------------------------------------------------------------------------------------------------------------\nPUSH %RBP                            | 1     | 0     | 0  | 0    | 0    | 1     | 1    | 0  | 0       | 1\nMOV %RSP,%RBP                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nPUSH %R15                            | 1     | 0     | 0  | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R14                            | 1     | 0     | 0  | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R13                            | 1     | 0     | 0  | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R12                            | 1     | 0     | 0  | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %RBX                            | 1     | 0     | 0  | 0    | 0    | 1     | 1    | 0  | 0       | 1\nLEA (%RDI),%RBX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nAND $-0x40,%RSP                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0xc0(%RSP),%RSP                 | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x40(%RDI),%RDX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x48(%RDI),%RAX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x38(%RDI),%RCX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RDI,0x80(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RDX,0x98(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RCX,0x68(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RAX,0x70(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 2080 <@plt_start@+0x60>         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV %EAX,0x90(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%RAX),%R14D                     | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 2190 <@plt_start@+0x170>        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x28(%RBX),%RSI                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA (%RAX),%EDI                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EAX,0xa8(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV (%RSI),%EAX                      | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %EAX,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAR $0x1f,%EDX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nIDIV %R14D                           | 29    | 14.50 | 0  | 0    | 0    | 14.50 | 0    | 0  | 37-49   | 22-26\nCMP %EDX,%EDI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJL 2efd9 <pintgr_._omp_fn.2+0x1639>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0xa8(%RSP),%R8D                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %EAX,%R9D                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nIMUL %EAX,%R8D                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 3       | 1\nADD %R8D,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %EDX,%R9D                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %R9D,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJGE 2db34 <pintgr_._omp_fn.2+0x194>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0x80(%RSP),%R11                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA 0x1(%RDX),%R10D                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x20(%R11),%R12                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x8(%R11),%RBX                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x10(%R11),%R8                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV (%R12),%R15D                     | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nTEST %R15D,%R15D                     | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJLE 2db34 <pintgr_._omp_fn.2+0x194>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOVSXD %R10D,%RCX                    | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA -0x1(%RAX),%EAX                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RCX,%R13                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOVSXD %EDX,%RDX                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nSAL $0x5,%R13                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %RAX,%RDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R13,%RCX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RDX,%R11                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA -0x1(%R15),%ESI                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RCX,%R14                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAL $0x5,%R11                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA (%RCX),%R12                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %RSI,%R14                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %RDX,%R11                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $-0x108,%RDI                     | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $-0x100,%R9                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%R12                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD $0x42,%R11                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%R14                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %RDI,%R12                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R9,%R14                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x8(,%RSI,8),%R13                | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R11,0xa0(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R8),%R15                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nNOPL (%RAX,%RAX,1)                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nCALL 2220 <@plt_start@+0x200>        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nCMPL $-0x1,0xeda0(%RIP)              | 1     | 0     | 0  | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nJE 2eb3a <pintgr_._omp_fn.2+0x119a>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMPL $-0x1,0xec53(%RIP)              | 1     | 0     | 0  | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nJE 2e661 <pintgr_._omp_fn.2+0xcc1>   | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCALL 2270 <@plt_start@+0x250>        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nCMP $0x1,%AL                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJNE 2db6f <pintgr_._omp_fn.2+0x1cf>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0x80(%RSP),%RAX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x30(%RAX),%RDX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOVQ $0,(%RDX)                       | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nCALL 2220 <@plt_start@+0x200>        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x80(%RSP),%R9                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x28(%R9),%RSI                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV (%RSI),%EAX                      | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSUB $0x4,%EAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EAX,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAR $0x1f,%EDX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nIDIVL 0x90(%RSP)                     | 30    | 14.50 | 0  | 0.50 | 0.50 | 14.50 | 0    | 0  | 37-49   | 22-26\nCMP %EDX,0xa8(%RSP)                  | 1     | 0     | 0  | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nJL 2efe3 <pintgr_._omp_fn.2+0x1643>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0xa8(%RSP),%EBX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %EAX,%ECX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nVPXOR %XMM0,%XMM0,%XMM0\nIMUL %EAX,%EBX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 3       | 1\nADD %EBX,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %EDX,%ECX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %ECX,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJGE 2e444 <pintgr_._omp_fn.2+0xaa4>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0x80(%RSP),%RDI                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA 0x3(%RDX),%R15D                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVSXD %R15D,%R8                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA -0x1(%RAX),%EAX                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R8,%R9                          | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOVSXD %EDX,%RDX                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV 0x20(%RDI),%R11                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nADD %RAX,%RDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x5,%R9                         | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RDX,%RBX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV 0x8(%RDI),%R10                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nADD %R8,%R9                          | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV (%R11),%R12D                     | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x10(%RDI),%R14                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %R9,0xb8(%RSP)                   | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R10),%RCX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%R9                         | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA (%R12),%R13D                     | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x5,%RBX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nSUB $0x3,%R13D                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R9,%RSI                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nADD %RDX,%RBX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD $0x108,%RSI                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x4(%R12),%EDI                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x5(%R12),%R11D                 | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD $0x84,%RBX                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R13D,0xa0(%RSP)                 | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R10),%R13                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R14,0xb0(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R14,%R9,1),%R15                | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R9,%RCX                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %RSI,%R13                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R14,%RSI,1),%R14               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R10),%R12                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RBX,0x78(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %EDI,0x68(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R11D,0x70(%RSP)                 | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nNOPL (%RAX)                          | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV 0x80(%RSP),%R10                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x30(%R10),%RSI                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV (%RSI),%RCX                      | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA -0x28(%RBP),%RSP                 | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nPOP %RBX                             | 2     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R12                             | 2     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R13                             | 2     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R14                             | 2     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R15                             | 2     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %RBP                             | 2     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nRET\nNOPL (%RAX)                          | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV 0x80(%RSP),%RDX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x28(%RDX),%RAX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV (%RAX),%EAX                      | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSUB $0x3,%EAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EAX,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAR $0x1f,%EDX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nIDIVL 0x90(%RSP)                     | 30    | 14.50 | 0  | 0.50 | 0.50 | 14.50 | 0    | 0  | 37-49   | 22-26\nCMP %EDX,0xa8(%RSP)                  | 1     | 0     | 0  | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nJL 2f450 <pintgr_._omp_fn.2+0x1ab0>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0xa8(%RSP),%ESI                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %EAX,%R10D                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nIMUL %EAX,%ESI                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 3       | 1\nADD %ESI,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %EDX,%R10D                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %R10D,%EDX                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJGE 2db53 <pintgr_._omp_fn.2+0x1b3>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0x80(%RSP),%RBX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA 0x3(%RDX),%EDI                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x20(%RBX),%RCX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x18(%RBX),%R15                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV (%RBX),%R11                      | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV (%RCX),%ECX                      | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x10(%RBX),%R12                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %ECX,%R9D                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSUB $0x2,%R9D                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R9D,0x58(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCMP $0x1,%R9D                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJLE 2db53 <pintgr_._omp_fn.2+0x1b3>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOVSXD %EDX,%RDX                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA -0x1(%RAX),%EAX                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %RDX,%RAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVSXD %EDI,%R14                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RAX,%RDI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV %R14,%R10                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAL $0x5,%RDI                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA -0x4(%RCX),%ESI                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x5,%R10                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %RDI,%RAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD $0x84,%RAX                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R14,%R10                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,0xb0(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA -0x100(%R12,%R10,8),%R8          | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV (%R15),%EAX                      | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x98(%RSP),%R9                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x68(%RSP),%RBX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %ESI,0x68(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nSUB $0x1,%EAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCLTQ\nLEA (%RSI,%R10,1),%RSI               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RAX,%RAX,4),%RAX               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %R14,%R9                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 5       | 2\nLEA -0xf8(%R12,%RSI,8),%R14          | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA (%RAX),%RSI                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD $0x5,%RSI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RBX),%R13                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RSI,0xb8(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA -0x3(%RCX),%ESI                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RSI,%RDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nADD 0x70(%RSP),%R9                   | 1     | 0     | 0  | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nSUB $0x1,%RDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R13,%R13                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %RBX,%RDX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOV %RAX,0x8(%RSP)                   | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD %R9,%R13                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RBX),%R9                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nNEG %R9                              | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x20,%ECX                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R9,%R9                          | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RBX),%RDI                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RDX),%RAX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RSI),%R15                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%RAX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %R9,0xa0(%RSP)                   | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD %RCX,%RAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%RBX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV $0x20,%R9D                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %ESI,0x60(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RBX,%RCX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nVMOVSD 0x93bb(%RIP),%XMM8            | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nCMOVNS %RAX,%R9                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nTEST %RBX,%RBX                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x20(%RAX),%RAX                 | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0,%EBX                          | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x20(%R9),%R9                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMOVNS %RBX,%RAX                     | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nLEA (%RDI),%RBX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RBX,%RDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nAND $-0x4,%R15D                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x4,%RDX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA -0x20(%RAX),%RAX                 | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RDX,0x50(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%RSI),%EDX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSHR $0x2,%EDX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA -0x8(,%RSI,8),%RSI               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x5,%RDX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nVMOVSD %XMM8,%XMM8,%XMM10            | 1     | 1     | 0  | 0    | 0    | 0     | 0    | 0  | 2       | 1\nMOV %RDX,0x48(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R15),%EDX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R15D,0x5c(%RSP)                 | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD $0x2,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x937e(%RIP),%XMM7            | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOVSXD %EDX,%RDX                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RDX,0x40(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nIMUL %RBX,%RDX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 5       | 2\nSAL $0x5,%RDI                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nVMOVSD %XMM7,%XMM7,%XMM9             | 1     | 1     | 0  | 0    | 0    | 0     | 0    | 0  | 2       | 1\nMOV %RAX,0x78(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RSI,0x88(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RDX,0x38(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA 0x3(%R15),%EDX                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EDX,0x34(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOVSXD %EDX,%RDX                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RDX,0x28(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nIMUL %RBX,%RDX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOV %R9,0x70(%RSP)                   | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA 0x4(%R15),%R15D                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R15D,0x30(%RSP)                 | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nVMOVAPD 0x9c06(%RIP),%YMM4           | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOV %RDX,0x20(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOVSXD %R15D,%RDX                    | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nIMUL %RDX,%RBX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOV 0x8(%RSP),%R15                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RDX,0x18(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nVMOVAPD 0x9c08(%RIP),%YMM3           | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOV %RBX,0x10(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R15,%RBX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nADD $0x1,%RBX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RBX,0x8(%RSP)                   | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nNOPL (%RAX)                          | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nJMP 2db53 <pintgr_._omp_fn.2+0x1b3>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 2\nMOV 0x80(%RSP),%RBX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x28(%RBX),%RDX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV (%RDX),%EAX                      | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSUB $0x3,%EAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EAX,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAR $0x1f,%EDX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nIDIVL 0x90(%RSP)                     | 30    | 14.50 | 0  | 0.50 | 0.50 | 14.50 | 0    | 0  | 37-49   | 22-26\nCMP %EDX,0xa8(%RSP)                  | 1     | 0     | 0  | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nJL 2f446 <pintgr_._omp_fn.2+0x1aa6>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0xa8(%RSP),%R11D                 | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %EAX,%R13D                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nIMUL %EAX,%R11D                      | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 3       | 1\nADD %R11D,%EDX                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %EDX,%R13D                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %R13D,%EDX                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJGE 2db46 <pintgr_._omp_fn.2+0x1a6>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0x80(%RSP),%R8                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA 0x3(%RDX),%R15D                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x20(%R8),%RSI                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV (%R8),%R12                       | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x8(%R8),%RBX                    | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV (%RSI),%R10D                     | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %R10D,%R9D                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSUB $0x2,%R9D                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R9D,0x58(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCMP $0x1,%R9D                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJLE 2db46 <pintgr_._omp_fn.2+0x1a6>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0x98(%RSP),%RDI                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOVSXD %R15D,%R14                    | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOVSXD %EDX,%RDX                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA -0x1(%RAX),%EAX                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %RDX,%RAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R14),%R11                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RDI),%RCX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %R14,%RDI                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 5       | 2\nSAL $0x5,%R11                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA (%RAX),%RSI                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x70(%RSP),%R13                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nADD %R14,%R11                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x4(%R10),%R15D                 | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x100(%RBX,%R11,8),%R8          | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nSAL $0x5,%RSI                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %RSI,%RAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %RDI,%R13                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R15D,0x78(%RSP)                 | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R15,%R11,1),%R15               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x68(%RSP),%RDI                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nADD $0x84,%RAX                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0xf8(%RBX,%R15,8),%R14          | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA -0x3(%R10),%R15D                 | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,0x88(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R15),%RAX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSUB $0x1,%RAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0xb(%R13,%RDI,2),%R9             | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nIMUL %RDI,%RAX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 5       | 2\nSAL $0x3,%RCX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RCX,0xb8(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV $0x20,%ECX                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%R9                         | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV $0x20,%ESI                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x8f19(%RIP),%XMM9            | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA (%R15),%R10                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RAX),%RDX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD %XMM9,%XMM9,%XMM11            | 1     | 1     | 0  | 0    | 0    | 0     | 0    | 0  | 2       | 1\nSAL $0x3,%RDX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nVMOVSD 0x8f22(%RIP),%XMM8            | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nADD %RCX,%RDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RDI),%RCX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x20(%RDX),%RAX                 | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%RCX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nVMOVSD %XMM8,%XMM8,%XMM10            | 1     | 1     | 0  | 0    | 0    | 0     | 0    | 0  | 2       | 1\nMOV %R15D,0x5c(%RSP)                 | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nVMOVAPD 0x97da(%RIP),%YMM5           | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nCMOVNS %RDX,%RSI                     | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nTEST %RCX,%RCX                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0,%EDX                          | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RSI,0xb0(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%RDI),%RSI                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVAPD 0x97db(%RIP),%YMM4           | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nCMOVS %RAX,%RDX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nMOV %RSI,%RAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nAND $-0x4,%R10D                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x4,%RAX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RDX,0xa0(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD %R12,%RAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,0x48(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R10),%EAX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD $0x2,%EAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R15),%EDX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCLTQ\nLEA -0x8(,%R15,8),%R15               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,0x40(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nIMUL %RSI,%RAX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 5       | 2\nSHR $0x2,%EDX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nSAL $0x5,%RDX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nSAL $0x5,%RDI                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RAX,0x38(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA 0x3(%R10),%EAX                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EAX,0x34(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCLTQ\nMOV %RAX,0x28(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nIMUL %RSI,%RAX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOV %RDX,0x60(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R10D,0x50(%RSP)                 | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RAX,0x20(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA 0x4(%R10),%EAX                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EAX,0x30(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCLTQ\nMOV %RAX,0x18(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nIMUL %RSI,%RAX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOV %RAX,0x10(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nNOPW (%RAX,%RAX,1)                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nJMP 2db46 <pintgr_._omp_fn.2+0x1a6>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 2\nADD $0x1,%EAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EDX,%EDX\nJMP 2da15 <pintgr_._omp_fn.2+0x75>   | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 2\nADD $0x1,%EAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EDX,%EDX\nJMP 2db9e <pintgr_._omp_fn.2+0x1fe>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 2\nADD $0x1,%EAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EDX,%EDX\nJMP 2eb64 <pintgr_._omp_fn.2+0x11c4> | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 2\nADD $0x1,%EAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EDX,%EDX\nJMP 2e68b <pintgr_._omp_fn.2+0xceb>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 2\nNOPW %CS:(%RAX,%RAX,1)               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nNOPL (%RAX)                          | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\n",
        },
      },
      header = {
        "Warnings:\nDetected a function call instruction: ignoring called function instructions.\nRerun with --follow-calls=append to include them to analysis  or with --follow-calls=inline to simulate inlining.",
        "0% of peak computational performance is used (0.00 out of 4.00 FLOP per cycle (GFLOPS @ 1GHz))",
      },
      brief = {
      },
      gain = {
        {
          workaround = " - Try to reorganize arrays of structures to structures of arrays\n - Consider to permute loops (see vectorization gain report)\n - To reference allocatable arrays, use \"allocatable\" instead of \"pointer\" pointers or qualify them with the \"contiguous\" attribute (Fortran 2008)\n - For structures, limit to one indirection. For example, use a_b%c instead of a%b%c with a_b set to a%b before this function\n",
          title = "Code clean check",
          txt = "Detected a slowdown caused by scalar integer instructions (typically used for address computation).\nBy removing them, you can lower the cost of an iteration from 209.00 to 30.00 cycles (6.97x speedup).",
        },
        {
          workaround = " - Try another compiler or update/tune your current one\n - Make array accesses unit-stride:\n  * If your function streams arrays of structures (AoS), try to use structures of arrays instead (SoA):\ndo i a(i)%x = b(i)%x (slow, non stride 1) => do i a%x(i) = b%x(i) (fast, stride 1)\n",
          details = "Store and arithmetical SSE/AVX instructions are used in scalar version (process only one data element in vector registers).\nSince your execution units are vector units, only a vectorized function can use their full power.\n",
          title = "Vectorization",
          txt = "Your function is probably not vectorized.\nOnly 11% of vector register length is used (average across all SSE/AVX instructions).\nBy vectorizing your function, you can lower the cost of an iteration from 209.00 to 15.44 cycles (13.53x speedup).",
        },
        {
          title = "Execution units bottlenecks",
          txt = "Found no such bottlenecks but see expert reports for more complex bottlenecks.",
        },
      },
      potential = {
      },
    },
  },
  AVG = {
      hint = {
        {
          details = "Calling (and then returning from) a function prevents many compiler optimizations (like vectorization), breaks control flow (which reduces pipeline performance) and executes extra instructions to save/restore the registers used inside it, which is very expensive (dozens of cycles). Consider to inline small functions.\n - unknown: 5 occurrences\n",
          title = "CALL instructions",
          txt = "Detected function call instructions.\n",
        },
        {
          workaround = "Avoid mixing data with different types. In particular, check if the type of constants is the same as array elements.",
          details = " - CLTQ: 4 occurrences\n",
          title = "Conversion instructions",
          txt = "Detected expensive conversion instructions.",
        },
        {
          title = "Type of elements and instruction set",
          txt = "No instructions are processing arithmetic or math operations on FP elements. This function is probably writing/copying data or processing integer elements.",
        },
        {
          title = "Matching between your function (in the source code) and the binary function",
          txt = "The binary function does not contain any FP arithmetical operations.\nThe binary function is loading 556 bytes.\nThe binary function is storing 364 bytes.",
        },
      },
      expert = {
        {
          title = "General properties",
          txt = "nb instructions    : 406\nloop length        : 1750\nused x86 registers : 16\nused mmx registers : 0\nused xmm registers : 6\nused ymm registers : 3\nused zmm registers : 0\nnb stack references: 27\n",
        },
        {
          title = "Front-end",
          txt = "MACRO FUSION NOT POSSIBLE\ninstruction fetch    : 110.00 cycles\ninstruction queue    : 203.00 cycles\ndecoding             : 203.00 cycles\nmicro-operation queue: 209.00 cycles\nfront end            : 209.00 cycles\n",
        },
        {
          title = "Back-end",
          txt = "       | P0     | P1   | P2    | P3    | P4     | P5     | P6\n----------------------------------------------------------------\nuops   | 115.00 | 0.00 | 64.00 | 64.00 | 140.00 | 140.00 | 60.00\ncycles | 115.00 | 0.00 | 64.00 | 64.00 | 140.00 | 140.00 | 60.00\n\nCycles executing div or sqrt instructions: 88.00-104.00\n",
        },
        {
          title = "Cycles summary",
          txt = "Front-end : 209.00\nDispatch  : 140.00\nDIV/SQRT  : 88.00-104.00\nOverall L1: 209.00\n",
        },
        {
          title = "Vectorization ratios",
          txt = "INT\nall    : 1%\nload   : 0%\nstore  : 0%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 4%\nFP\nall     : 33%\nload    : 50%\nstore   : NA (no store vectorizable/vectorized instructions)\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 0%\nINT+FP\nall     : 5%\nload    : 25%\nstore   : 0%\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: 0%\nother   : 4%\n",
        },
        {
          title = "Vector efficiency ratios",
          txt = "INT\nall    : 9%\nload   : 6%\nstore  : 10%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 8%\nFP\nall     : 25%\nload    : 31%\nstore   : NA (no store vectorizable/vectorized instructions)\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 12%\nINT+FP\nall     : 11%\nload    : 18%\nstore   : 10%\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: 6%\nother   : 9%\n",
        },
        {
          title = "Cycles and memory resources usage",
          txt = "Assuming all data fit into the L1 cache, each call to the function takes 209.00 cycles. At this rate:\n - 2% of peak load performance is reached (2.66 out of 128.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 2% of peak store performance is reached (1.74 out of 64.00 bytes stored per cycle (GB/s @ 1GHz))\n",
        },
        {
          title = "Front-end bottlenecks",
          txt = "Performance is limited by instruction throughput (loading/decoding program instructions to execution core) (front-end is a bottleneck).\n",
        },
        {
          title = "ASM code",
          txt = "In the binary file, the address of the function is: 2d9a0\n\nInstruction                          | Nb FU | P0    | P1 | P2   | P3   | P4    | P5   | P6 | Latency | Recip. throughput\n-------------------------------------------------------------------------------------------------------------------------\nPUSH %RBP                            | 1     | 0     | 0  | 0    | 0    | 1     | 1    | 0  | 0       | 1\nMOV %RSP,%RBP                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nPUSH %R15                            | 1     | 0     | 0  | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R14                            | 1     | 0     | 0  | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R13                            | 1     | 0     | 0  | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R12                            | 1     | 0     | 0  | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %RBX                            | 1     | 0     | 0  | 0    | 0    | 1     | 1    | 0  | 0       | 1\nLEA (%RDI),%RBX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nAND $-0x40,%RSP                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0xc0(%RSP),%RSP                 | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x40(%RDI),%RDX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x48(%RDI),%RAX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x38(%RDI),%RCX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RDI,0x80(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RDX,0x98(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RCX,0x68(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RAX,0x70(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 2080 <@plt_start@+0x60>         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV %EAX,0x90(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%RAX),%R14D                     | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 2190 <@plt_start@+0x170>        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x28(%RBX),%RSI                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA (%RAX),%EDI                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EAX,0xa8(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV (%RSI),%EAX                      | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %EAX,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAR $0x1f,%EDX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nIDIV %R14D                           | 29    | 14.50 | 0  | 0    | 0    | 14.50 | 0    | 0  | 37-49   | 22-26\nCMP %EDX,%EDI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJL 2efd9 <pintgr_._omp_fn.2+0x1639>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0xa8(%RSP),%R8D                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %EAX,%R9D                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nIMUL %EAX,%R8D                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 3       | 1\nADD %R8D,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %EDX,%R9D                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %R9D,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJGE 2db34 <pintgr_._omp_fn.2+0x194>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0x80(%RSP),%R11                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA 0x1(%RDX),%R10D                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x20(%R11),%R12                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x8(%R11),%RBX                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x10(%R11),%R8                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV (%R12),%R15D                     | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nTEST %R15D,%R15D                     | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJLE 2db34 <pintgr_._omp_fn.2+0x194>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOVSXD %R10D,%RCX                    | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA -0x1(%RAX),%EAX                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RCX,%R13                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOVSXD %EDX,%RDX                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nSAL $0x5,%R13                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %RAX,%RDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R13,%RCX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RDX,%R11                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA -0x1(%R15),%ESI                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RCX,%R14                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAL $0x5,%R11                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA (%RCX),%R12                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %RSI,%R14                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %RDX,%R11                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $-0x108,%RDI                     | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $-0x100,%R9                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%R12                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD $0x42,%R11                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%R14                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %RDI,%R12                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R9,%R14                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x8(,%RSI,8),%R13                | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R11,0xa0(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R8),%R15                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nNOPL (%RAX,%RAX,1)                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nCALL 2220 <@plt_start@+0x200>        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nCMPL $-0x1,0xeda0(%RIP)              | 1     | 0     | 0  | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nJE 2eb3a <pintgr_._omp_fn.2+0x119a>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMPL $-0x1,0xec53(%RIP)              | 1     | 0     | 0  | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nJE 2e661 <pintgr_._omp_fn.2+0xcc1>   | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCALL 2270 <@plt_start@+0x250>        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nCMP $0x1,%AL                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJNE 2db6f <pintgr_._omp_fn.2+0x1cf>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0x80(%RSP),%RAX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x30(%RAX),%RDX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOVQ $0,(%RDX)                       | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nCALL 2220 <@plt_start@+0x200>        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x80(%RSP),%R9                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x28(%R9),%RSI                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV (%RSI),%EAX                      | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSUB $0x4,%EAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EAX,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAR $0x1f,%EDX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nIDIVL 0x90(%RSP)                     | 30    | 14.50 | 0  | 0.50 | 0.50 | 14.50 | 0    | 0  | 37-49   | 22-26\nCMP %EDX,0xa8(%RSP)                  | 1     | 0     | 0  | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nJL 2efe3 <pintgr_._omp_fn.2+0x1643>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0xa8(%RSP),%EBX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %EAX,%ECX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nVPXOR %XMM0,%XMM0,%XMM0\nIMUL %EAX,%EBX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 3       | 1\nADD %EBX,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %EDX,%ECX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %ECX,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJGE 2e444 <pintgr_._omp_fn.2+0xaa4>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0x80(%RSP),%RDI                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA 0x3(%RDX),%R15D                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVSXD %R15D,%R8                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA -0x1(%RAX),%EAX                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R8,%R9                          | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOVSXD %EDX,%RDX                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV 0x20(%RDI),%R11                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nADD %RAX,%RDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x5,%R9                         | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RDX,%RBX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV 0x8(%RDI),%R10                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nADD %R8,%R9                          | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV (%R11),%R12D                     | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x10(%RDI),%R14                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %R9,0xb8(%RSP)                   | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R10),%RCX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%R9                         | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA (%R12),%R13D                     | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x5,%RBX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nSUB $0x3,%R13D                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R9,%RSI                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nADD %RDX,%RBX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD $0x108,%RSI                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x4(%R12),%EDI                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x5(%R12),%R11D                 | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD $0x84,%RBX                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R13D,0xa0(%RSP)                 | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R10),%R13                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R14,0xb0(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R14,%R9,1),%R15                | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R9,%RCX                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %RSI,%R13                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R14,%RSI,1),%R14               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R10),%R12                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RBX,0x78(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %EDI,0x68(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R11D,0x70(%RSP)                 | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nNOPL (%RAX)                          | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV 0x80(%RSP),%R10                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x30(%R10),%RSI                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV (%RSI),%RCX                      | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA -0x28(%RBP),%RSP                 | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nPOP %RBX                             | 2     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R12                             | 2     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R13                             | 2     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R14                             | 2     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R15                             | 2     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %RBP                             | 2     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nRET\nNOPL (%RAX)                          | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV 0x80(%RSP),%RDX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x28(%RDX),%RAX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV (%RAX),%EAX                      | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSUB $0x3,%EAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EAX,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAR $0x1f,%EDX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nIDIVL 0x90(%RSP)                     | 30    | 14.50 | 0  | 0.50 | 0.50 | 14.50 | 0    | 0  | 37-49   | 22-26\nCMP %EDX,0xa8(%RSP)                  | 1     | 0     | 0  | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nJL 2f450 <pintgr_._omp_fn.2+0x1ab0>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0xa8(%RSP),%ESI                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %EAX,%R10D                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nIMUL %EAX,%ESI                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 3       | 1\nADD %ESI,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %EDX,%R10D                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %R10D,%EDX                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJGE 2db53 <pintgr_._omp_fn.2+0x1b3>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0x80(%RSP),%RBX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA 0x3(%RDX),%EDI                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x20(%RBX),%RCX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x18(%RBX),%R15                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV (%RBX),%R11                      | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV (%RCX),%ECX                      | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x10(%RBX),%R12                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %ECX,%R9D                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSUB $0x2,%R9D                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R9D,0x58(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCMP $0x1,%R9D                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJLE 2db53 <pintgr_._omp_fn.2+0x1b3>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOVSXD %EDX,%RDX                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA -0x1(%RAX),%EAX                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %RDX,%RAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVSXD %EDI,%R14                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RAX,%RDI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV %R14,%R10                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAL $0x5,%RDI                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA -0x4(%RCX),%ESI                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x5,%R10                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %RDI,%RAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD $0x84,%RAX                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R14,%R10                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,0xb0(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA -0x100(%R12,%R10,8),%R8          | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV (%R15),%EAX                      | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x98(%RSP),%R9                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x68(%RSP),%RBX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %ESI,0x68(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nSUB $0x1,%EAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCLTQ\nLEA (%RSI,%R10,1),%RSI               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RAX,%RAX,4),%RAX               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %R14,%R9                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 5       | 2\nLEA -0xf8(%R12,%RSI,8),%R14          | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA (%RAX),%RSI                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD $0x5,%RSI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RBX),%R13                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RSI,0xb8(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA -0x3(%RCX),%ESI                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RSI,%RDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nADD 0x70(%RSP),%R9                   | 1     | 0     | 0  | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nSUB $0x1,%RDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R13,%R13                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %RBX,%RDX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOV %RAX,0x8(%RSP)                   | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD %R9,%R13                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RBX),%R9                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nNEG %R9                              | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x20,%ECX                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R9,%R9                          | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RBX),%RDI                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RDX),%RAX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RSI),%R15                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%RAX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %R9,0xa0(%RSP)                   | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD %RCX,%RAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%RBX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV $0x20,%R9D                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %ESI,0x60(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RBX,%RCX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nVMOVSD 0x93bb(%RIP),%XMM8            | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nCMOVNS %RAX,%R9                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nTEST %RBX,%RBX                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x20(%RAX),%RAX                 | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0,%EBX                          | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x20(%R9),%R9                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMOVNS %RBX,%RAX                     | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nLEA (%RDI),%RBX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RBX,%RDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nAND $-0x4,%R15D                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x4,%RDX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA -0x20(%RAX),%RAX                 | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RDX,0x50(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%RSI),%EDX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSHR $0x2,%EDX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA -0x8(,%RSI,8),%RSI               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x5,%RDX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nVMOVSD %XMM8,%XMM8,%XMM10            | 1     | 1     | 0  | 0    | 0    | 0     | 0    | 0  | 2       | 1\nMOV %RDX,0x48(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R15),%EDX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R15D,0x5c(%RSP)                 | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD $0x2,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x937e(%RIP),%XMM7            | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOVSXD %EDX,%RDX                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RDX,0x40(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nIMUL %RBX,%RDX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 5       | 2\nSAL $0x5,%RDI                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nVMOVSD %XMM7,%XMM7,%XMM9             | 1     | 1     | 0  | 0    | 0    | 0     | 0    | 0  | 2       | 1\nMOV %RAX,0x78(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RSI,0x88(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RDX,0x38(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA 0x3(%R15),%EDX                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EDX,0x34(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOVSXD %EDX,%RDX                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RDX,0x28(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nIMUL %RBX,%RDX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOV %R9,0x70(%RSP)                   | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA 0x4(%R15),%R15D                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R15D,0x30(%RSP)                 | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nVMOVAPD 0x9c06(%RIP),%YMM4           | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOV %RDX,0x20(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOVSXD %R15D,%RDX                    | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nIMUL %RDX,%RBX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOV 0x8(%RSP),%R15                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RDX,0x18(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nVMOVAPD 0x9c08(%RIP),%YMM3           | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOV %RBX,0x10(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R15,%RBX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nADD $0x1,%RBX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RBX,0x8(%RSP)                   | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nNOPL (%RAX)                          | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nJMP 2db53 <pintgr_._omp_fn.2+0x1b3>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 2\nMOV 0x80(%RSP),%RBX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x28(%RBX),%RDX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV (%RDX),%EAX                      | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSUB $0x3,%EAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EAX,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAR $0x1f,%EDX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nIDIVL 0x90(%RSP)                     | 30    | 14.50 | 0  | 0.50 | 0.50 | 14.50 | 0    | 0  | 37-49   | 22-26\nCMP %EDX,0xa8(%RSP)                  | 1     | 0     | 0  | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nJL 2f446 <pintgr_._omp_fn.2+0x1aa6>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0xa8(%RSP),%R11D                 | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %EAX,%R13D                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nIMUL %EAX,%R11D                      | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 3       | 1\nADD %R11D,%EDX                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %EDX,%R13D                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %R13D,%EDX                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJGE 2db46 <pintgr_._omp_fn.2+0x1a6>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0x80(%RSP),%R8                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA 0x3(%RDX),%R15D                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x20(%R8),%RSI                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV (%R8),%R12                       | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x8(%R8),%RBX                    | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV (%RSI),%R10D                     | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %R10D,%R9D                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSUB $0x2,%R9D                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R9D,0x58(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCMP $0x1,%R9D                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJLE 2db46 <pintgr_._omp_fn.2+0x1a6>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0x98(%RSP),%RDI                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOVSXD %R15D,%R14                    | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOVSXD %EDX,%RDX                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA -0x1(%RAX),%EAX                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %RDX,%RAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R14),%R11                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RDI),%RCX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %R14,%RDI                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 5       | 2\nSAL $0x5,%R11                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA (%RAX),%RSI                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x70(%RSP),%R13                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nADD %R14,%R11                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x4(%R10),%R15D                 | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x100(%RBX,%R11,8),%R8          | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nSAL $0x5,%RSI                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %RSI,%RAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %RDI,%R13                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R15D,0x78(%RSP)                 | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R15,%R11,1),%R15               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x68(%RSP),%RDI                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nADD $0x84,%RAX                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0xf8(%RBX,%R15,8),%R14          | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA -0x3(%R10),%R15D                 | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,0x88(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R15),%RAX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSUB $0x1,%RAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0xb(%R13,%RDI,2),%R9             | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nIMUL %RDI,%RAX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 5       | 2\nSAL $0x3,%RCX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RCX,0xb8(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV $0x20,%ECX                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%R9                         | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV $0x20,%ESI                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x8f19(%RIP),%XMM9            | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA (%R15),%R10                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RAX),%RDX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD %XMM9,%XMM9,%XMM11            | 1     | 1     | 0  | 0    | 0    | 0     | 0    | 0  | 2       | 1\nSAL $0x3,%RDX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nVMOVSD 0x8f22(%RIP),%XMM8            | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nADD %RCX,%RDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RDI),%RCX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x20(%RDX),%RAX                 | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%RCX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nVMOVSD %XMM8,%XMM8,%XMM10            | 1     | 1     | 0  | 0    | 0    | 0     | 0    | 0  | 2       | 1\nMOV %R15D,0x5c(%RSP)                 | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nVMOVAPD 0x97da(%RIP),%YMM5           | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nCMOVNS %RDX,%RSI                     | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nTEST %RCX,%RCX                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0,%EDX                          | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RSI,0xb0(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%RDI),%RSI                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVAPD 0x97db(%RIP),%YMM4           | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nCMOVS %RAX,%RDX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nMOV %RSI,%RAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nAND $-0x4,%R10D                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x4,%RAX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RDX,0xa0(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD %R12,%RAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,0x48(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R10),%EAX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD $0x2,%EAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R15),%EDX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCLTQ\nLEA -0x8(,%R15,8),%R15               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,0x40(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nIMUL %RSI,%RAX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 5       | 2\nSHR $0x2,%EDX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nSAL $0x5,%RDX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nSAL $0x5,%RDI                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RAX,0x38(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA 0x3(%R10),%EAX                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EAX,0x34(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCLTQ\nMOV %RAX,0x28(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nIMUL %RSI,%RAX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOV %RDX,0x60(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R10D,0x50(%RSP)                 | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RAX,0x20(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA 0x4(%R10),%EAX                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EAX,0x30(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCLTQ\nMOV %RAX,0x18(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nIMUL %RSI,%RAX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOV %RAX,0x10(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nNOPW (%RAX,%RAX,1)                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nJMP 2db46 <pintgr_._omp_fn.2+0x1a6>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 2\nADD $0x1,%EAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EDX,%EDX\nJMP 2da15 <pintgr_._omp_fn.2+0x75>   | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 2\nADD $0x1,%EAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EDX,%EDX\nJMP 2db9e <pintgr_._omp_fn.2+0x1fe>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 2\nADD $0x1,%EAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EDX,%EDX\nJMP 2eb64 <pintgr_._omp_fn.2+0x11c4> | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 2\nADD $0x1,%EAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EDX,%EDX\nJMP 2e68b <pintgr_._omp_fn.2+0xceb>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 2\nNOPW %CS:(%RAX,%RAX,1)               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nNOPL (%RAX)                          | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\n",
        },
      },
      header = {
        "Warnings:\nDetected a function call instruction: ignoring called function instructions.\nRerun with --follow-calls=append to include them to analysis  or with --follow-calls=inline to simulate inlining.",
        "0% of peak computational performance is used (0.00 out of 4.00 FLOP per cycle (GFLOPS @ 1GHz))",
      },
      brief = {
      },
      gain = {
        {
          workaround = " - Try to reorganize arrays of structures to structures of arrays\n - Consider to permute loops (see vectorization gain report)\n - To reference allocatable arrays, use \"allocatable\" instead of \"pointer\" pointers or qualify them with the \"contiguous\" attribute (Fortran 2008)\n - For structures, limit to one indirection. For example, use a_b%c instead of a%b%c with a_b set to a%b before this function\n",
          title = "Code clean check",
          txt = "Detected a slowdown caused by scalar integer instructions (typically used for address computation).\nBy removing them, you can lower the cost of an iteration from 209.00 to 30.00 cycles (6.97x speedup).",
        },
        {
          workaround = " - Try another compiler or update/tune your current one\n - Make array accesses unit-stride:\n  * If your function streams arrays of structures (AoS), try to use structures of arrays instead (SoA):\ndo i a(i)%x = b(i)%x (slow, non stride 1) => do i a%x(i) = b%x(i) (fast, stride 1)\n",
          details = "Store and arithmetical SSE/AVX instructions are used in scalar version (process only one data element in vector registers).\nSince your execution units are vector units, only a vectorized function can use their full power.\n",
          title = "Vectorization",
          txt = "Your function is probably not vectorized.\nOnly 11% of vector register length is used (average across all SSE/AVX instructions).\nBy vectorizing your function, you can lower the cost of an iteration from 209.00 to 15.44 cycles (13.53x speedup).",
        },
        {
          title = "Execution units bottlenecks",
          txt = "Found no such bottlenecks but see expert reports for more complex bottlenecks.",
        },
      },
      potential = {
      },
    },
  common = {
    header = {
      "The function is defined in /users/user2210/NPB3.4-MZ-MPI/LU-MZ/pintgr.f90:171-187,193-199,206-215.\n",
      "Warnings:\nIgnoring paths for analysis",
    },
  },
}
