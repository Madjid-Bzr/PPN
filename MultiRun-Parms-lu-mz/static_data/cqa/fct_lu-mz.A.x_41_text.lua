_cqa_text_report = {
  paths = {
    {
      hint = {
        {
          details = "Calling (and then returning from) a function prevents many compiler optimizations (like vectorization), breaks control flow (which reduces pipeline performance) and executes extra instructions to save/restore the registers used inside it, which is very expensive (dozens of cycles). Consider to inline small functions.\n - unknown: 2 occurrences\n",
          title = "CALL instructions",
          txt = "Detected function call instructions.\n",
        },
        {
          workaround = "Avoid mixing data with different types. In particular, check if the type of constants is the same as array elements.",
          details = " - CLTQ: 1 occurrences\n",
          title = "Conversion instructions",
          txt = "Detected expensive conversion instructions.",
        },
        {
          title = "Type of elements and instruction set",
          txt = "81 SSE or AVX instructions are processing arithmetic or math operations on double precision FP elements in scalar mode (one at a time).\n",
        },
        {
          title = "Matching between your function (in the source code) and the binary function",
          txt = "The binary function is composed of 101 FP arithmetical operations:\n - 25: addition or subtraction (20 inside FMA instructions)\n - 76: multiply (20 inside FMA instructions)\nThe binary function is loading 484 bytes (60 double precision FP elements).\nThe binary function is storing 584 bytes (73 double precision FP elements).",
        },
        {
          title = "Arithmetic intensity",
          txt = "Arithmetic intensity is 0.09 FP operations per loaded or stored byte.",
        },
      },
      expert = {
        {
          title = "General properties",
          txt = "nb instructions    : 329\nloop length        : 1915\nused x86 registers : 16\nused mmx registers : 0\nused xmm registers : 27\nused ymm registers : 0\nused zmm registers : 0\nnb stack references: 80\nADD-SUB / MUL ratio: 0.09\n",
        },
        {
          title = "Front-end",
          txt = "MACRO FUSION NOT POSSIBLE\ninstruction fetch    : 120.00 cycles\ninstruction queue    : 164.50 cycles\ndecoding             : 164.50 cycles\nmicro-operation queue: 169.00 cycles\nfront end            : 169.00 cycles\n",
        },
        {
          title = "Back-end",
          txt = "       | P0    | P1    | P2    | P3    | P4    | P5    | P6\n--------------------------------------------------------------\nuops   | 59.50 | 59.50 | 71.50 | 71.50 | 57.50 | 57.50 | 80.00\ncycles | 59.50 | 59.50 | 71.50 | 71.50 | 57.50 | 57.50 | 80.00\n\nCycles executing div or sqrt instructions: 22.00-26.00\n",
        },
        {
          title = "Cycles summary",
          txt = "Front-end : 169.00\nDispatch  : 80.00\nDIV/SQRT  : 22.00-26.00\nOverall L1: 169.00\n",
        },
        {
          title = "Vectorization ratios",
          txt = "INT\nall    : 0%\nload   : 0%\nstore  : 0%\nmul    : 0%\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 0%\nFP\nall     : 4%\nload    : 0%\nstore   : 0%\nmul     : 0%\nadd-sub : 0%\nfma     : 0%\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 60%\nINT+FP\nall     : 4%\nload    : 0%\nstore   : 0%\nmul     : 0%\nadd-sub : 0%\nfma     : 0%\ndiv/sqrt: 0%\nother   : 31%\n",
        },
        {
          title = "Vector efficiency ratios",
          txt = "INT\nall    : 10%\nload   : 12%\nstore  : 11%\nmul    : 12%\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 9%\nFP\nall     : 13%\nload    : 12%\nstore   : 12%\nmul     : 12%\nadd-sub : 12%\nfma     : 12%\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 20%\nINT+FP\nall     : 12%\nload    : 12%\nstore   : 12%\nmul     : 12%\nadd-sub : 12%\nfma     : 12%\ndiv/sqrt: 6%\nother   : 14%\n",
        },
        {
          title = "Cycles and memory resources usage",
          txt = "Assuming all data fit into the L1 cache, each call to the function takes 169.00 cycles. At this rate:\n - 2% of peak load performance is reached (2.86 out of 128.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 5% of peak store performance is reached (3.46 out of 64.00 bytes stored per cycle (GB/s @ 1GHz))\n",
        },
        {
          title = "Front-end bottlenecks",
          txt = "Performance is limited by instruction throughput (loading/decoding program instructions to execution core) (front-end is a bottleneck).\n",
        },
        {
          title = "ASM code",
          txt = "In the binary file, the address of the function is: 24670\n\nInstruction                            | Nb FU | P0    | P1   | P2   | P3   | P4    | P5   | P6 | Latency | Recip. throughput\n-----------------------------------------------------------------------------------------------------------------------------\nPUSH %R15                              | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R14                              | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R13                              | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nLEA (%R9),%R13                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nPUSH %R12                              | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nLEA (%R8),%R12                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nPUSH %RBP                              | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %RBX                              | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nLEA (%RDI),%RBX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x278(%RSP),%RSP                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x2d0(%RSP),%RAX                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RDX,0x1f0(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RSI,0x1e8(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV (%RAX),%R14D                       | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RCX,0x1b8(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 2080 <@plt_start@+0x60>           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nLEA (%RAX),%EBP                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 2190 <@plt_start@+0x170>          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nLEA (%RAX),%EDI                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R14D,%EAX                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSUB $0x2,%EAX                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EAX,%EDX                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAR $0x1f,%EDX                         | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nIDIV %EBP                              | 29    | 14.50 | 0    | 0    | 0    | 14.50 | 0    | 0  | 37-49   | 22-26\nCMP %EDX,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJL 25a98 <jacld_+0x1428>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nIMUL %EAX,%EDI                         | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 3       | 1\nMOV %EAX,%ESI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nADD %EDX,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %EDI,%ESI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %ESI,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJGE 25a85 <jacld_+0x1415>              | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0x2c8(%RSP),%RCX                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nXOR %EBP,%EBP\nMOVSXD %R14D,%RDX                      | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA 0x2(%RDI),%EAX                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EAX,0x238(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOVSXD (%RCX),%R8                      | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVMOVSD 0x183a4(%RIP),%XMM5             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x17f9c(%RIP),%XMM2             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOV %R8D,%R10D                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA (%R8,%R8,4),%R14                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD $0x1,%R10D                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R14,%R14,4),%R14                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVSXD %R10D,%R15                      | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA (%R8),%R9                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD $0x1,%R15                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x2(%R9),%R9D                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVSXD %R9D,%R10                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV $-0x1f,%R8                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x18363(%RIP),%XMM17            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nCMOVS %RBP,%R15                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nVMOVSD 0x17f47(%RIP),%XMM3             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOV %R15,%RCX                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV %R15,%R11                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nIMUL %RDX,%RCX                         | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOV %R15,0x208(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nVMOVSD 0x1830d(%RIP),%XMM10            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x17f0d(%RIP),%XMM7             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x182d5(%RIP),%XMM0             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x1831b(%RIP),%XMM18            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nTEST %RCX,%RCX                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x182e0(%RIP),%XMM11            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x182b0(%RIP),%XMM1             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nCMOVS %RBP,%RCX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nVMOVSD 0x182f2(%RIP),%XMM19            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nNEG %R11                               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x182b7(%RIP),%XMM12            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nSUB %RCX,%R11                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x18284(%RIP),%XMM4             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nTEST %R14,%R14                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x182c7(%RIP),%XMM20            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x1828f(%RIP),%XMM15            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nCMOVS %RBP,%R14                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nVMOVSD 0x1825b(%RIP),%XMM6             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOV %R14,0x1f8(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nSUB %R14,%R8                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x18296(%RIP),%XMM21            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA 0xa(%R10,%R10,4),%R14              | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV 0x18222(%RIP),%R10D                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nTEST %R14,%R14                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x1824d(%RIP),%XMM16            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x1821d(%RIP),%XMM8             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nCMOVS %RBP,%R14                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nVMOVSD 0x17e59(%RIP),%XMM14            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nIMUL %R14,%RDX                         | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOV %R14,%R9                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV %R9,0x200(%RSP)                    | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV $0x4,%R14D                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x17e52(%RIP),%XMM22            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x17e60(%RIP),%XMM23            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nTEST %RDX,%RDX                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMOVS %RBP,%RDX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nSUB %R9,%R14                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x181b3(%RIP),%R9D                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSUB %RDX,%R14                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %R10D,%R9D                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJG 25a85 <jacld_+0x1415>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nVMULSD %XMM10,%XMM3,%XMM9              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM5,%XMM5,%XMM25              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x129d8(%RIP),%XMM13            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nCLTQ\nMOV %RAX,%RDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA 0x2(%RSI),%ESI                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL 0x1f8(%RSP),%RAX                  | 1     | 0     | 0    | 1    | 0    | 1     | 0    | 0  | 5       | 2\nMOV %ESI,0x23c(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOVSXD (%RBX),%RSI                     | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSUB $0x1,%RDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVFMADD231SD %XMM17,%XMM2,%XMM9         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM0,%XMM7,%XMM9          | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD132SD %XMM25,%XMM13,%XMM9        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x13340(%RIP),%XMM13            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD %XMM9,0x28(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM2,%XMM2,%XMM9               | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVFMADD132SD %XMM13,%XMM3,%XMM9         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM9,%XMM7,%XMM9               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nADD %R8,%RAX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RSI),%R8                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %RCX,%R8                          | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nVMULSD 0x13810(%RIP),%XMM3,%XMM26      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM9,0x30(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nSUB %R9D,%R10D                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMULSD %XMM25,%XMM9,%XMM9              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nIMUL %RDX,%RSI                         | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOV %RAX,0x1c8(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nIMUL %RDI,%R15                         | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nLEA (%R8),%RBX                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R11,%RBX                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVFMADD231SD 0x137d9(%RIP),%XMM2,%XMM26 | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nLEA (%RSI),%RAX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVFMADD231SD 0x137cc(%RIP),%XMM7,%XMM26 | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMULSD 0x13294(%RIP),%XMM9,%XMM9       | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nADD %R14,%RAX                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x137bf(%RIP),%XMM24            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA (%R15),%RBP                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RBX,0x1c0(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nSUB %RCX,%R8                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x200(%RSP),%R15                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA (%RSI),%RCX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD %XMM25,0x20(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nSUB %RDX,%RCX                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD %XMM9,0x38(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nADD %R11,%R8                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x13252(%RIP),%XMM9             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nADD %R14,%RCX                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMULSD %XMM25,%XMM9,%XMM9              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOVSXD %R9D,%R11                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RAX,0x210(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R11,%R11,4),%R14                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSUB %R15,%RSI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %R15,%RDI                         | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nLEA (%R14,%R14,4),%R15                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSUB %RDX,%RSI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x2(%R14),%RAX                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD %XMM9,0x40(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM11,%XMM3,%XMM9              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nSAL $0x3,%R15                          | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %R15,%RBX                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA 0x30(%R12,%R15,1),%R12             | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD $0x30,%RBX                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x30(%R13,%R15,1),%R13             | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nVFMADD231SD %XMM18,%XMM2,%XMM9         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM1,%XMM7,%XMM9          | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM25,%XMM9,%XMM9              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM9,0x48(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM3,%XMM3,%XMM9               | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVFMADD132SD %XMM13,%XMM2,%XMM9         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM9,%XMM7,%XMM9               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM9,0x50(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM25,%XMM9,%XMM9              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD 0x131cf(%RIP),%XMM9,%XMM9       | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM9,0x58(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM12,%XMM3,%XMM9              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM19,%XMM2,%XMM9         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM4,%XMM7,%XMM9          | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM25,%XMM9,%XMM9              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM9,0x60(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVADDSD %XMM3,%XMM2,%XMM9               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD132SD %XMM7,%XMM9,%XMM13         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM13,0x68(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM25,%XMM13,%XMM13            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM9,%XMM7,%XMM9               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD 0x1318b(%RIP),%XMM13,%XMM13     | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM13,0x70(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM15,%XMM3,%XMM13             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM20,%XMM2,%XMM13        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM6,%XMM7,%XMM13         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM25,%XMM13,%XMM13            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM13,0x78(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0x13691(%RIP),%XMM3,%XMM13      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVFMADD132SD %XMM2,%XMM13,%XMM24        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD 0x13681(%RIP),%XMM7,%XMM24 | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM24,0x80(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM26,0x88(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVFMADD231SD 0x13668(%RIP),%XMM2,%XMM13 | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD 0x13667(%RIP),%XMM7,%XMM13 | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM13,0x90(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0x1365e(%RIP),%XMM9,%XMM13      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nMOV %R8,0x218(%RSP)                    | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nVMULSD %XMM25,%XMM9,%XMM9              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOV %RCX,0x220(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nVMOVSD %XMM13,0x98(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0x13637(%RIP),%XMM9,%XMM13      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM16,%XMM3,%XMM9              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM3,%XMM5,%XMM3               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM13,0xa0(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVFMADD231SD %XMM21,%XMM2,%XMM9         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM8,%XMM7,%XMM9          | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM25,%XMM9,%XMM13             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM3,0x8(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM7,%XMM5,%XMM25              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM3,%XMM10,%XMM10             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM13,0xa8(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM3,%XMM11,%XMM11             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM25,%XMM0,%XMM7              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVQ 0x135c0(%RIP),%XMM0              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM25,%XMM6,%XMM6              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM25,%XMM1,%XMM1              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVXORPD %XMM0,%XMM7,%XMM9               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMULSD %XMM14,%XMM5,%XMM7              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM6,0xe0(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0x135c0(%RIP),%XMM25,%XMM6      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM1,0xc8(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM25,%XMM4,%XMM4              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x13049(%RIP),%XMM1             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD %XMM7,%XMM7,%XMM14              | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVMULSD %XMM25,%XMM8,%XMM8              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVXORPD %XMM0,%XMM14,%XMM13             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVSD %XMM6,0x100(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0x13592(%RIP),%XMM7,%XMM14      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM9,0xb0(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM22,%XMM5,%XMM6              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM13,0xb8(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0x13028(%RIP),%XMM25,%XMM9      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM4,0xd0(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM1,%XMM7,%XMM13              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM14,0xd8(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0x13538(%RIP),%XMM25,%XMM4      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM8,0x108(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0x1352d(%RIP),%XMM25,%XMM14     | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM9,0xc0(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVXORPD %XMM0,%XMM13,%XMM9              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMULSD %XMM1,%XMM6,%XMM8               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVXORPD %XMM0,%XMM10,%XMM13             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVSD %XMM9,0xe8(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM6,%XMM6,%XMM9               | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVMULSD %XMM3,%XMM12,%XMM12             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM4,0xf0(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVXORPD %XMM0,%XMM9,%XMM4               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVSD %XMM14,0xf8(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM3,%XMM3,%XMM14              | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVMOVSD %XMM13,0x110(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVXORPD %XMM0,%XMM8,%XMM3               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMULSD %XMM2,%XMM5,%XMM8               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM4,0x118(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM11,0x120(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD 0x134ba(%RIP),%XMM10            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM14,%XMM10,%XMM13            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x134b5(%RIP),%XMM9             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM14,%XMM15,%XMM15            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x134b0(%RIP),%XMM11            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM23,%XMM5,%XMM5              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM12,0x128(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM8,%XMM17,%XMM2              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM13,0x140(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM14,%XMM9,%XMM4              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM15,0x138(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM5,%XMM5,%XMM15              | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVMULSD %XMM14,%XMM11,%XMM12            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVXORPD %XMM0,%XMM15,%XMM10             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVSD %XMM3,0x130(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVXORPD %XMM0,%XMM2,%XMM3               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMULSD %XMM14,%XMM16,%XMM14            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM3,0x160(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM8,%XMM18,%XMM13             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM10,0x168(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD 0x13434(%RIP),%XMM3             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD %XMM14,0x158(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD 0x13433(%RIP),%XMM10            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x13423(%RIP),%XMM14            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM1,%XMM5,%XMM9               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM12,0x150(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM8,%XMM19,%XMM11             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM8,0x228(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM8,%XMM20,%XMM12             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM13,0x170(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM8,%XMM14,%XMM2              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOV 0x2b8(%RSP),%RDX                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVMULSD %XMM8,%XMM3,%XMM15              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM4,0x148(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVXORPD %XMM0,%XMM9,%XMM4               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMULSD %XMM8,%XMM10,%XMM13             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nADD %RDX,%RBX                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD %XMM12,0x188(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM8,%XMM21,%XMM8              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM4,0x178(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM11,0x180(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM2,0x190(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM15,0x198(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM13,0x1a0(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM8,0x1a8(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nMOV %R11,0x1d0(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R14,0x240(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RSI,0x230(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RBX,0x268(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RAX,0x248(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R12,0x260(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R13,0x258(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV 0x2b0(%RSP),%R8                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVMOVSD 0x12e6c(%RIP),%XMM12            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOV %R10,0x1b0(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD %R8,%R15                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD $0x30,%R15                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R15,0x250(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nNOPW %CS:(%RAX,%RAX,1)                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nXCHG %AX,%AX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA 0x278(%RSP),%RSP                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nPOP %RBX                               | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %RBP                               | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R12                               | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R13                               | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R14                               | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R15                               | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nRET\nADD $0x1,%EAX                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EDX,%EDX\nJMP 246d1 <jacld_+0x61>                | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nNOPW %CS:(%RAX,%RAX,1)                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nNOPL (%RAX)                            | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\n",
        },
      },
      header = {
        "Warnings:\nDetected a function call instruction: ignoring called function instructions.\nRerun with --follow-calls=append to include them to analysis  or with --follow-calls=inline to simulate inlining.",
        "1% of peak computational performance is used (0.60 out of 32.00 FLOP per cycle (GFLOPS @ 1GHz))",
      },
      brief = {
      },
      gain = {
        {
          workaround = " - Try to reorganize arrays of structures to structures of arrays\n - Consider to permute loops (see vectorization gain report)\n - To reference allocatable arrays, use \"allocatable\" instead of \"pointer\" pointers or qualify them with the \"contiguous\" attribute (Fortran 2008)\n - For structures, limit to one indirection. For example, use a_b%c instead of a%b%c with a_b set to a%b before this function\n",
          title = "Code clean check",
          txt = "Detected a slowdown caused by scalar integer instructions (typically used for address computation).\nBy removing them, you can lower the cost of an iteration from 169.00 to 98.00 cycles (1.72x speedup).",
        },
        {
          workaround = " - Try another compiler or update/tune your current one\n - Make array accesses unit-stride:\n  * If your function streams arrays of structures (AoS), try to use structures of arrays instead (SoA):\ndo i a(i)%x = b(i)%x (slow, non stride 1) => do i a%x(i) = b%x(i) (fast, stride 1)\n",
          details = "Store and arithmetical SSE/AVX instructions are used in scalar version (process only one data element in vector registers).\nSince your execution units are vector units, only a vectorized function can use their full power.\n",
          title = "Vectorization",
          txt = "Your function is probably not vectorized.\nOnly 12% of vector register length is used (average across all SSE/AVX instructions).\nBy vectorizing your function, you can lower the cost of an iteration from 169.00 to 16.82 cycles (10.05x speedup).",
        },
        {
          title = "Execution units bottlenecks",
          txt = "Found no such bottlenecks but see expert reports for more complex bottlenecks.",
        },
      },
      potential = {
        {
          workaround = "Try to change order in which elements are evaluated (using parentheses) in arithmetic expressions containing both ADD/SUB and MUL operations to enable your compiler to generate FMA instructions wherever possible.\nFor instance a + b*c is a valid FMA (MUL then ADD).\nHowever (a+b)* c cannot be translated into an FMA (ADD then MUL).",
          title = "FMA",
          txt = "Detected 20 FMA (fused multiply-add) operations.\nPresence of both ADD/SUB and MUL operations.",
        },
      },
    },
  },
  AVG = {
      hint = {
        {
          details = "Calling (and then returning from) a function prevents many compiler optimizations (like vectorization), breaks control flow (which reduces pipeline performance) and executes extra instructions to save/restore the registers used inside it, which is very expensive (dozens of cycles). Consider to inline small functions.\n - unknown: 2 occurrences\n",
          title = "CALL instructions",
          txt = "Detected function call instructions.\n",
        },
        {
          workaround = "Avoid mixing data with different types. In particular, check if the type of constants is the same as array elements.",
          details = " - CLTQ: 1 occurrences\n",
          title = "Conversion instructions",
          txt = "Detected expensive conversion instructions.",
        },
        {
          title = "Type of elements and instruction set",
          txt = "81 SSE or AVX instructions are processing arithmetic or math operations on double precision FP elements in scalar mode (one at a time).\n",
        },
        {
          title = "Matching between your function (in the source code) and the binary function",
          txt = "The binary function is composed of 101 FP arithmetical operations:\n - 25: addition or subtraction (20 inside FMA instructions)\n - 76: multiply (20 inside FMA instructions)\nThe binary function is loading 484 bytes (60 double precision FP elements).\nThe binary function is storing 584 bytes (73 double precision FP elements).",
        },
        {
          title = "Arithmetic intensity",
          txt = "Arithmetic intensity is 0.09 FP operations per loaded or stored byte.",
        },
      },
      expert = {
        {
          title = "General properties",
          txt = "nb instructions    : 329\nloop length        : 1915\nused x86 registers : 16\nused mmx registers : 0\nused xmm registers : 27\nused ymm registers : 0\nused zmm registers : 0\nnb stack references: 80\nADD-SUB / MUL ratio: 0.09\n",
        },
        {
          title = "Front-end",
          txt = "MACRO FUSION NOT POSSIBLE\ninstruction fetch    : 120.00 cycles\ninstruction queue    : 164.50 cycles\ndecoding             : 164.50 cycles\nmicro-operation queue: 169.00 cycles\nfront end            : 169.00 cycles\n",
        },
        {
          title = "Back-end",
          txt = "       | P0    | P1    | P2    | P3    | P4    | P5    | P6\n--------------------------------------------------------------\nuops   | 59.50 | 59.50 | 71.50 | 71.50 | 57.50 | 57.50 | 80.00\ncycles | 59.50 | 59.50 | 71.50 | 71.50 | 57.50 | 57.50 | 80.00\n\nCycles executing div or sqrt instructions: 22.00-26.00\n",
        },
        {
          title = "Cycles summary",
          txt = "Front-end : 169.00\nDispatch  : 80.00\nDIV/SQRT  : 22.00-26.00\nOverall L1: 169.00\n",
        },
        {
          title = "Vectorization ratios",
          txt = "INT\nall    : 0%\nload   : 0%\nstore  : 0%\nmul    : 0%\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 0%\nFP\nall     : 4%\nload    : 0%\nstore   : 0%\nmul     : 0%\nadd-sub : 0%\nfma     : 0%\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 60%\nINT+FP\nall     : 4%\nload    : 0%\nstore   : 0%\nmul     : 0%\nadd-sub : 0%\nfma     : 0%\ndiv/sqrt: 0%\nother   : 31%\n",
        },
        {
          title = "Vector efficiency ratios",
          txt = "INT\nall    : 10%\nload   : 12%\nstore  : 11%\nmul    : 12%\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 9%\nFP\nall     : 13%\nload    : 12%\nstore   : 12%\nmul     : 12%\nadd-sub : 12%\nfma     : 12%\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 20%\nINT+FP\nall     : 12%\nload    : 12%\nstore   : 12%\nmul     : 12%\nadd-sub : 12%\nfma     : 12%\ndiv/sqrt: 6%\nother   : 14%\n",
        },
        {
          title = "Cycles and memory resources usage",
          txt = "Assuming all data fit into the L1 cache, each call to the function takes 169.00 cycles. At this rate:\n - 2% of peak load performance is reached (2.86 out of 128.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 5% of peak store performance is reached (3.46 out of 64.00 bytes stored per cycle (GB/s @ 1GHz))\n",
        },
        {
          title = "Front-end bottlenecks",
          txt = "Performance is limited by instruction throughput (loading/decoding program instructions to execution core) (front-end is a bottleneck).\n",
        },
        {
          title = "ASM code",
          txt = "In the binary file, the address of the function is: 24670\n\nInstruction                            | Nb FU | P0    | P1   | P2   | P3   | P4    | P5   | P6 | Latency | Recip. throughput\n-----------------------------------------------------------------------------------------------------------------------------\nPUSH %R15                              | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R14                              | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R13                              | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nLEA (%R9),%R13                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nPUSH %R12                              | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nLEA (%R8),%R12                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nPUSH %RBP                              | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %RBX                              | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nLEA (%RDI),%RBX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x278(%RSP),%RSP                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x2d0(%RSP),%RAX                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RDX,0x1f0(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RSI,0x1e8(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV (%RAX),%R14D                       | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RCX,0x1b8(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 2080 <@plt_start@+0x60>           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nLEA (%RAX),%EBP                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 2190 <@plt_start@+0x170>          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nLEA (%RAX),%EDI                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R14D,%EAX                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSUB $0x2,%EAX                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EAX,%EDX                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAR $0x1f,%EDX                         | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nIDIV %EBP                              | 29    | 14.50 | 0    | 0    | 0    | 14.50 | 0    | 0  | 37-49   | 22-26\nCMP %EDX,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJL 25a98 <jacld_+0x1428>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nIMUL %EAX,%EDI                         | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 3       | 1\nMOV %EAX,%ESI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nADD %EDX,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %EDI,%ESI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %ESI,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJGE 25a85 <jacld_+0x1415>              | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0x2c8(%RSP),%RCX                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nXOR %EBP,%EBP\nMOVSXD %R14D,%RDX                      | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA 0x2(%RDI),%EAX                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EAX,0x238(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOVSXD (%RCX),%R8                      | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVMOVSD 0x183a4(%RIP),%XMM5             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x17f9c(%RIP),%XMM2             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOV %R8D,%R10D                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA (%R8,%R8,4),%R14                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD $0x1,%R10D                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R14,%R14,4),%R14                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVSXD %R10D,%R15                      | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA (%R8),%R9                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD $0x1,%R15                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x2(%R9),%R9D                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVSXD %R9D,%R10                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV $-0x1f,%R8                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x18363(%RIP),%XMM17            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nCMOVS %RBP,%R15                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nVMOVSD 0x17f47(%RIP),%XMM3             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOV %R15,%RCX                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV %R15,%R11                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nIMUL %RDX,%RCX                         | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOV %R15,0x208(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nVMOVSD 0x1830d(%RIP),%XMM10            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x17f0d(%RIP),%XMM7             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x182d5(%RIP),%XMM0             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x1831b(%RIP),%XMM18            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nTEST %RCX,%RCX                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x182e0(%RIP),%XMM11            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x182b0(%RIP),%XMM1             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nCMOVS %RBP,%RCX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nVMOVSD 0x182f2(%RIP),%XMM19            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nNEG %R11                               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x182b7(%RIP),%XMM12            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nSUB %RCX,%R11                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x18284(%RIP),%XMM4             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nTEST %R14,%R14                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x182c7(%RIP),%XMM20            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x1828f(%RIP),%XMM15            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nCMOVS %RBP,%R14                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nVMOVSD 0x1825b(%RIP),%XMM6             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOV %R14,0x1f8(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nSUB %R14,%R8                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x18296(%RIP),%XMM21            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA 0xa(%R10,%R10,4),%R14              | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV 0x18222(%RIP),%R10D                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nTEST %R14,%R14                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x1824d(%RIP),%XMM16            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x1821d(%RIP),%XMM8             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nCMOVS %RBP,%R14                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nVMOVSD 0x17e59(%RIP),%XMM14            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nIMUL %R14,%RDX                         | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOV %R14,%R9                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV %R9,0x200(%RSP)                    | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV $0x4,%R14D                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x17e52(%RIP),%XMM22            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x17e60(%RIP),%XMM23            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nTEST %RDX,%RDX                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMOVS %RBP,%RDX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nSUB %R9,%R14                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x181b3(%RIP),%R9D                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSUB %RDX,%R14                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %R10D,%R9D                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJG 25a85 <jacld_+0x1415>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nVMULSD %XMM10,%XMM3,%XMM9              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM5,%XMM5,%XMM25              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x129d8(%RIP),%XMM13            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nCLTQ\nMOV %RAX,%RDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA 0x2(%RSI),%ESI                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL 0x1f8(%RSP),%RAX                  | 1     | 0     | 0    | 1    | 0    | 1     | 0    | 0  | 5       | 2\nMOV %ESI,0x23c(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOVSXD (%RBX),%RSI                     | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSUB $0x1,%RDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVFMADD231SD %XMM17,%XMM2,%XMM9         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM0,%XMM7,%XMM9          | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD132SD %XMM25,%XMM13,%XMM9        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x13340(%RIP),%XMM13            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD %XMM9,0x28(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM2,%XMM2,%XMM9               | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVFMADD132SD %XMM13,%XMM3,%XMM9         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM9,%XMM7,%XMM9               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nADD %R8,%RAX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RSI),%R8                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %RCX,%R8                          | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nVMULSD 0x13810(%RIP),%XMM3,%XMM26      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM9,0x30(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nSUB %R9D,%R10D                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMULSD %XMM25,%XMM9,%XMM9              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nIMUL %RDX,%RSI                         | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOV %RAX,0x1c8(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nIMUL %RDI,%R15                         | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nLEA (%R8),%RBX                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R11,%RBX                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVFMADD231SD 0x137d9(%RIP),%XMM2,%XMM26 | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nLEA (%RSI),%RAX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVFMADD231SD 0x137cc(%RIP),%XMM7,%XMM26 | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMULSD 0x13294(%RIP),%XMM9,%XMM9       | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nADD %R14,%RAX                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x137bf(%RIP),%XMM24            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA (%R15),%RBP                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RBX,0x1c0(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nSUB %RCX,%R8                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x200(%RSP),%R15                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA (%RSI),%RCX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD %XMM25,0x20(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nSUB %RDX,%RCX                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD %XMM9,0x38(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nADD %R11,%R8                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x13252(%RIP),%XMM9             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nADD %R14,%RCX                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMULSD %XMM25,%XMM9,%XMM9              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOVSXD %R9D,%R11                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RAX,0x210(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R11,%R11,4),%R14                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSUB %R15,%RSI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %R15,%RDI                         | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nLEA (%R14,%R14,4),%R15                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSUB %RDX,%RSI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x2(%R14),%RAX                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD %XMM9,0x40(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM11,%XMM3,%XMM9              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nSAL $0x3,%R15                          | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %R15,%RBX                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA 0x30(%R12,%R15,1),%R12             | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD $0x30,%RBX                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x30(%R13,%R15,1),%R13             | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nVFMADD231SD %XMM18,%XMM2,%XMM9         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM1,%XMM7,%XMM9          | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM25,%XMM9,%XMM9              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM9,0x48(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM3,%XMM3,%XMM9               | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVFMADD132SD %XMM13,%XMM2,%XMM9         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM9,%XMM7,%XMM9               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM9,0x50(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM25,%XMM9,%XMM9              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD 0x131cf(%RIP),%XMM9,%XMM9       | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM9,0x58(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM12,%XMM3,%XMM9              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM19,%XMM2,%XMM9         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM4,%XMM7,%XMM9          | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM25,%XMM9,%XMM9              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM9,0x60(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVADDSD %XMM3,%XMM2,%XMM9               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD132SD %XMM7,%XMM9,%XMM13         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM13,0x68(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM25,%XMM13,%XMM13            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM9,%XMM7,%XMM9               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD 0x1318b(%RIP),%XMM13,%XMM13     | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM13,0x70(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM15,%XMM3,%XMM13             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM20,%XMM2,%XMM13        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM6,%XMM7,%XMM13         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM25,%XMM13,%XMM13            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM13,0x78(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0x13691(%RIP),%XMM3,%XMM13      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVFMADD132SD %XMM2,%XMM13,%XMM24        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD 0x13681(%RIP),%XMM7,%XMM24 | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM24,0x80(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM26,0x88(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVFMADD231SD 0x13668(%RIP),%XMM2,%XMM13 | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD 0x13667(%RIP),%XMM7,%XMM13 | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM13,0x90(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0x1365e(%RIP),%XMM9,%XMM13      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nMOV %R8,0x218(%RSP)                    | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nVMULSD %XMM25,%XMM9,%XMM9              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOV %RCX,0x220(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nVMOVSD %XMM13,0x98(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0x13637(%RIP),%XMM9,%XMM13      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM16,%XMM3,%XMM9              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM3,%XMM5,%XMM3               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM13,0xa0(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVFMADD231SD %XMM21,%XMM2,%XMM9         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM8,%XMM7,%XMM9          | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM25,%XMM9,%XMM13             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM3,0x8(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM7,%XMM5,%XMM25              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM3,%XMM10,%XMM10             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM13,0xa8(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM3,%XMM11,%XMM11             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM25,%XMM0,%XMM7              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVQ 0x135c0(%RIP),%XMM0              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM25,%XMM6,%XMM6              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM25,%XMM1,%XMM1              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVXORPD %XMM0,%XMM7,%XMM9               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMULSD %XMM14,%XMM5,%XMM7              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM6,0xe0(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0x135c0(%RIP),%XMM25,%XMM6      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM1,0xc8(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM25,%XMM4,%XMM4              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x13049(%RIP),%XMM1             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD %XMM7,%XMM7,%XMM14              | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVMULSD %XMM25,%XMM8,%XMM8              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVXORPD %XMM0,%XMM14,%XMM13             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVSD %XMM6,0x100(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0x13592(%RIP),%XMM7,%XMM14      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM9,0xb0(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM22,%XMM5,%XMM6              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM13,0xb8(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0x13028(%RIP),%XMM25,%XMM9      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM4,0xd0(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM1,%XMM7,%XMM13              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM14,0xd8(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0x13538(%RIP),%XMM25,%XMM4      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM8,0x108(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0x1352d(%RIP),%XMM25,%XMM14     | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM9,0xc0(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVXORPD %XMM0,%XMM13,%XMM9              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMULSD %XMM1,%XMM6,%XMM8               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVXORPD %XMM0,%XMM10,%XMM13             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVSD %XMM9,0xe8(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM6,%XMM6,%XMM9               | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVMULSD %XMM3,%XMM12,%XMM12             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM4,0xf0(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVXORPD %XMM0,%XMM9,%XMM4               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVSD %XMM14,0xf8(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM3,%XMM3,%XMM14              | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVMOVSD %XMM13,0x110(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVXORPD %XMM0,%XMM8,%XMM3               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMULSD %XMM2,%XMM5,%XMM8               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM4,0x118(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM11,0x120(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD 0x134ba(%RIP),%XMM10            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM14,%XMM10,%XMM13            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x134b5(%RIP),%XMM9             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM14,%XMM15,%XMM15            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x134b0(%RIP),%XMM11            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM23,%XMM5,%XMM5              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM12,0x128(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM8,%XMM17,%XMM2              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM13,0x140(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM14,%XMM9,%XMM4              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM15,0x138(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM5,%XMM5,%XMM15              | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVMULSD %XMM14,%XMM11,%XMM12            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVXORPD %XMM0,%XMM15,%XMM10             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVSD %XMM3,0x130(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVXORPD %XMM0,%XMM2,%XMM3               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMULSD %XMM14,%XMM16,%XMM14            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM3,0x160(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM8,%XMM18,%XMM13             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM10,0x168(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD 0x13434(%RIP),%XMM3             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD %XMM14,0x158(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD 0x13433(%RIP),%XMM10            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x13423(%RIP),%XMM14            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM1,%XMM5,%XMM9               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM12,0x150(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM8,%XMM19,%XMM11             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM8,0x228(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM8,%XMM20,%XMM12             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM13,0x170(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM8,%XMM14,%XMM2              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOV 0x2b8(%RSP),%RDX                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVMULSD %XMM8,%XMM3,%XMM15              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM4,0x148(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVXORPD %XMM0,%XMM9,%XMM4               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMULSD %XMM8,%XMM10,%XMM13             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nADD %RDX,%RBX                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD %XMM12,0x188(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM8,%XMM21,%XMM8              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM4,0x178(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM11,0x180(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM2,0x190(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM15,0x198(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM13,0x1a0(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM8,0x1a8(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nMOV %R11,0x1d0(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R14,0x240(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RSI,0x230(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RBX,0x268(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RAX,0x248(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R12,0x260(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R13,0x258(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV 0x2b0(%RSP),%R8                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVMOVSD 0x12e6c(%RIP),%XMM12            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOV %R10,0x1b0(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD %R8,%R15                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD $0x30,%R15                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R15,0x250(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nNOPW %CS:(%RAX,%RAX,1)                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nXCHG %AX,%AX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA 0x278(%RSP),%RSP                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nPOP %RBX                               | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %RBP                               | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R12                               | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R13                               | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R14                               | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R15                               | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nRET\nADD $0x1,%EAX                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EDX,%EDX\nJMP 246d1 <jacld_+0x61>                | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nNOPW %CS:(%RAX,%RAX,1)                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nNOPL (%RAX)                            | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\n",
        },
      },
      header = {
        "Warnings:\nDetected a function call instruction: ignoring called function instructions.\nRerun with --follow-calls=append to include them to analysis  or with --follow-calls=inline to simulate inlining.",
        "1% of peak computational performance is used (0.60 out of 32.00 FLOP per cycle (GFLOPS @ 1GHz))",
      },
      brief = {
      },
      gain = {
        {
          workaround = " - Try to reorganize arrays of structures to structures of arrays\n - Consider to permute loops (see vectorization gain report)\n - To reference allocatable arrays, use \"allocatable\" instead of \"pointer\" pointers or qualify them with the \"contiguous\" attribute (Fortran 2008)\n - For structures, limit to one indirection. For example, use a_b%c instead of a%b%c with a_b set to a%b before this function\n",
          title = "Code clean check",
          txt = "Detected a slowdown caused by scalar integer instructions (typically used for address computation).\nBy removing them, you can lower the cost of an iteration from 169.00 to 98.00 cycles (1.72x speedup).",
        },
        {
          workaround = " - Try another compiler or update/tune your current one\n - Make array accesses unit-stride:\n  * If your function streams arrays of structures (AoS), try to use structures of arrays instead (SoA):\ndo i a(i)%x = b(i)%x (slow, non stride 1) => do i a%x(i) = b%x(i) (fast, stride 1)\n",
          details = "Store and arithmetical SSE/AVX instructions are used in scalar version (process only one data element in vector registers).\nSince your execution units are vector units, only a vectorized function can use their full power.\n",
          title = "Vectorization",
          txt = "Your function is probably not vectorized.\nOnly 12% of vector register length is used (average across all SSE/AVX instructions).\nBy vectorizing your function, you can lower the cost of an iteration from 169.00 to 16.82 cycles (10.05x speedup).",
        },
        {
          title = "Execution units bottlenecks",
          txt = "Found no such bottlenecks but see expert reports for more complex bottlenecks.",
        },
      },
      potential = {
        {
          workaround = "Try to change order in which elements are evaluated (using parentheses) in arithmetic expressions containing both ADD/SUB and MUL operations to enable your compiler to generate FMA instructions wherever possible.\nFor instance a + b*c is a valid FMA (MUL then ADD).\nHowever (a+b)* c cannot be translated into an FMA (ADD then MUL).",
          title = "FMA",
          txt = "Detected 20 FMA (fused multiply-add) operations.\nPresence of both ADD/SUB and MUL operations.",
        },
      },
    },
  common = {
    header = {
      "The function is defined in /users/user2210/NPB3.4-MZ-MPI/LU-MZ/jacld.f90:5,40-60,66-74,80-88,94-95,108-173,183-189,195-246,256-260,267-274,280-321,331,338-350,357.\n",
      "Warnings:\nIgnoring paths for analysis",
    },
  },
}
