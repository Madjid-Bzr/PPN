/users/user2210/NPB3.4-MZ-MPI/LU-MZ/rhs.f90: 209 - 475
--------------------------------------------------------------------------------

209: !$OMP BARRIER
[...]
271:      &              + c1 * c5 * ty3 * ( u51j - u51jm1 )
[...]
358:          do i = ist, iend
359:             do k = 1, nz
360:                utmp(1,k) = u(1,i,j,k)
361:                utmp(2,k) = u(2,i,j,k)
362:                utmp(3,k) = u(3,i,j,k)
363:                utmp(4,k) = u(4,i,j,k)
364:                utmp(5,k) = u(5,i,j,k)
365:                utmp(6,k) = rho_i(i,j,k)
366:             end do
367: 
368:             do k = 1, nz
369:                flux(1,k) = utmp(4,k)
370:                u41 = utmp(4,k) * utmp(6,k)
371: 
372:                q = qs(i,j,k)
373: 
374:                flux(2,k) = utmp(2,k) * u41 
375:                flux(3,k) = utmp(3,k) * u41 
376:                flux(4,k) = utmp(4,k) * u41 + c2 * (utmp(5,k)-q)
377:                flux(5,k) = ( c1 * utmp(5,k) - c2 * q ) * u41
378:             end do
379: 
380:             do k = 2, nz - 1
381:                do m = 1, 5
382:                   rtmp(m,k) =  rsd(m,i,j,k)  &
383:      &                - tz2 * ( flux(m,k+1) - flux(m,k-1) )
384:                end do
385:             end do
386: 
387:             do k = 2, nz
388:                tmp = utmp(6,k)
389: 
390:                u21k = tmp * utmp(2,k)
391:                u31k = tmp * utmp(3,k)
392:                u41k = tmp * utmp(4,k)
393:                u51k = tmp * utmp(5,k)
394: 
395:                tmp = utmp(6,k-1)
396: 
397:                u21km1 = tmp * utmp(2,k-1)
398:                u31km1 = tmp * utmp(3,k-1)
399:                u41km1 = tmp * utmp(4,k-1)
400:                u51km1 = tmp * utmp(5,k-1)
401: 
402:                flux(2,k) = tz3 * ( u21k - u21km1 )
403:                flux(3,k) = tz3 * ( u31k - u31km1 )
404:                flux(4,k) = (4.0d+00/3.0d+00) * tz3 * (u41k-u41km1)
[...]
410:      &              + c1 * c5 * tz3 * ( u51k - u51km1 )
411:             end do
412: 
413:             do k = 2, nz - 1
414:                rtmp(1,k) = rtmp(1,k)  &
415:      &              + dz1 * tz1 * (            utmp(1,k-1)  &
416:      &                             - 2.0d+00 * utmp(1,k)  &
417:      &                             +           utmp(1,k+1) )
418:                rtmp(2,k) = rtmp(2,k)  &
419:      &          + tz3 * c3 * c4 * ( flux(2,k+1) - flux(2,k) )  &
420:      &              + dz2 * tz1 * (            utmp(2,k-1)  &
421:      &                             - 2.0d+00 * utmp(2,k)  &
422:      &                             +           utmp(2,k+1) )
423:                rtmp(3,k) = rtmp(3,k)  &
424:      &          + tz3 * c3 * c4 * ( flux(3,k+1) - flux(3,k) )  &
425:      &              + dz3 * tz1 * (            utmp(3,k-1)  &
426:      &                             - 2.0d+00 * utmp(3,k)  &
427:      &                             +           utmp(3,k+1) )
428:                rtmp(4,k) = rtmp(4,k)  &
429:      &          + tz3 * c3 * c4 * ( flux(4,k+1) - flux(4,k) )  &
430:      &              + dz4 * tz1 * (            utmp(4,k-1)  &
431:      &                             - 2.0d+00 * utmp(4,k)  &
432:      &                             +           utmp(4,k+1) )
433:                rtmp(5,k) = rtmp(5,k)  &
434:      &          + tz3 * c3 * c4 * ( flux(5,k+1) - flux(5,k) )  &
435:      &              + dz5 * tz1 * (            utmp(5,k-1)  &
436:      &                             - 2.0d+00 * utmp(5,k)  &
437:      &                             +           utmp(5,k+1) )
[...]
447:      &                      +           utmp(m,4) )
448:                rsd(m,i,j,3) = rtmp(m,3)  &
449:      &           - dssp * ( - 4.0d+00 * utmp(m,2)  &
450:      &                      + 6.0d+00 * utmp(m,3)  &
451:      &                      - 4.0d+00 * utmp(m,4)  &
452:      &                      +           utmp(m,5) )
453:             end do
454: 
455:             do k = 4, nz - 3
[...]
462:      &                        +           utmp(m,k+2) )
[...]
471:      &                      - 4.0d+00 * utmp(m,nz-1)  )
472:                rsd(m,i,j,nz-1) = rtmp(m,nz-1)  &
473:      &           - dssp * (             utmp(m,nz-3)  &
474:      &                      - 4.0d+00 * utmp(m,nz-2)  &
475:      &                      + 5.0d+00 * utmp(m,nz-1) )
