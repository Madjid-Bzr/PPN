_cqa_text_report = {
  paths = {
    {
      hint = {
        {
          details = "Calling (and then returning from) a function prevents many compiler optimizations (like vectorization), breaks control flow (which reduces pipeline performance) and executes extra instructions to save/restore the registers used inside it, which is very expensive (dozens of cycles). Consider to inline small functions.\n - .plt.sec@start: 1 occurrences\n - unknown: 45 occurrences\n",
          title = "CALL instructions",
          txt = "Detected function call instructions.\n",
        },
        {
          workaround = "Use vector aligned instructions:\n 1) align your arrays on 64 bytes boundaries: replace { void *p = malloc (size); } with { void *p; posix_memalign (&p, 64, size); }.\n 2) inform your compiler that your arrays are vector aligned: if array 'foo' is 64 bytes-aligned, define a pointer 'p_foo' as __builtin_assume_aligned (foo, 64) and use it instead of 'foo' in the loop.\n",
          details = " - VEXTRACTF128: 6 occurrences\n - VEXTRACTF64X4: 6 occurrences\n",
          title = "Vector unaligned load/store instructions",
          txt = "Detected 12 suboptimal vector unaligned load/store instructions.\n",
        },
        {
          workaround = "Avoid mixing data with different types. In particular, check if the type of constants is the same as array elements. Use double instead of single precision only when/where needed by numerical stability and avoid mixing precision. In C/C++, FP constants are double precision by default and must be suffixed by 'f' to make them single precision. Usual math.h functions are double precision and their name needs to be suffixed with 'f' to use their single precision version which is faster and avoids type conversion. For instance, on single precision elements, call expf instead of exp.",
          details = " - VCVTPS2PD (FP32 to FP64, SIMD): 12 occurrences\n - VCVTSD2SS (FP64 to FP32, scalar): 2 occurrences\n - VCVTSI2SS (INT32/64 to FP32, scalar): 1 occurrences\n - VCVTSS2SD (FP32 to FP64, scalar): 29 occurrences\n - VCVTUSI2SS (INT32/64 to FP32, scalar): 1 occurrences\n",
          title = "Conversion instructions",
          txt = "Detected expensive conversion instructions.",
        },
        {
          title = "Type of elements and instruction set",
          txt = "3 SSE or AVX instructions are processing arithmetic or math operations on single precision FP elements in scalar mode (one at a time).\n30 SSE or AVX instructions are processing arithmetic or math operations on double precision FP elements in scalar mode (one at a time).\n12 SSE or AVX instructions are processing arithmetic or math operations on double precision FP elements in vector mode (two at a time).\n6 AVX instructions are processing arithmetic or math operations on double precision FP elements in vector mode (four at a time).\n6 AVX-512 instructions are processing arithmetic or math operations on double precision FP elements in vector mode (eight at a time).\n",
        },
        {
          title = "Matching between your function (in the source code) and the binary function",
          txt = "The binary function is composed of 131 FP arithmetical operations:\n - 122: addition or subtraction (2 inside FMA instructions)\n - 8: multiply (2 inside FMA instructions)\n - 1: square root\nThe binary function is loading 1168 bytes (146 double precision FP elements).\nThe binary function is storing 380 bytes (47 double precision FP elements).",
        },
        {
          title = "Arithmetic intensity",
          txt = "Arithmetic intensity is 0.08 FP operations per loaded or stored byte.",
        },
      },
      expert = {
        {
          title = "General properties",
          txt = "nb instructions    : 532\nloop length        : 2784\nused x86 registers : 16\nused mmx registers : 0\nused xmm registers : 16\nused ymm registers : 14\nused zmm registers : 16\nnb stack references: 21\nADD-SUB / MUL ratio: 8.00\n",
        },
        {
          title = "Front-end",
          txt = "MACRO FUSION NOT POSSIBLE\ninstruction fetch    : 174.00 cycles\ninstruction queue    : 266.00 cycles\ndecoding             : 266.00 cycles\nmicro-operation queue: 293.00 cycles\nfront end            : 293.00 cycles\n",
        },
        {
          title = "Back-end",
          txt = "       | P0    | P1    | P2    | P3    | P4     | P5     | P6\n----------------------------------------------------------------\nuops   | 97.00 | 71.00 | 76.50 | 76.50 | 141.50 | 141.50 | 43.00\ncycles | 97.00 | 71.00 | 76.50 | 76.50 | 141.50 | 141.50 | 43.00\n\nCycles executing div or sqrt instructions: 61.00-208.00\n",
        },
        {
          title = "Cycles summary",
          txt = "Front-end : 293.00\nDispatch  : 141.50\nDIV/SQRT  : 61.00-208.00\nOverall L1: 293.00\n",
        },
        {
          title = "Vectorization ratios",
          txt = "INT\nall    : 23%\nload   : 0%\nstore  : 4%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 40%\nFP\nall     : 46%\nload    : 19%\nstore   : 18%\nmul     : 0%\nadd-sub : 50%\nfma     : 0%\ndiv/sqrt: 0%\nother   : 54%\nINT+FP\nall     : 41%\nload    : 17%\nstore   : 8%\nmul     : 0%\nadd-sub : 50%\nfma     : 0%\ndiv/sqrt: 0%\nother   : 51%\n",
        },
        {
          title = "Vector efficiency ratios",
          txt = "INT\nall    : 17%\nload   : 11%\nstore  : 11%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 21%\nFP\nall     : 29%\nload    : 23%\nstore   : 28%\nmul     : 10%\nadd-sub : 31%\nfma     : 12%\ndiv/sqrt: 6%\nother   : 27%\nINT+FP\nall     : 26%\nload    : 21%\nstore   : 17%\nmul     : 10%\nadd-sub : 31%\nfma     : 12%\ndiv/sqrt: 10%\nother   : 26%\n",
        },
        {
          title = "Cycles and memory resources usage",
          txt = "Assuming all data fit into the L1 cache, each call to the function takes 293.00 cycles. At this rate:\n - 3% of peak load performance is reached (3.99 out of 128.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 2% of peak store performance is reached (1.30 out of 64.00 bytes stored per cycle (GB/s @ 1GHz))\n",
        },
        {
          title = "Front-end bottlenecks",
          txt = "Performance is limited by instruction throughput (loading/decoding program instructions to execution core) (front-end is a bottleneck).\n\nBy removing all these bottlenecks, you can lower the cost of an iteration from 293.00 to 266.00 cycles (1.10x speedup).\n",
        },
        {
          title = "ASM code",
          txt = "In the binary file, the address of the function is: 1240\n\nInstruction                             | Nb FU | P0    | P1   | P2   | P3   | P4    | P5   | P6 | Latency | Recip. throughput\n------------------------------------------------------------------------------------------------------------------------------\nENDBR64\nLEA 0x8(%RSP),%R10                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nAND $-0x40,%RSP                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nPUSHQ -0x8(%R10)                        | 3     | 0     | 0    | 0.50 | 0.50 | 1     | 1    | 0  | 0       | 8\nPUSH %RBP                               | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nMOV %RSP,%RBP                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nPUSH %R15                               | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R14                               | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R13                               | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R12                               | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R10                               | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %RBX                               | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nSUB $0x140,%RSP                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EDI,-0x84(%RBP)                    | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA -0x84(%RBP),%RDI                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RSI,-0x90(%RBP)                    | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA -0x90(%RBP),%RSI                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %FS:0x28,%RAX                       | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RAX,-0x38(%RBP)                    | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nXOR %EAX,%EAX\nCALL 1170 <.plt.sec@start+0x30>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nLEA -0x78(%RBP),%RSI                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x44000000,%EDI                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 11b0 <.plt.sec@start+0x70>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nLEA -0x74(%RBP),%RSI                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x44000000,%EDI                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 11c0 <.plt.sec@start+0x80>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nCMPL $0x1,-0x84(%RBP)                   | 1     | 0     | 0    | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nJG 1814 <main+0x5d4>                    | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOVSXD -0x78(%RBP),%RCX                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV $0x186a0,%EAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EDX,%EDX\nMOV $0x61a80,%ESI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x40,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x186a0,%R14D                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nDIV %RCX                                | 23    | 11.50 | 0    | 0    | 0    | 11.50 | 0    | 0  | 39-95   | 22-95\nMOV %RAX,%R15                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nCALL 1180 <.plt.sec@start+0x40>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x61a80,%ESI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x40,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,-0xf8(%RBP)                    | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 1180 <.plt.sec@start+0x40>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x61a80,%ESI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x40,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,-0x100(%RBP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 1180 <.plt.sec@start+0x40>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x61a80,%ESI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x40,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,-0x108(%RBP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 1180 <.plt.sec@start+0x40>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x61a80,%ESI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x40,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,-0x110(%RBP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 1180 <.plt.sec@start+0x40>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x61a80,%ESI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x40,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,-0xa8(%RBP)                    | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 1180 <.plt.sec@start+0x40>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nXOR %EDI,%EDI\nMOV %RAX,%R13                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nCALL 11f0 <.plt.sec@start+0xb0>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV %R15D,-0x98(%RBP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV -0xa8(%RBP),%R15                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nXOR %EBX,%EBX\nNOPL (%RAX)                             | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV -0x98(%RBP),%R15D                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSUB $0x8,%RSP                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV -0xf8(%RBP),%RCX                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %R15D,%R8D                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nXOR %ESI,%ESI\nPUSH $0x44000000                        | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nMOV $0x4c00040a,%R9D                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0xc000000,%EDX                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $-0x1,%RDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 11a0 <.plt.sec@start+0x60>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x4c00040a,%R9D                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R15D,%R8D                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nXOR %ESI,%ESI\nMOV -0x100(%RBP),%RCX                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV $0xc000000,%EDX                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $-0x1,%RDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVL $0x44000000,(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nCALL 11a0 <.plt.sec@start+0x60>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x4c00040a,%R9D                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R15D,%R8D                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nXOR %ESI,%ESI\nMOV -0x108(%RBP),%RCX                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV $0xc000000,%EDX                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $-0x1,%RDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVL $0x44000000,(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nCALL 11a0 <.plt.sec@start+0x60>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x4c00040a,%R9D                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R15D,%R8D                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nXOR %ESI,%ESI\nMOV -0x110(%RBP),%RCX                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV $0xc000000,%EDX                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $-0x1,%RDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVL $0x44000000,(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nCALL 11a0 <.plt.sec@start+0x60>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x4c00040a,%R9D                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R15D,%R8D                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nXOR %ESI,%ESI\nMOV -0xa8(%RBP),%RCX                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV $0xc000000,%EDX                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $-0x1,%RDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVL $0x44000000,(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nCALL 11a0 <.plt.sec@start+0x60>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV %R13,%RCX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nXOR %ESI,%ESI\nMOV $0x4c00040a,%R9D                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R15D,%R8D                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV $0xc000000,%EDX                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $-0x1,%RDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVL $0x44000000,(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nCALL 11a0 <.plt.sec@start+0x60>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nPOP %RCX                                | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV -0x74(%RBP),%ECX                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nPOP %RSI                                | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nTEST %ECX,%ECX                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 2093 <main+0xe53>                    | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA -0x1(%R14),%RSI                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVXORPS %XMM1,%XMM1,%XMM1\nMOVSXD %R15D,%R15                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nXOR %EBX,%EBX\nVCVTSI2SS %R14,%XMM1,%XMM2              | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 5       | 1\nVMOVQ -0xf8(%RBP),%XMM14                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVQ -0x108(%RBP),%XMM6                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA 0x2aed(%RIP),%R12                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVCVTUSI2SS %RSI,%XMM3,%XMM3             | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 5       | 1\nMOV %RSI,-0x148(%RBP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nVPINSRQ $0x1,-0x100(%RBP),%XMM14,%XMM15 | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 4       | 6\nVPINSRQ $0x1,-0x110(%RBP),%XMM6,%XMM0   | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 4       | 6\nMOVQ $0,-0xa0(%RBP)                     | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nMOVQ $0,-0x98(%RBP)                     | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nVCVTSS2SD %XMM2,%XMM2,%XMM7             | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVMULSD 0x2c2e(%RIP),%XMM7,%XMM8         | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVINSERTI128 $0x1,%XMM0,%YMM15,%YMM1     | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVMOVDQA %YMM1,-0x130(%RBP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSS %XMM2,%XMM3,%XMM4                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVCVTSS2SD %XMM4,%XMM4,%XMM5             | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVFMADD231SD 0x2c17(%RIP),%XMM5,%XMM8    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM5,-0x140(%RBP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0x2c0f(%RIP),%XMM8,%XMM9         | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVCVTSD2SS %XMM9,%XMM9,%XMM10            | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVMULSS %XMM10,%XMM10,%XMM12             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVCVTSS2SD %XMM10,%XMM10,%XMM11          | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVMOVSD %XMM11,-0xb0(%RBP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVCVTSS2SD %XMM12,%XMM12,%XMM13          | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVMOVSD %XMM13,-0x138(%RBP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVZEROUPPER                              | 19    | 0     | 0    | 0    | 0    | 0     | 0    | 0  | 0       | 36\nJMP 165a <main+0x41a>                   | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nNOPW (%RAX,%RAX,1)                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nNOPW (%RAX,%RAX,1)                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nNOPL (%RAX)                             | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOVSXD -0x74(%RBP),%RBX                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nTEST %EBX,%EBX                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 18cb <main+0x68b>                    | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV -0xf8(%RBP),%RDI                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nCALL 1190 <.plt.sec@start+0x50>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV -0x100(%RBP),%RDI                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nCALL 1190 <.plt.sec@start+0x50>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV -0x108(%RBP),%RDI                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nCALL 1190 <.plt.sec@start+0x50>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV -0x110(%RBP),%RDI                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nCALL 1190 <.plt.sec@start+0x50>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV -0xa8(%RBP),%RDI                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nCALL 1190 <.plt.sec@start+0x50>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV %R13,%RDI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nCALL 1190 <.plt.sec@start+0x50>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nCALL 11e0 <.plt.sec@start+0xa0>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV -0x38(%RBP),%RAX                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nXOR %FS:0x28,%RAX                       | 1     | 0     | 0    | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nJNE 2269 <main+0x1029>                  | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA -0x30(%RBP),%RSP                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EAX,%EAX\nPOP %RBX                                | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R10                                | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R12                                | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R13                                | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R14                                | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R15                                | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %RBP                                | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA -0x8(%R10),%RSP                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nRET\nMOV -0x90(%RBP),%RBX                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nXOR %ESI,%ESI\nMOV $0xa,%EDX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x8(%RBX),%RDI                      | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nCALL 1200 <.plt.sec@start+0xc0>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOVSXD -0x78(%RBP),%RSI                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nXOR %EDX,%EDX\nMOV $0x40,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,%R14                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nDIV %RSI                                | 23    | 11.50 | 0    | 0    | 0    | 11.50 | 0    | 0  | 39-95   | 22-95\nLEA (,%R14,4),%R12                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R12,%RSI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV %RAX,%R15                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nCALL 1180 <.plt.sec@start+0x40>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV %R12,%RSI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV $0x40,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,-0xf8(%RBP)                    | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 1180 <.plt.sec@start+0x40>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV %R12,%RSI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV $0x40,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,-0x100(%RBP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 1180 <.plt.sec@start+0x40>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV %R12,%RSI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV $0x40,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,-0x108(%RBP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 1180 <.plt.sec@start+0x40>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV %R12,%RSI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV $0x40,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,-0x110(%RBP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 1180 <.plt.sec@start+0x40>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x40,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R12,%RSI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV %RAX,-0xa8(%RBP)                    | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 1180 <.plt.sec@start+0x40>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nXOR %EDI,%EDI\nMOV %RAX,%R13                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nCALL 11f0 <.plt.sec@start+0xb0>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nTEST %R14,%R14                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJNE 135d <main+0x11d>                   | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nJMP 146f <main+0x22f>                   | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nVMOVSD 0x295d(%RIP),%XMM13              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD -0x98(%RBP),%XMM13,%XMM14        | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nLEA 0x283e(%RIP),%RDI                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD %XMM14,-0xf0(%RBP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nCALL 1150 <.plt.sec@start+0x10>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x1,%EDI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x2934(%RIP),%XMM15              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD -0xf0(%RBP),%XMM0                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD -0xa0(%RBP),%XMM15,%XMM6         | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nLEA 0x2779(%RIP),%RCX                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x274f(%RIP),%RDX                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x2,%EAX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x2832(%RIP),%RSI                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVFNMADD231SD %XMM0,%XMM0,%XMM6          | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVCVTSD2SS %XMM6,%XMM6,%XMM1             | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVSQRTSS %XMM1,%XMM1,%XMM1               | 3     | 3     | 0    | 0    | 0    | 0     | 0    | 0  | 25-27   | 17-18\nVCVTSS2SD %XMM1,%XMM1,%XMM1             | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nCALL 1160 <.plt.sec@start+0x20>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nLEA 0x27dd(%RIP),%RDI                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1150 <.plt.sec@start+0x10>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nTEST %R14,%R14                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 2224 <main+0xfe4>                    | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMPQ $0xe,-0x148(%RBP)                  | 1     | 0     | 0    | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nJBE 2241 <main+0x1001>                  | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV %R14,%R8                            | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nVXORPD %XMM1,%XMM1,%XMM1\nXOR %EDX,%EDX\nSHR $0x4,%R8                            | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nVMOVAPD %ZMM1,%ZMM11                    | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVAPD %ZMM1,%ZMM7                     | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nMOV %R8,%R11                            | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nVMOVAPD %ZMM1,%ZMM6                     | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVAPD %ZMM1,%ZMM13                    | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nSAL $0x6,%R11                           | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nAND $0x1,%R8B                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVAPD %ZMM1,%ZMM9                     | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nJNE 2116 <main+0xed6>                   | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV -0xf8(%RBP),%RBX                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x100(%RBP),%R12                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x108(%RBP),%R15                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x110(%RBP),%RDI                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0xa8(%RBP),%R8                     | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVEXTRACTF64X4 $0x1,%ZMM1,%YMM0          | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVEXTRACTF64X4 $0x1,%ZMM7,%YMM15         | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVEXTRACTF64X4 $0x1,%ZMM11,%YMM8         | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nMOV %R14,%R11                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nVADDPD %YMM1,%YMM0,%YMM3                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDPD %YMM11,%YMM8,%YMM11              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nAND $-0x10,%R11                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDPD %YMM7,%YMM15,%YMM2               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOVSXD %R11D,%RBX                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nVEXTRACTF128 $0x1,%YMM3,%XMM1           | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVEXTRACTF128 $0x1,%YMM11,%XMM10         | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVEXTRACTF128 $0x1,%YMM2,%XMM7           | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVADDPD %XMM11,%XMM10,%XMM12             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDPD %XMM3,%XMM1,%XMM5                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDPD %XMM2,%XMM7,%XMM0                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVUNPCKHPD %XMM5,%XMM5,%XMM4             | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 4-7     | 2\nVUNPCKHPD %XMM12,%XMM12,%XMM14          | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 4-7     | 2\nVUNPCKHPD %XMM0,%XMM0,%XMM3             | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 4-7     | 2\nVADDPD %XMM5,%XMM4,%XMM1                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDPD %XMM12,%XMM14,%XMM4              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDPD %XMM0,%XMM3,%XMM8                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVEXTRACTF64X4 $0x1,%ZMM6,%YMM5          | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVEXTRACTF64X4 $0x1,%ZMM9,%YMM0          | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVEXTRACTF64X4 $0x1,%ZMM13,%YMM14        | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVADDPD %YMM6,%YMM5,%YMM6                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDPD %YMM9,%YMM0,%YMM9                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDPD %YMM13,%YMM14,%YMM13             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVEXTRACTF128 $0x1,%YMM6,%XMM11          | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVEXTRACTF128 $0x1,%YMM9,%XMM3           | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVEXTRACTF128 $0x1,%YMM13,%XMM15         | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVADDPD %XMM6,%XMM11,%XMM10              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDPD %XMM9,%XMM3,%XMM5                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDPD %XMM13,%XMM15,%XMM7              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVUNPCKHPD %XMM10,%XMM10,%XMM12          | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 4-7     | 2\nVUNPCKHPD %XMM5,%XMM5,%XMM6             | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 4-7     | 2\nVUNPCKHPD %XMM7,%XMM7,%XMM2             | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 4-7     | 2\nVADDPD %XMM10,%XMM12,%XMM11             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDPD %XMM5,%XMM6,%XMM0                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDPD %XMM7,%XMM2,%XMM2                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nCMP %R11,%R14                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 2261 <main+0x1021>                   | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nVZEROUPPER                              | 19    | 0     | 0    | 0    | 0    | 0     | 0    | 0  | 0       | 36\nMOV -0xf8(%RBP),%R10                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x100(%RBP),%RCX                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA 0x1(%RBX),%RDX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R14,%R9                            | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV -0x108(%RBP),%RSI                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x110(%RBP),%RAX                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSAL $0x2,%R11                           | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nSUB %RDX,%R9                            | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV -0xa8(%RBP),%R12                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVXORPD %XMM10,%XMM10,%XMM10\nAND $0x3,%R9D                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVCVTSS2SD (%R10,%R11,1),%XMM10,%XMM12   | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVCVTSS2SD (%RCX,%R11,1),%XMM10,%XMM14   | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVCVTSS2SD (%RSI,%R11,1),%XMM10,%XMM13   | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVCVTSS2SD (%RAX,%R11,1),%XMM10,%XMM15   | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVCVTSS2SD (%R12,%R11,1),%XMM10,%XMM7    | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVCVTSS2SD (%R13,%R11,1),%XMM10,%XMM9    | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVADDSD %XMM12,%XMM0,%XMM0               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM14,%XMM2,%XMM2               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM13,%XMM11,%XMM11             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM15,%XMM8,%XMM8               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM7,%XMM4,%XMM4                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM9,%XMM1,%XMM1                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nLEA 0x2(%RBX),%R10                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %R14,%RDX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJAE 1fba <main+0xd7a>                   | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nTEST %R9,%R9                            | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 1e71 <main+0xc31>                    | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMP $0x1,%R9                            | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 1df5 <main+0xbb5>                    | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMP $0x2,%R9                            | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 1d87 <main+0xb47>                    | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV -0xf8(%RBP),%R15                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x100(%RBP),%RDI                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSAL $0x2,%RDX                           | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nVXORPD %XMM5,%XMM5,%XMM5\nMOV -0x108(%RBP),%R8                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x110(%RBP),%R11                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVCVTSS2SD (%R13,%RDX,1),%XMM5,%XMM13    | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVADDSD %XMM13,%XMM1,%XMM1               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOV -0xa8(%RBP),%R9                     | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVCVTSS2SD (%R15,%RDX,1),%XMM5,%XMM3     | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVCVTSS2SD (%RDI,%RDX,1),%XMM5,%XMM6     | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVADDSD %XMM3,%XMM0,%XMM0                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVCVTSS2SD (%R8,%RDX,1),%XMM5,%XMM10     | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVCVTSS2SD (%R11,%RDX,1),%XMM5,%XMM12    | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVADDSD %XMM6,%XMM2,%XMM2                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM10,%XMM11,%XMM11             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVCVTSS2SD (%R9,%RDX,1),%XMM5,%XMM14     | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVADDSD %XMM12,%XMM8,%XMM8               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM14,%XMM4,%XMM4               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOV %R10,%RDX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA 0x3(%RBX),%R10                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV -0xf8(%RBP),%RBX                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x100(%RBP),%RCX                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSAL $0x2,%RDX                           | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nVXORPD %XMM15,%XMM15,%XMM15\nMOV -0x108(%RBP),%RSI                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x110(%RBP),%RAX                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVCVTSS2SD (%R13,%RDX,1),%XMM15,%XMM10   | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVADDSD %XMM10,%XMM1,%XMM1               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOV -0xa8(%RBP),%R12                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVCVTSS2SD (%RBX,%RDX,1),%XMM15,%XMM7    | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVCVTSS2SD (%RCX,%RDX,1),%XMM15,%XMM9    | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVADDSD %XMM7,%XMM0,%XMM0                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVCVTSS2SD (%RSI,%RDX,1),%XMM15,%XMM5    | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVCVTSS2SD (%RAX,%RDX,1),%XMM15,%XMM3    | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVADDSD %XMM9,%XMM2,%XMM2                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM5,%XMM11,%XMM11              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVCVTSS2SD (%R12,%RDX,1),%XMM15,%XMM6    | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVADDSD %XMM3,%XMM8,%XMM8                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM6,%XMM4,%XMM4                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOV %R10,%RDX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nADD $0x1,%R10                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV -0xf8(%RBP),%R15                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x100(%RBP),%RDI                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSAL $0x2,%RDX                           | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nVXORPD %XMM12,%XMM12,%XMM12\nMOV -0x108(%RBP),%R8                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x110(%RBP),%R11                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVCVTSS2SD (%R13,%RDX,1),%XMM12,%XMM5    | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVADDSD %XMM5,%XMM1,%XMM1                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOV -0xa8(%RBP),%R9                     | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVCVTSS2SD (%R15,%RDX,1),%XMM12,%XMM14   | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVCVTSS2SD (%RDI,%RDX,1),%XMM12,%XMM13   | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVADDSD %XMM14,%XMM0,%XMM0               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVCVTSS2SD (%R8,%RDX,1),%XMM12,%XMM15    | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVCVTSS2SD (%R11,%RDX,1),%XMM12,%XMM7    | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVADDSD %XMM13,%XMM2,%XMM2               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM15,%XMM11,%XMM11             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVCVTSS2SD (%R9,%RDX,1),%XMM12,%XMM9     | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nMOV %R10,%RDX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nVADDSD %XMM7,%XMM8,%XMM8                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM9,%XMM4,%XMM4                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nADD $0x1,%R10                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %R14,%RDX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJAE 1fba <main+0xd7a>                   | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV -0xf8(%RBP),%RBX                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x100(%RBP),%RCX                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x108(%RBP),%RSI                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x110(%RBP),%RAX                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0xa8(%RBP),%R12                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA 0x20bd(%RIP),%RSI                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x1,%EDI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x1,%EAX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD %XMM11,-0x130(%RBP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM8,-0xb0(%RBP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM4,-0xa0(%RBP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM1,-0x98(%RBP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM2,-0xf0(%RBP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nCALL 1160 <.plt.sec@start+0x20>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x1,%EDI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x1,%EAX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD -0xf0(%RBP),%XMM0                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA 0x207c(%RIP),%RSI                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1160 <.plt.sec@start+0x20>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x1,%EDI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x1,%EAX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD -0x130(%RBP),%XMM0               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA 0x206d(%RIP),%RSI                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1160 <.plt.sec@start+0x20>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x1,%EDI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x1,%EAX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD -0xb0(%RBP),%XMM0                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA 0x205e(%RIP),%RSI                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1160 <.plt.sec@start+0x20>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x1,%EDI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x1,%EAX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD -0xa0(%RBP),%XMM0                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA 0x2050(%RIP),%RSI                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1160 <.plt.sec@start+0x20>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x1,%EDI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x1,%EAX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD -0x98(%RBP),%XMM0                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA 0x2042(%RIP),%RSI                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1160 <.plt.sec@start+0x20>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nJMP 178c <main+0x54c>                   | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nCALL 1220 <.plt.sec@start+0xe0>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nIMUL $0x30,%R14,%RBX                    | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOV $0x1,%EDI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EAX,%EAX\nLEA 0x2036(%RIP),%RSI                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RBX,%RCX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV %RBX,%R8                            | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV %RBX,%RDX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSHR $0xa,%RCX                           | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nSHR $0x14,%R8                           | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nCALL 1160 <.plt.sec@start+0x20>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV %R14,%RDX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV $0x1,%EDI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EAX,%EAX\nLEA 0x1f35(%RIP),%RSI                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1160 <.plt.sec@start+0x20>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nLEA 0x1f33(%RIP),%R9                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EAX,%EAX\nLEA 0x1f32(%RIP),%R8                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x1f36(%RIP),%RCX                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x1f37(%RIP),%RDX                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x1,%EDI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x1f30(%RIP),%RSI                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1160 <.plt.sec@start+0x20>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x3f04(%RIP),%RDI                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nCALL 1230 <.plt.sec@start+0xf0>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nJMP 1576 <main+0x336>                   | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nMOV -0xf8(%RBP),%R9                     | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x108(%RBP),%RCX                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV $0x40,%EDX                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV -0x100(%RBP),%R10                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x110(%RBP),%RSI                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVMOVAPS (%R9),%ZMM2                     | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVAPS (%RCX),%ZMM11                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOV -0xa8(%RBP),%RAX                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVMOVAPS (%R10),%ZMM5                    | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVEXTRACTI64X4 $0x1,%ZMM2,%YMM0          | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVEXTRACTI64X4 $0x1,%ZMM11,%YMM12        | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVCVTPS2PD %YMM2,%ZMM4                   | 2     | 2     | 0    | 0    | 0    | 0     | 0    | 0  | 7       | 7\nVCVTPS2PD %YMM11,%ZMM15                 | 2     | 2     | 0    | 0    | 0    | 0     | 0    | 0  | 7       | 7\nVMOVAPS (%RSI),%ZMM2                    | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVCVTPS2PD %YMM0,%ZMM3                   | 2     | 2     | 0    | 0    | 0    | 0     | 0    | 0  | 7       | 7\nVCVTPS2PD %YMM12,%ZMM14                 | 2     | 2     | 0    | 0    | 0    | 0     | 0    | 0  | 7       | 7\nVADDPD %ZMM4,%ZMM3,%ZMM9                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDPD %ZMM15,%ZMM14,%ZMM6              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVAPS (%RAX),%ZMM4                    | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVAPS (%R13),%ZMM14                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVAPS %ZMM5,-0xf0(%RBP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVEXTRACTI64X4 $0x1,%ZMM5,%YMM7          | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVEXTRACTI64X4 $0x1,%ZMM2,%YMM1          | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVCVTPS2PD -0xf0(%RBP),%ZMM10            | 3     | 2     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 7       | 7\nVCVTPS2PD %YMM2,%ZMM3                   | 2     | 2     | 0    | 0    | 0    | 0     | 0    | 0  | 7       | 7\nVEXTRACTI64X4 $0x1,%ZMM4,%YMM5          | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVEXTRACTI64X4 $0x1,%ZMM14,%YMM15        | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVCVTPS2PD %YMM7,%ZMM8                   | 2     | 2     | 0    | 0    | 0    | 0     | 0    | 0  | 7       | 7\nVCVTPS2PD %YMM1,%ZMM0                   | 2     | 2     | 0    | 0    | 0    | 0     | 0    | 0  | 7       | 7\nVADDPD %ZMM10,%ZMM8,%ZMM13              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVCVTPS2PD %YMM15,%ZMM2                  | 2     | 2     | 0    | 0    | 0    | 0     | 0    | 0  | 7       | 7\nVADDPD %ZMM3,%ZMM0,%ZMM7                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVAPS %ZMM4,-0xf0(%RBP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVCVTPS2PD %YMM5,%ZMM8                   | 2     | 2     | 0    | 0    | 0    | 0     | 0    | 0  | 7       | 7\nVCVTPS2PD -0xf0(%RBP),%ZMM10            | 3     | 2     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 7       | 7\nVADDPD %ZMM10,%ZMM8,%ZMM11              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVCVTPS2PD (%R13),%ZMM12                 | 3     | 2     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 7       | 7\nVADDPD %ZMM2,%ZMM12,%ZMM1               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nCMP %R11,%RDX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJNE 199b <main+0x75b>                   | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nJMP 1ba5 <main+0x965>                   | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nVPXOR %XMM1,%XMM1,%XMM1\nVMOVAPD %XMM1,%XMM4                     | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVAPD %XMM1,%XMM8                     | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVAPD %XMM1,%XMM11                    | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVAPD %XMM1,%XMM2                     | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVAPD %XMM1,%XMM0                     | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nJMP 1fba <main+0xd7a>                   | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nVPXOR %XMM1,%XMM1,%XMM1\nXOR %R11D,%R11D\nVMOVAPD %XMM1,%XMM4                     | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVAPD %XMM1,%XMM8                     | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVAPD %XMM1,%XMM11                    | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVAPD %XMM1,%XMM2                     | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVAPD %XMM1,%XMM0                     | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nJMP 1c73 <main+0xa33>                   | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nVZEROUPPER                              | 19    | 0     | 0    | 0    | 0    | 0     | 0    | 0  | 0       | 36\nJMP 1fba <main+0xd7a>                   | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nCALL 11d0 <.plt.sec@start+0x90>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nXCHG %AX,%AX                            | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\n",
        },
      },
      header = {
        "Warnings:\nget_path_cqa_results:\n - Detected a function call instruction: ignoring called function instructions.\nRerun with --follow-calls=append to include them to analysis  or with --follow-calls=inline to simulate inlining.\n",
        "1% of peak computational performance is used (0.45 out of 32.00 FLOP per cycle (GFLOPS @ 1GHz))",
      },
      brief = {
      },
      gain = {
        {
          workaround = " - Try to reorganize arrays of structures to structures of arrays\n - Consider to permute loops (see vectorization gain report)\n",
          title = "Code clean check",
          txt = "Detected a slowdown caused by scalar integer instructions (typically used for address computation).\nBy removing them, you can lower the cost of an iteration from 293.00 to 111.00 cycles (2.64x speedup).",
        },
        {
          workaround = " - Try another compiler or update/tune your current one\n - Make array accesses unit-stride:\n  * If your function streams arrays of structures (AoS), try to use structures of arrays instead (SoA):\nfor(i) a[i].x = b[i].x; (slow, non stride 1) => for(i) a.x[i] = b.x[i]; (fast, stride 1)\n",
          details = "41% of SSE/AVX instructions are used in vector version (process two or more data elements in vector registers):\n - 17% of SSE/AVX loads are used in vector version.\n - 8% of SSE/AVX stores are used in vector version.\n - 50% of SSE/AVX addition or subtraction instructions are used in vector version.\n - 0% of SSE/AVX multiply instructions are used in vector version.\n - 0% of SSE/AVX fused multiply-add instructions are used in vector version.\n - 0% of SSE/AVX nil are used in vector version.\n - 51% of SSE/AVX instructions that are not load, store, addition, subtraction nor multiply instructions are used in vector version.\nSince your execution units are vector units, only a fully vectorized function can use their full power.\n",
          title = "Vectorization",
          txt = "Your function is poorly vectorized.\nOnly 26% of vector register length is used (average across all SSE/AVX instructions).\nBy fully vectorizing your function, you can lower the cost of an iteration from 293.00 to 211.70 cycles (1.38x speedup).",
        },
        {
          title = "Execution units bottlenecks",
          txt = "Found no such bottlenecks but see expert reports for more complex bottlenecks.",
        },
      },
      potential = {
        {
          workaround = "Try to change order in which elements are evaluated (using parentheses) in arithmetic expressions containing both ADD/SUB and MUL operations to enable your compiler to generate FMA instructions wherever possible.\nFor instance a + b*c is a valid FMA (MUL then ADD).\nHowever (a+b)* c cannot be translated into an FMA (ADD then MUL).",
          title = "FMA",
          txt = "Detected 2 FMA (fused multiply-add) operations.\nPresence of both ADD/SUB and MUL operations.",
        },
      },
    },
  },
  AVG = {
      hint = {
        {
          details = "Calling (and then returning from) a function prevents many compiler optimizations (like vectorization), breaks control flow (which reduces pipeline performance) and executes extra instructions to save/restore the registers used inside it, which is very expensive (dozens of cycles). Consider to inline small functions.\n - .plt.sec@start: 1 occurrences\n - unknown: 45 occurrences\n",
          title = "CALL instructions",
          txt = "Detected function call instructions.\n",
        },
        {
          workaround = "Use vector aligned instructions:\n 1) align your arrays on 64 bytes boundaries: replace { void *p = malloc (size); } with { void *p; posix_memalign (&p, 64, size); }.\n 2) inform your compiler that your arrays are vector aligned: if array 'foo' is 64 bytes-aligned, define a pointer 'p_foo' as __builtin_assume_aligned (foo, 64) and use it instead of 'foo' in the loop.\n",
          details = " - VEXTRACTF128: 6 occurrences\n - VEXTRACTF64X4: 6 occurrences\n",
          title = "Vector unaligned load/store instructions",
          txt = "Detected 12 suboptimal vector unaligned load/store instructions.\n",
        },
        {
          workaround = "Avoid mixing data with different types. In particular, check if the type of constants is the same as array elements. Use double instead of single precision only when/where needed by numerical stability and avoid mixing precision. In C/C++, FP constants are double precision by default and must be suffixed by 'f' to make them single precision. Usual math.h functions are double precision and their name needs to be suffixed with 'f' to use their single precision version which is faster and avoids type conversion. For instance, on single precision elements, call expf instead of exp.",
          details = " - VCVTPS2PD (FP32 to FP64, SIMD): 12 occurrences\n - VCVTSD2SS (FP64 to FP32, scalar): 2 occurrences\n - VCVTSI2SS (INT32/64 to FP32, scalar): 1 occurrences\n - VCVTSS2SD (FP32 to FP64, scalar): 29 occurrences\n - VCVTUSI2SS (INT32/64 to FP32, scalar): 1 occurrences\n",
          title = "Conversion instructions",
          txt = "Detected expensive conversion instructions.",
        },
        {
          title = "Type of elements and instruction set",
          txt = "3 SSE or AVX instructions are processing arithmetic or math operations on single precision FP elements in scalar mode (one at a time).\n30 SSE or AVX instructions are processing arithmetic or math operations on double precision FP elements in scalar mode (one at a time).\n12 SSE or AVX instructions are processing arithmetic or math operations on double precision FP elements in vector mode (two at a time).\n6 AVX instructions are processing arithmetic or math operations on double precision FP elements in vector mode (four at a time).\n6 AVX-512 instructions are processing arithmetic or math operations on double precision FP elements in vector mode (eight at a time).\n",
        },
        {
          title = "Matching between your function (in the source code) and the binary function",
          txt = "The binary function is composed of 131 FP arithmetical operations:\n - 122: addition or subtraction (2 inside FMA instructions)\n - 8: multiply (2 inside FMA instructions)\n - 1: square root\nThe binary function is loading 1168 bytes (146 double precision FP elements).\nThe binary function is storing 380 bytes (47 double precision FP elements).",
        },
        {
          title = "Arithmetic intensity",
          txt = "Arithmetic intensity is 0.08 FP operations per loaded or stored byte.",
        },
      },
      expert = {
        {
          title = "General properties",
          txt = "nb instructions    : 532\nloop length        : 2784\nused x86 registers : 16\nused mmx registers : 0\nused xmm registers : 16\nused ymm registers : 14\nused zmm registers : 16\nnb stack references: 21\nADD-SUB / MUL ratio: 8.00\n",
        },
        {
          title = "Front-end",
          txt = "MACRO FUSION NOT POSSIBLE\ninstruction fetch    : 174.00 cycles\ninstruction queue    : 266.00 cycles\ndecoding             : 266.00 cycles\nmicro-operation queue: 293.00 cycles\nfront end            : 293.00 cycles\n",
        },
        {
          title = "Back-end",
          txt = "       | P0    | P1    | P2    | P3    | P4     | P5     | P6\n----------------------------------------------------------------\nuops   | 97.00 | 71.00 | 76.50 | 76.50 | 141.50 | 141.50 | 43.00\ncycles | 97.00 | 71.00 | 76.50 | 76.50 | 141.50 | 141.50 | 43.00\n\nCycles executing div or sqrt instructions: 61.00-208.00\n",
        },
        {
          title = "Cycles summary",
          txt = "Front-end : 293.00\nDispatch  : 141.50\nDIV/SQRT  : 61.00-208.00\nOverall L1: 293.00\n",
        },
        {
          title = "Vectorization ratios",
          txt = "INT\nall    : 23%\nload   : 0%\nstore  : 4%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 40%\nFP\nall     : 46%\nload    : 19%\nstore   : 18%\nmul     : 0%\nadd-sub : 50%\nfma     : 0%\ndiv/sqrt: 0%\nother   : 54%\nINT+FP\nall     : 41%\nload    : 17%\nstore   : 8%\nmul     : 0%\nadd-sub : 50%\nfma     : 0%\ndiv/sqrt: 0%\nother   : 51%\n",
        },
        {
          title = "Vector efficiency ratios",
          txt = "INT\nall    : 17%\nload   : 11%\nstore  : 11%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 21%\nFP\nall     : 29%\nload    : 23%\nstore   : 28%\nmul     : 10%\nadd-sub : 31%\nfma     : 12%\ndiv/sqrt: 6%\nother   : 27%\nINT+FP\nall     : 26%\nload    : 21%\nstore   : 17%\nmul     : 10%\nadd-sub : 31%\nfma     : 12%\ndiv/sqrt: 10%\nother   : 26%\n",
        },
        {
          title = "Cycles and memory resources usage",
          txt = "Assuming all data fit into the L1 cache, each call to the function takes 293.00 cycles. At this rate:\n - 3% of peak load performance is reached (3.99 out of 128.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 2% of peak store performance is reached (1.30 out of 64.00 bytes stored per cycle (GB/s @ 1GHz))\n",
        },
        {
          title = "Front-end bottlenecks",
          txt = "Performance is limited by instruction throughput (loading/decoding program instructions to execution core) (front-end is a bottleneck).\n\nBy removing all these bottlenecks, you can lower the cost of an iteration from 293.00 to 266.00 cycles (1.10x speedup).\n",
        },
        {
          title = "ASM code",
          txt = "In the binary file, the address of the function is: 1240\n\nInstruction                             | Nb FU | P0    | P1   | P2   | P3   | P4    | P5   | P6 | Latency | Recip. throughput\n------------------------------------------------------------------------------------------------------------------------------\nENDBR64\nLEA 0x8(%RSP),%R10                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nAND $-0x40,%RSP                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nPUSHQ -0x8(%R10)                        | 3     | 0     | 0    | 0.50 | 0.50 | 1     | 1    | 0  | 0       | 8\nPUSH %RBP                               | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nMOV %RSP,%RBP                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nPUSH %R15                               | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R14                               | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R13                               | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R12                               | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R10                               | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %RBX                               | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nSUB $0x140,%RSP                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EDI,-0x84(%RBP)                    | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA -0x84(%RBP),%RDI                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RSI,-0x90(%RBP)                    | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA -0x90(%RBP),%RSI                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %FS:0x28,%RAX                       | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RAX,-0x38(%RBP)                    | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nXOR %EAX,%EAX\nCALL 1170 <.plt.sec@start+0x30>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nLEA -0x78(%RBP),%RSI                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x44000000,%EDI                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 11b0 <.plt.sec@start+0x70>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nLEA -0x74(%RBP),%RSI                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x44000000,%EDI                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 11c0 <.plt.sec@start+0x80>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nCMPL $0x1,-0x84(%RBP)                   | 1     | 0     | 0    | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nJG 1814 <main+0x5d4>                    | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOVSXD -0x78(%RBP),%RCX                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV $0x186a0,%EAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EDX,%EDX\nMOV $0x61a80,%ESI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x40,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x186a0,%R14D                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nDIV %RCX                                | 23    | 11.50 | 0    | 0    | 0    | 11.50 | 0    | 0  | 39-95   | 22-95\nMOV %RAX,%R15                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nCALL 1180 <.plt.sec@start+0x40>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x61a80,%ESI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x40,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,-0xf8(%RBP)                    | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 1180 <.plt.sec@start+0x40>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x61a80,%ESI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x40,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,-0x100(%RBP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 1180 <.plt.sec@start+0x40>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x61a80,%ESI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x40,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,-0x108(%RBP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 1180 <.plt.sec@start+0x40>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x61a80,%ESI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x40,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,-0x110(%RBP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 1180 <.plt.sec@start+0x40>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x61a80,%ESI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x40,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,-0xa8(%RBP)                    | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 1180 <.plt.sec@start+0x40>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nXOR %EDI,%EDI\nMOV %RAX,%R13                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nCALL 11f0 <.plt.sec@start+0xb0>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV %R15D,-0x98(%RBP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV -0xa8(%RBP),%R15                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nXOR %EBX,%EBX\nNOPL (%RAX)                             | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV -0x98(%RBP),%R15D                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSUB $0x8,%RSP                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV -0xf8(%RBP),%RCX                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %R15D,%R8D                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nXOR %ESI,%ESI\nPUSH $0x44000000                        | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nMOV $0x4c00040a,%R9D                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0xc000000,%EDX                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $-0x1,%RDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 11a0 <.plt.sec@start+0x60>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x4c00040a,%R9D                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R15D,%R8D                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nXOR %ESI,%ESI\nMOV -0x100(%RBP),%RCX                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV $0xc000000,%EDX                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $-0x1,%RDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVL $0x44000000,(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nCALL 11a0 <.plt.sec@start+0x60>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x4c00040a,%R9D                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R15D,%R8D                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nXOR %ESI,%ESI\nMOV -0x108(%RBP),%RCX                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV $0xc000000,%EDX                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $-0x1,%RDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVL $0x44000000,(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nCALL 11a0 <.plt.sec@start+0x60>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x4c00040a,%R9D                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R15D,%R8D                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nXOR %ESI,%ESI\nMOV -0x110(%RBP),%RCX                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV $0xc000000,%EDX                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $-0x1,%RDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVL $0x44000000,(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nCALL 11a0 <.plt.sec@start+0x60>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x4c00040a,%R9D                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R15D,%R8D                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nXOR %ESI,%ESI\nMOV -0xa8(%RBP),%RCX                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV $0xc000000,%EDX                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $-0x1,%RDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVL $0x44000000,(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nCALL 11a0 <.plt.sec@start+0x60>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV %R13,%RCX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nXOR %ESI,%ESI\nMOV $0x4c00040a,%R9D                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R15D,%R8D                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV $0xc000000,%EDX                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $-0x1,%RDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVL $0x44000000,(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nCALL 11a0 <.plt.sec@start+0x60>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nPOP %RCX                                | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV -0x74(%RBP),%ECX                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nPOP %RSI                                | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nTEST %ECX,%ECX                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 2093 <main+0xe53>                    | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA -0x1(%R14),%RSI                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVXORPS %XMM1,%XMM1,%XMM1\nMOVSXD %R15D,%R15                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nXOR %EBX,%EBX\nVCVTSI2SS %R14,%XMM1,%XMM2              | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 5       | 1\nVMOVQ -0xf8(%RBP),%XMM14                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVQ -0x108(%RBP),%XMM6                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA 0x2aed(%RIP),%R12                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVCVTUSI2SS %RSI,%XMM3,%XMM3             | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 5       | 1\nMOV %RSI,-0x148(%RBP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nVPINSRQ $0x1,-0x100(%RBP),%XMM14,%XMM15 | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 4       | 6\nVPINSRQ $0x1,-0x110(%RBP),%XMM6,%XMM0   | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 4       | 6\nMOVQ $0,-0xa0(%RBP)                     | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nMOVQ $0,-0x98(%RBP)                     | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nVCVTSS2SD %XMM2,%XMM2,%XMM7             | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVMULSD 0x2c2e(%RIP),%XMM7,%XMM8         | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVINSERTI128 $0x1,%XMM0,%YMM15,%YMM1     | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVMOVDQA %YMM1,-0x130(%RBP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSS %XMM2,%XMM3,%XMM4                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVCVTSS2SD %XMM4,%XMM4,%XMM5             | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVFMADD231SD 0x2c17(%RIP),%XMM5,%XMM8    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM5,-0x140(%RBP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0x2c0f(%RIP),%XMM8,%XMM9         | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVCVTSD2SS %XMM9,%XMM9,%XMM10            | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVMULSS %XMM10,%XMM10,%XMM12             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVCVTSS2SD %XMM10,%XMM10,%XMM11          | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVMOVSD %XMM11,-0xb0(%RBP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVCVTSS2SD %XMM12,%XMM12,%XMM13          | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVMOVSD %XMM13,-0x138(%RBP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVZEROUPPER                              | 19    | 0     | 0    | 0    | 0    | 0     | 0    | 0  | 0       | 36\nJMP 165a <main+0x41a>                   | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nNOPW (%RAX,%RAX,1)                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nNOPW (%RAX,%RAX,1)                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nNOPL (%RAX)                             | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOVSXD -0x74(%RBP),%RBX                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nTEST %EBX,%EBX                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 18cb <main+0x68b>                    | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV -0xf8(%RBP),%RDI                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nCALL 1190 <.plt.sec@start+0x50>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV -0x100(%RBP),%RDI                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nCALL 1190 <.plt.sec@start+0x50>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV -0x108(%RBP),%RDI                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nCALL 1190 <.plt.sec@start+0x50>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV -0x110(%RBP),%RDI                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nCALL 1190 <.plt.sec@start+0x50>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV -0xa8(%RBP),%RDI                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nCALL 1190 <.plt.sec@start+0x50>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV %R13,%RDI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nCALL 1190 <.plt.sec@start+0x50>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nCALL 11e0 <.plt.sec@start+0xa0>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV -0x38(%RBP),%RAX                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nXOR %FS:0x28,%RAX                       | 1     | 0     | 0    | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nJNE 2269 <main+0x1029>                  | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA -0x30(%RBP),%RSP                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EAX,%EAX\nPOP %RBX                                | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R10                                | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R12                                | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R13                                | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R14                                | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R15                                | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %RBP                                | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA -0x8(%R10),%RSP                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nRET\nMOV -0x90(%RBP),%RBX                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nXOR %ESI,%ESI\nMOV $0xa,%EDX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x8(%RBX),%RDI                      | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nCALL 1200 <.plt.sec@start+0xc0>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOVSXD -0x78(%RBP),%RSI                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nXOR %EDX,%EDX\nMOV $0x40,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,%R14                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nDIV %RSI                                | 23    | 11.50 | 0    | 0    | 0    | 11.50 | 0    | 0  | 39-95   | 22-95\nLEA (,%R14,4),%R12                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R12,%RSI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV %RAX,%R15                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nCALL 1180 <.plt.sec@start+0x40>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV %R12,%RSI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV $0x40,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,-0xf8(%RBP)                    | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 1180 <.plt.sec@start+0x40>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV %R12,%RSI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV $0x40,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,-0x100(%RBP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 1180 <.plt.sec@start+0x40>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV %R12,%RSI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV $0x40,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,-0x108(%RBP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 1180 <.plt.sec@start+0x40>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV %R12,%RSI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV $0x40,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,-0x110(%RBP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 1180 <.plt.sec@start+0x40>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x40,%EDI                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R12,%RSI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV %RAX,-0xa8(%RBP)                    | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 1180 <.plt.sec@start+0x40>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nXOR %EDI,%EDI\nMOV %RAX,%R13                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nCALL 11f0 <.plt.sec@start+0xb0>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nTEST %R14,%R14                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJNE 135d <main+0x11d>                   | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nJMP 146f <main+0x22f>                   | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nVMOVSD 0x295d(%RIP),%XMM13              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD -0x98(%RBP),%XMM13,%XMM14        | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nLEA 0x283e(%RIP),%RDI                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD %XMM14,-0xf0(%RBP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nCALL 1150 <.plt.sec@start+0x10>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x1,%EDI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x2934(%RIP),%XMM15              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD -0xf0(%RBP),%XMM0                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD -0xa0(%RBP),%XMM15,%XMM6         | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nLEA 0x2779(%RIP),%RCX                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x274f(%RIP),%RDX                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x2,%EAX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x2832(%RIP),%RSI                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVFNMADD231SD %XMM0,%XMM0,%XMM6          | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVCVTSD2SS %XMM6,%XMM6,%XMM1             | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVSQRTSS %XMM1,%XMM1,%XMM1               | 3     | 3     | 0    | 0    | 0    | 0     | 0    | 0  | 25-27   | 17-18\nVCVTSS2SD %XMM1,%XMM1,%XMM1             | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nCALL 1160 <.plt.sec@start+0x20>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nLEA 0x27dd(%RIP),%RDI                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1150 <.plt.sec@start+0x10>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nTEST %R14,%R14                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 2224 <main+0xfe4>                    | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMPQ $0xe,-0x148(%RBP)                  | 1     | 0     | 0    | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nJBE 2241 <main+0x1001>                  | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV %R14,%R8                            | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nVXORPD %XMM1,%XMM1,%XMM1\nXOR %EDX,%EDX\nSHR $0x4,%R8                            | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nVMOVAPD %ZMM1,%ZMM11                    | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVAPD %ZMM1,%ZMM7                     | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nMOV %R8,%R11                            | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nVMOVAPD %ZMM1,%ZMM6                     | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVAPD %ZMM1,%ZMM13                    | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nSAL $0x6,%R11                           | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nAND $0x1,%R8B                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVAPD %ZMM1,%ZMM9                     | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nJNE 2116 <main+0xed6>                   | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV -0xf8(%RBP),%RBX                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x100(%RBP),%R12                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x108(%RBP),%R15                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x110(%RBP),%RDI                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0xa8(%RBP),%R8                     | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVEXTRACTF64X4 $0x1,%ZMM1,%YMM0          | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVEXTRACTF64X4 $0x1,%ZMM7,%YMM15         | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVEXTRACTF64X4 $0x1,%ZMM11,%YMM8         | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nMOV %R14,%R11                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nVADDPD %YMM1,%YMM0,%YMM3                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDPD %YMM11,%YMM8,%YMM11              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nAND $-0x10,%R11                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDPD %YMM7,%YMM15,%YMM2               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOVSXD %R11D,%RBX                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nVEXTRACTF128 $0x1,%YMM3,%XMM1           | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVEXTRACTF128 $0x1,%YMM11,%XMM10         | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVEXTRACTF128 $0x1,%YMM2,%XMM7           | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVADDPD %XMM11,%XMM10,%XMM12             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDPD %XMM3,%XMM1,%XMM5                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDPD %XMM2,%XMM7,%XMM0                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVUNPCKHPD %XMM5,%XMM5,%XMM4             | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 4-7     | 2\nVUNPCKHPD %XMM12,%XMM12,%XMM14          | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 4-7     | 2\nVUNPCKHPD %XMM0,%XMM0,%XMM3             | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 4-7     | 2\nVADDPD %XMM5,%XMM4,%XMM1                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDPD %XMM12,%XMM14,%XMM4              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDPD %XMM0,%XMM3,%XMM8                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVEXTRACTF64X4 $0x1,%ZMM6,%YMM5          | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVEXTRACTF64X4 $0x1,%ZMM9,%YMM0          | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVEXTRACTF64X4 $0x1,%ZMM13,%YMM14        | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVADDPD %YMM6,%YMM5,%YMM6                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDPD %YMM9,%YMM0,%YMM9                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDPD %YMM13,%YMM14,%YMM13             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVEXTRACTF128 $0x1,%YMM6,%XMM11          | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVEXTRACTF128 $0x1,%YMM9,%XMM3           | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVEXTRACTF128 $0x1,%YMM13,%XMM15         | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVADDPD %XMM6,%XMM11,%XMM10              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDPD %XMM9,%XMM3,%XMM5                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDPD %XMM13,%XMM15,%XMM7              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVUNPCKHPD %XMM10,%XMM10,%XMM12          | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 4-7     | 2\nVUNPCKHPD %XMM5,%XMM5,%XMM6             | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 4-7     | 2\nVUNPCKHPD %XMM7,%XMM7,%XMM2             | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 4-7     | 2\nVADDPD %XMM10,%XMM12,%XMM11             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDPD %XMM5,%XMM6,%XMM0                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDPD %XMM7,%XMM2,%XMM2                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nCMP %R11,%R14                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 2261 <main+0x1021>                   | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nVZEROUPPER                              | 19    | 0     | 0    | 0    | 0    | 0     | 0    | 0  | 0       | 36\nMOV -0xf8(%RBP),%R10                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x100(%RBP),%RCX                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA 0x1(%RBX),%RDX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R14,%R9                            | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV -0x108(%RBP),%RSI                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x110(%RBP),%RAX                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSAL $0x2,%R11                           | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nSUB %RDX,%R9                            | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV -0xa8(%RBP),%R12                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVXORPD %XMM10,%XMM10,%XMM10\nAND $0x3,%R9D                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVCVTSS2SD (%R10,%R11,1),%XMM10,%XMM12   | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVCVTSS2SD (%RCX,%R11,1),%XMM10,%XMM14   | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVCVTSS2SD (%RSI,%R11,1),%XMM10,%XMM13   | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVCVTSS2SD (%RAX,%R11,1),%XMM10,%XMM15   | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVCVTSS2SD (%R12,%R11,1),%XMM10,%XMM7    | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVCVTSS2SD (%R13,%R11,1),%XMM10,%XMM9    | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVADDSD %XMM12,%XMM0,%XMM0               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM14,%XMM2,%XMM2               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM13,%XMM11,%XMM11             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM15,%XMM8,%XMM8               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM7,%XMM4,%XMM4                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM9,%XMM1,%XMM1                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nLEA 0x2(%RBX),%R10                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %R14,%RDX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJAE 1fba <main+0xd7a>                   | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nTEST %R9,%R9                            | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 1e71 <main+0xc31>                    | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMP $0x1,%R9                            | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 1df5 <main+0xbb5>                    | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMP $0x2,%R9                            | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 1d87 <main+0xb47>                    | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV -0xf8(%RBP),%R15                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x100(%RBP),%RDI                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSAL $0x2,%RDX                           | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nVXORPD %XMM5,%XMM5,%XMM5\nMOV -0x108(%RBP),%R8                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x110(%RBP),%R11                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVCVTSS2SD (%R13,%RDX,1),%XMM5,%XMM13    | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVADDSD %XMM13,%XMM1,%XMM1               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOV -0xa8(%RBP),%R9                     | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVCVTSS2SD (%R15,%RDX,1),%XMM5,%XMM3     | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVCVTSS2SD (%RDI,%RDX,1),%XMM5,%XMM6     | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVADDSD %XMM3,%XMM0,%XMM0                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVCVTSS2SD (%R8,%RDX,1),%XMM5,%XMM10     | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVCVTSS2SD (%R11,%RDX,1),%XMM5,%XMM12    | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVADDSD %XMM6,%XMM2,%XMM2                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM10,%XMM11,%XMM11             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVCVTSS2SD (%R9,%RDX,1),%XMM5,%XMM14     | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVADDSD %XMM12,%XMM8,%XMM8               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM14,%XMM4,%XMM4               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOV %R10,%RDX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA 0x3(%RBX),%R10                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV -0xf8(%RBP),%RBX                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x100(%RBP),%RCX                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSAL $0x2,%RDX                           | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nVXORPD %XMM15,%XMM15,%XMM15\nMOV -0x108(%RBP),%RSI                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x110(%RBP),%RAX                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVCVTSS2SD (%R13,%RDX,1),%XMM15,%XMM10   | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVADDSD %XMM10,%XMM1,%XMM1               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOV -0xa8(%RBP),%R12                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVCVTSS2SD (%RBX,%RDX,1),%XMM15,%XMM7    | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVCVTSS2SD (%RCX,%RDX,1),%XMM15,%XMM9    | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVADDSD %XMM7,%XMM0,%XMM0                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVCVTSS2SD (%RSI,%RDX,1),%XMM15,%XMM5    | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVCVTSS2SD (%RAX,%RDX,1),%XMM15,%XMM3    | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVADDSD %XMM9,%XMM2,%XMM2                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM5,%XMM11,%XMM11              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVCVTSS2SD (%R12,%RDX,1),%XMM15,%XMM6    | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVADDSD %XMM3,%XMM8,%XMM8                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM6,%XMM4,%XMM4                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOV %R10,%RDX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nADD $0x1,%R10                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV -0xf8(%RBP),%R15                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x100(%RBP),%RDI                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSAL $0x2,%RDX                           | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nVXORPD %XMM12,%XMM12,%XMM12\nMOV -0x108(%RBP),%R8                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x110(%RBP),%R11                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVCVTSS2SD (%R13,%RDX,1),%XMM12,%XMM5    | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVADDSD %XMM5,%XMM1,%XMM1                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOV -0xa8(%RBP),%R9                     | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVCVTSS2SD (%R15,%RDX,1),%XMM12,%XMM14   | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVCVTSS2SD (%RDI,%RDX,1),%XMM12,%XMM13   | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVADDSD %XMM14,%XMM0,%XMM0               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVCVTSS2SD (%R8,%RDX,1),%XMM12,%XMM15    | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVCVTSS2SD (%R11,%RDX,1),%XMM12,%XMM7    | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nVADDSD %XMM13,%XMM2,%XMM2               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM15,%XMM11,%XMM11             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVCVTSS2SD (%R9,%RDX,1),%XMM12,%XMM9     | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 1\nMOV %R10,%RDX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nVADDSD %XMM7,%XMM8,%XMM8                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM9,%XMM4,%XMM4                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nADD $0x1,%R10                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %R14,%RDX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJAE 1fba <main+0xd7a>                   | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV -0xf8(%RBP),%RBX                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x100(%RBP),%RCX                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x108(%RBP),%RSI                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x110(%RBP),%RAX                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0xa8(%RBP),%R12                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA 0x20bd(%RIP),%RSI                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x1,%EDI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x1,%EAX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD %XMM11,-0x130(%RBP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM8,-0xb0(%RBP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM4,-0xa0(%RBP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM1,-0x98(%RBP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM2,-0xf0(%RBP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nCALL 1160 <.plt.sec@start+0x20>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x1,%EDI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x1,%EAX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD -0xf0(%RBP),%XMM0                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA 0x207c(%RIP),%RSI                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1160 <.plt.sec@start+0x20>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x1,%EDI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x1,%EAX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD -0x130(%RBP),%XMM0               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA 0x206d(%RIP),%RSI                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1160 <.plt.sec@start+0x20>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x1,%EDI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x1,%EAX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD -0xb0(%RBP),%XMM0                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA 0x205e(%RIP),%RSI                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1160 <.plt.sec@start+0x20>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x1,%EDI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x1,%EAX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD -0xa0(%RBP),%XMM0                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA 0x2050(%RIP),%RSI                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1160 <.plt.sec@start+0x20>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV $0x1,%EDI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x1,%EAX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD -0x98(%RBP),%XMM0                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA 0x2042(%RIP),%RSI                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1160 <.plt.sec@start+0x20>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nJMP 178c <main+0x54c>                   | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nCALL 1220 <.plt.sec@start+0xe0>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nIMUL $0x30,%R14,%RBX                    | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOV $0x1,%EDI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EAX,%EAX\nLEA 0x2036(%RIP),%RSI                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RBX,%RCX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV %RBX,%R8                            | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV %RBX,%RDX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSHR $0xa,%RCX                           | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nSHR $0x14,%R8                           | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nCALL 1160 <.plt.sec@start+0x20>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV %R14,%RDX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV $0x1,%EDI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EAX,%EAX\nLEA 0x1f35(%RIP),%RSI                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1160 <.plt.sec@start+0x20>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nLEA 0x1f33(%RIP),%R9                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EAX,%EAX\nLEA 0x1f32(%RIP),%R8                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x1f36(%RIP),%RCX                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x1f37(%RIP),%RDX                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x1,%EDI                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x1f30(%RIP),%RSI                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1160 <.plt.sec@start+0x20>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x3f04(%RIP),%RDI                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nCALL 1230 <.plt.sec@start+0xf0>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nJMP 1576 <main+0x336>                   | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nMOV -0xf8(%RBP),%R9                     | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x108(%RBP),%RCX                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV $0x40,%EDX                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV -0x100(%RBP),%R10                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV -0x110(%RBP),%RSI                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVMOVAPS (%R9),%ZMM2                     | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVAPS (%RCX),%ZMM11                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOV -0xa8(%RBP),%RAX                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVMOVAPS (%R10),%ZMM5                    | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVEXTRACTI64X4 $0x1,%ZMM2,%YMM0          | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVEXTRACTI64X4 $0x1,%ZMM11,%YMM12        | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVCVTPS2PD %YMM2,%ZMM4                   | 2     | 2     | 0    | 0    | 0    | 0     | 0    | 0  | 7       | 7\nVCVTPS2PD %YMM11,%ZMM15                 | 2     | 2     | 0    | 0    | 0    | 0     | 0    | 0  | 7       | 7\nVMOVAPS (%RSI),%ZMM2                    | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVCVTPS2PD %YMM0,%ZMM3                   | 2     | 2     | 0    | 0    | 0    | 0     | 0    | 0  | 7       | 7\nVCVTPS2PD %YMM12,%ZMM14                 | 2     | 2     | 0    | 0    | 0    | 0     | 0    | 0  | 7       | 7\nVADDPD %ZMM4,%ZMM3,%ZMM9                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDPD %ZMM15,%ZMM14,%ZMM6              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVAPS (%RAX),%ZMM4                    | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVAPS (%R13),%ZMM14                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVAPS %ZMM5,-0xf0(%RBP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVEXTRACTI64X4 $0x1,%ZMM5,%YMM7          | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVEXTRACTI64X4 $0x1,%ZMM2,%YMM1          | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVCVTPS2PD -0xf0(%RBP),%ZMM10            | 3     | 2     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 7       | 7\nVCVTPS2PD %YMM2,%ZMM3                   | 2     | 2     | 0    | 0    | 0    | 0     | 0    | 0  | 7       | 7\nVEXTRACTI64X4 $0x1,%ZMM4,%YMM5          | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVEXTRACTI64X4 $0x1,%ZMM14,%YMM15        | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVCVTPS2PD %YMM7,%ZMM8                   | 2     | 2     | 0    | 0    | 0    | 0     | 0    | 0  | 7       | 7\nVCVTPS2PD %YMM1,%ZMM0                   | 2     | 2     | 0    | 0    | 0    | 0     | 0    | 0  | 7       | 7\nVADDPD %ZMM10,%ZMM8,%ZMM13              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVCVTPS2PD %YMM15,%ZMM2                  | 2     | 2     | 0    | 0    | 0    | 0     | 0    | 0  | 7       | 7\nVADDPD %ZMM3,%ZMM0,%ZMM7                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVAPS %ZMM4,-0xf0(%RBP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVCVTPS2PD %YMM5,%ZMM8                   | 2     | 2     | 0    | 0    | 0    | 0     | 0    | 0  | 7       | 7\nVCVTPS2PD -0xf0(%RBP),%ZMM10            | 3     | 2     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 7       | 7\nVADDPD %ZMM10,%ZMM8,%ZMM11              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVCVTPS2PD (%R13),%ZMM12                 | 3     | 2     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 7       | 7\nVADDPD %ZMM2,%ZMM12,%ZMM1               | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nCMP %R11,%RDX                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJNE 199b <main+0x75b>                   | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nJMP 1ba5 <main+0x965>                   | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nVPXOR %XMM1,%XMM1,%XMM1\nVMOVAPD %XMM1,%XMM4                     | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVAPD %XMM1,%XMM8                     | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVAPD %XMM1,%XMM11                    | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVAPD %XMM1,%XMM2                     | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVAPD %XMM1,%XMM0                     | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nJMP 1fba <main+0xd7a>                   | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nVPXOR %XMM1,%XMM1,%XMM1\nXOR %R11D,%R11D\nVMOVAPD %XMM1,%XMM4                     | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVAPD %XMM1,%XMM8                     | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVAPD %XMM1,%XMM11                    | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVAPD %XMM1,%XMM2                     | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVAPD %XMM1,%XMM0                     | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nJMP 1c73 <main+0xa33>                   | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nVZEROUPPER                              | 19    | 0     | 0    | 0    | 0    | 0     | 0    | 0  | 0       | 36\nJMP 1fba <main+0xd7a>                   | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nCALL 11d0 <.plt.sec@start+0x90>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nXCHG %AX,%AX                            | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\n",
        },
      },
      header = {
        "Warnings:\nget_path_cqa_results:\n - Detected a function call instruction: ignoring called function instructions.\nRerun with --follow-calls=append to include them to analysis  or with --follow-calls=inline to simulate inlining.\n",
        "1% of peak computational performance is used (0.45 out of 32.00 FLOP per cycle (GFLOPS @ 1GHz))",
      },
      brief = {
      },
      gain = {
        {
          workaround = " - Try to reorganize arrays of structures to structures of arrays\n - Consider to permute loops (see vectorization gain report)\n",
          title = "Code clean check",
          txt = "Detected a slowdown caused by scalar integer instructions (typically used for address computation).\nBy removing them, you can lower the cost of an iteration from 293.00 to 111.00 cycles (2.64x speedup).",
        },
        {
          workaround = " - Try another compiler or update/tune your current one\n - Make array accesses unit-stride:\n  * If your function streams arrays of structures (AoS), try to use structures of arrays instead (SoA):\nfor(i) a[i].x = b[i].x; (slow, non stride 1) => for(i) a.x[i] = b.x[i]; (fast, stride 1)\n",
          details = "41% of SSE/AVX instructions are used in vector version (process two or more data elements in vector registers):\n - 17% of SSE/AVX loads are used in vector version.\n - 8% of SSE/AVX stores are used in vector version.\n - 50% of SSE/AVX addition or subtraction instructions are used in vector version.\n - 0% of SSE/AVX multiply instructions are used in vector version.\n - 0% of SSE/AVX fused multiply-add instructions are used in vector version.\n - 0% of SSE/AVX nil are used in vector version.\n - 51% of SSE/AVX instructions that are not load, store, addition, subtraction nor multiply instructions are used in vector version.\nSince your execution units are vector units, only a fully vectorized function can use their full power.\n",
          title = "Vectorization",
          txt = "Your function is poorly vectorized.\nOnly 26% of vector register length is used (average across all SSE/AVX instructions).\nBy fully vectorizing your function, you can lower the cost of an iteration from 293.00 to 211.70 cycles (1.38x speedup).",
        },
        {
          title = "Execution units bottlenecks",
          txt = "Found no such bottlenecks but see expert reports for more complex bottlenecks.",
        },
      },
      potential = {
        {
          workaround = "Try to change order in which elements are evaluated (using parentheses) in arithmetic expressions containing both ADD/SUB and MUL operations to enable your compiler to generate FMA instructions wherever possible.\nFor instance a + b*c is a valid FMA (MUL then ADD).\nHowever (a+b)* c cannot be translated into an FMA (ADD then MUL).",
          title = "FMA",
          txt = "Detected 2 FMA (fused multiply-add) operations.\nPresence of both ADD/SUB and MUL operations.",
        },
      },
    },
  common = {
    header = {
      "The function is defined in:\n - /usr/include/stdlib.h:375\n - /usr/include/x86_64-linux-gnu/bits/stdio2.h:107\n - /users/user2234/Code_Nbody3D/nbody_mpi.c:90-101,113-194,201-208,220-230\n\n",
      "Warnings:\nget_cqa_results:\n - Ignoring paths for analysis\n",
    },
  },
}
