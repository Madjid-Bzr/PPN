/users/user2234/Code_Nbody3D/nbody_mpi.c: 25 - 86
--------------------------------------------------------------------------------

25: {
26:   //
27: 
28:   const int start_particle = mpi_rank * particles;
29:   const int end_particle = (mpi_rank + 1) * particles;
[...]
35:   for (int i = start_particle; i < end_particle; i++)
36:   {
37:     //
38:     f32 fx = 0.0;
39:     f32 fy = 0.0;
40:     f32 fz = 0.0;
41:     const f32 p_xi = p.x[i];
42:     const f32 p_yi = p.y[i];
43:     const f32 p_zi = p.z[i];
44: 
45:     for (u64 j = start_particle; j < end_particle; j++)
46:     {
47:       // Newton's law
48:       const f32 dx = p.x[j] - p_xi; // 1
49:       const f32 dy = p.y[j] - p_yi; // 2
50:       const f32 dz = p.z[j] - p_zi; // 3
51:       const f32 d_2 = (dz * dz) + softening;
52:       const f32 d_3 = (dx * dx) + d_2;
53:       const f32 d_4 = (dy * dy) + d_3;
54:       const f32 t = sqrtf(d_4);
55: 
56:       const f32 d_3_over_2 = 1.0f / (d_4 * t); // 11
57: 
58:       // Net force
59:       fx += (dx * d_3_over_2); // 13
60:       fy += (dy * d_3_over_2); // 15
61:       fz += (dz * d_3_over_2); // 17
62:     }
63: 
64:     //
65:     p.vx[i] += (dt * fx); // 19
66:     p.vy[i] += (dt * fy); // 21
67:     p.vz[i] += (dt * fz); // 23
68:   }
69: 
70:   // 3 floating-point operations
71: 
72:   for (u64 i = start_particle; i < end_particle; i++)
73:   {
74:     //
75:     p.x[i] += (dt * p.vx[i]);
76:     p.y[i] += (dt * p.vy[i]);
77:     p.z[i] += (dt * p.vz[i]);
78: 
79:   }
80:   MPI_Allgather(MPI_IN_PLACE, 0, MPI_DATATYPE_NULL, p.x, particles, MPI_FLOAT, MPI_COMM_WORLD);
81:   MPI_Allgather(MPI_IN_PLACE, 0, MPI_DATATYPE_NULL, p.y, particles, MPI_FLOAT, MPI_COMM_WORLD);
82:   MPI_Allgather(MPI_IN_PLACE, 0, MPI_DATATYPE_NULL, p.z, particles, MPI_FLOAT, MPI_COMM_WORLD);
83:   MPI_Allgather(MPI_IN_PLACE, 0, MPI_DATATYPE_NULL, p.vx, particles, MPI_FLOAT, MPI_COMM_WORLD);
84:   MPI_Allgather(MPI_IN_PLACE, 0, MPI_DATATYPE_NULL, p.vy, particles, MPI_FLOAT, MPI_COMM_WORLD);
85:   MPI_Allgather(MPI_IN_PLACE, 0, MPI_DATATYPE_NULL, p.vz, particles, MPI_FLOAT, MPI_COMM_WORLD);
86: }
