_cqa_text_report = {
  paths = {
    {
      hint = {
        {
          details = "Calling (and then returning from) a function prevents many compiler optimizations (like vectorization), breaks control flow (which reduces pipeline performance) and executes extra instructions to save/restore the registers used inside it, which is very expensive (dozens of cycles). Consider to inline small functions.\n - unknown: 14 occurrences\n",
          title = "CALL instructions",
          txt = "Detected function call instructions.\n",
        },
        {
          details = "These instructions generate more than one micro-operation and only one of them can be decoded during a cycle and the extra micro-operations increase pressure on execution units.\n - DIV: 10 occurrences\n - RET: 1 occurrences\n - SETNE: 2 occurrences\n - VCVTSI2SD: 3 occurrences\n - VZEROUPPER: 5 occurrences\n",
          title = "Complex instructions",
          txt = "Detected COMPLEX INSTRUCTIONS.\n",
        },
        {
          workaround = "Avoid mixing data with different types. In particular, check if the type of constants is the same as array elements.",
          details = " - VCVTSI2SD (INT32/64 to FP64, scalar): 3 occurrences\n",
          title = "Conversion instructions",
          txt = "Detected expensive conversion instructions.",
        },
        {
          title = "Type of elements and instruction set",
          txt = "No instructions are processing arithmetic or math operations on FP elements. This function is probably writing/copying data or processing integer elements.",
        },
        {
          title = "Matching between your function (in the source code) and the binary function",
          txt = "The binary function does not contain any FP arithmetical operations.\nThe binary function is loading 602 bytes.\nThe binary function is storing 236 bytes.",
        },
      },
      expert = {
        {
          title = "General properties",
          txt = "nb instructions    : 346\nnb uops            : 485\nloop length        : 1504\nused x86 registers : 16\nused mmx registers : 0\nused xmm registers : 8\nused ymm registers : 5\nused zmm registers : 0\nnb stack references: 26\n",
        },
        {
          title = "Front-end",
          txt = "MACRO FUSION NOT POSSIBLE\nFIT IN UOP CACHE\nmicro-operation queue: 121.25 cycles\nfront end            : 121.25 cycles\n",
        },
        {
          title = "Back-end",
          txt = "       | P0    | P1    | P2    | P3    | P4    | P5\n------------------------------------------------------\nuops   | 62.67 | 62.67 | 65.50 | 65.50 | 62.00 | 62.67\ncycles | 62.67 | 62.67 | 65.50 | 65.50 | 62.00 | 62.67\n\nCycles executing div or sqrt instructions: 110.00-180.00\n",
        },
        {
          title = "Cycles summary",
          txt = "Front-end : 121.25\nDispatch  : 65.50\nDIV/SQRT  : 110.00-180.00\nOverall L1: 121.25-180.00\n",
        },
        {
          title = "Vectorization ratios",
          txt = "INT\nall    : 6%\nload   : 0%\nstore  : 0%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 12%\nFP\nall     : 55%\nload    : 53%\nstore   : 0%\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 100%\nINT+FP\nall     : 16%\nload    : 50%\nstore   : 0%\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: 0%\nother   : 26%\n",
        },
        {
          title = "Vector efficiency ratios",
          txt = "INT\nall    : 35%\nload   : 50%\nstore  : 35%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 34%\nFP\nall     : 56%\nload    : 65%\nstore   : 25%\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 50%\nINT+FP\nall     : 39%\nload    : 64%\nstore   : 35%\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: 25%\nother   : 38%\n",
        },
        {
          title = "Cycles and memory resources usage",
          txt = "Assuming all data fit into the L1 cache, each call to the function takes 180.00 cycles. At this rate:\n - 10% of peak load performance is reached (3.34 out of 32.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 8% of peak store performance is reached (1.31 out of 16.00 bytes stored per cycle (GB/s @ 1GHz))\n",
        },
        {
          title = "Front-end bottlenecks",
          txt = "Found no such bottlenecks.",
        },
        {
          title = "ASM code",
          txt = "In the binary file, the address of the function is: 7350\n\nInstruction                            | Nb FU | P0   | P1   | P2   | P3   | P4 | P5   | Latency | Recip. throughput\n--------------------------------------------------------------------------------------------------------------------\nPUSH %RBP                              | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %RSP,%RBP                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nPUSH %R15                              | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nPUSH %R14                              | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nPUSH %R13                              | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nPUSH %R12                              | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nPUSH %RBX                              | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nAND $-0x20,%RSP                        | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSUB $0x1a0,%RSP                        | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x18(%RDI),%RBX                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x30(%RDI),%RAX                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RDI,0x120(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x28(%RDI),%RDX                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x20(%RDI),%RCX                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x10(%RDI),%RSI                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%RBX),%R15D                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RAX,0x110(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %RDX,0x108(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %RCX,0x118(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV (%RSI),%R12D                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nTEST %R15D,%R15D                       | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE 7791 <exact_rhs_._omp_fn.0+0x441>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nTEST %R12D,%R12D                       | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE 7791 <exact_rhs_._omp_fn.0+0x441>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCALL 2300 <@plt_start@+0x2e0>          | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nIMUL %R12D,%R15D                       | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %EAX,%R13D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCALL 22a0 <@plt_start@+0x280>          | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV %EAX,%EDI                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R15D,%EAX                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nDIV %R13D                              | 10    | 0    | 0    | 0    | 0    | 0  | 0    | 20-28   | 11-18\nMOV %EAX,%R15D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCMP %EDX,%EDI                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJB bba8 <exact_rhs_._omp_fn.0+0x4858>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nIMUL %R15D,%EDI                        | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%RDI,%RDX,1),%EAX                 | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R15,%RAX,1),%R8D                 | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nCMP %R8D,%EAX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJAE 7791 <exact_rhs_._omp_fn.0+0x441>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV 0x120(%RSP),%R10                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nDIV %R12D                              | 10    | 0    | 0    | 0    | 0    | 0  | 0    | 20-28   | 11-18\nMOV 0x8(%R10),%R9                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%R10),%RSI                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%R9),%R9D                         | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %EAX,0x148(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nTEST %R9D,%R9D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE 7791 <exact_rhs_._omp_fn.0+0x441>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV %R9D,%R11D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R9D,%EBX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSUB $0x1,%R15D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVXORPD %XMM0,%XMM0,%XMM0               | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOVSXD 0x148(%RSP),%R13                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nSHR $0x2,%R11D                         | 1     | 0.50 | 0    | 0    | 0    | 0  | 0.50 | 1       | 0.50\nAND $-0x4,%EBX                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nXOR %R8D,%R8D                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nLEA (%R11,%R11,4),%R11                 | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA -0x1(%R9),%R14D                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nSAL $0x5,%R11                          | 1     | 0.50 | 0    | 0    | 0    | 0  | 0.50 | 1       | 0.50\nNOPL (%RAX)                            | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nVZEROUPPER                             | 4     | 0    | 0    | 0    | 0    | 0  | 0    | 2       | 1\nCALL 22f0 <@plt_start@+0x2d0>          | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nMOV 0x120(%RSP),%R10                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x18(%R10),%RAX                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x10(%R10),%RCX                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%RAX),%EDI                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%RCX),%R12D                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA -0x2(%RDI),%R14D                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA -0x2(%R12),%R13D                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nCMP $0x2,%EDI                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE 88fb <exact_rhs_._omp_fn.0+0x15ab> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMP $0x2,%R12D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE 88fb <exact_rhs_._omp_fn.0+0x15ab> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCALL 2300 <@plt_start@+0x2e0>          | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nMOV %EAX,%EBX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCALL 22a0 <@plt_start@+0x280>          | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV %EAX,%R8D                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R14D,%EAX                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL %R13D,%EAX                        | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nDIV %EBX                               | 10    | 0    | 0    | 0    | 0    | 0  | 0    | 20-28   | 11-18\nMOV %EAX,%ESI                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCMP %EDX,%R8D                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJB bbd4 <exact_rhs_._omp_fn.0+0x4884>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nIMUL %ESI,%R8D                         | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R8,%RDX,1),%EAX                  | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RSI,%RAX,1),%R9D                 | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nCMP %R9D,%EAX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJAE 88fb <exact_rhs_._omp_fn.0+0x15ab> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV 0x120(%RSP),%RDI                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nVXORPD %XMM4,%XMM4,%XMM4               | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOVL $0,0x7c(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nDIV %R13D                              | 10    | 0    | 0    | 0    | 0    | 0  | 0    | 20-28   | 11-18\nVMOVSD 0x20cb6(%RIP),%XMM3             | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVSD 0x20cb6(%RIP),%XMM5             | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVAPD 0x20c6e(%RIP),%YMM7            | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 4       | 1\nMOV 0x8(%RDI),%R14                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA -0x1(%R12),%R11D                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA -0x1(%RSI),%R12D                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R11D,0x50(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %R12D,0x78(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV (%R14),%ECX                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %ECX,0x148(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA 0x1(%RAX),%R10D                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nVCVTSI2SD %R10D,%XMM4,%XMM1            | 2     | 1    | 1    | 0    | 0    | 0  | 0    | 4       | 1.50\nMOVSXD %R10D,%R13                      | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R10D,0x48(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVAPD 0x20c14(%RIP),%YMM4            | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 4       | 1\nLEA 0x1(%RDX),%R15D                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R13,0x60(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %R15D,0x100(%RSP)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV $-0x10610,%R15                     | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVMOVSD %XMM1,0x58(%RSP)                | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nNOPW (%RAX,%RAX,1)                     | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nNOP                                    | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nVZEROUPPER                             | 4     | 0    | 0    | 0    | 0    | 0  | 0    | 2       | 1\nCALL 22f0 <@plt_start@+0x2d0>          | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nMOV 0x120(%RSP),%R15                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x18(%R15),%RSI                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x8(%R15),%RDX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%RSI),%EBX                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%RDX),%R12D                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA -0x2(%RBX),%R14D                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA -0x2(%R12),%R13D                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nCMP $0x2,%EBX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE 9b73 <exact_rhs_._omp_fn.0+0x2823> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMP $0x2,%R12D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE 9b73 <exact_rhs_._omp_fn.0+0x2823> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCALL 2300 <@plt_start@+0x2e0>          | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nMOV %EAX,%R15D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCALL 22a0 <@plt_start@+0x280>          | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV %EAX,%ECX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R14D,%EAX                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL %R13D,%EAX                        | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nDIV %R15D                              | 10    | 0    | 0    | 0    | 0    | 0  | 0    | 20-28   | 11-18\nMOV %EAX,%R9D                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCMP %EDX,%ECX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJB bbc9 <exact_rhs_._omp_fn.0+0x4879>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nIMUL %R9D,%ECX                         | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%RCX,%RDX,1),%EAX                 | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R9,%RAX,1),%EDI                  | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nCMP %EDI,%EAX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJAE 9b73 <exact_rhs_._omp_fn.0+0x2823> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV 0x120(%RSP),%RBX                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nVXORPD %XMM4,%XMM4,%XMM4               | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOVL $0,0x58(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nDIV %R13D                              | 10    | 0    | 0    | 0    | 0    | 0  | 0    | 20-28   | 11-18\nVMOVSD 0x1fb4d(%RIP),%XMM3             | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVSD 0x1fb4d(%RIP),%XMM5             | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVAPD 0x1fae5(%RIP),%YMM13           | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 4       | 1\nMOV 0x10(%RBX),%R14                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA -0x1(%R12),%R10D                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA -0x1(%R9),%R13D                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R10D,0x20(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %R13D,0x30(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV (%R14),%R12D                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R12D,0x138(%RSP)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA 0x1(%RDX),%R8D                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R8D,0xf4(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x118(%RSP),%R8                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x1(%RAX),%R11D                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nVCVTSI2SD %R11D,%XMM4,%XMM7            | 2     | 1    | 1    | 0    | 0    | 0  | 0    | 4       | 1.50\nMOVSXD %R11D,%R9                       | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R11D,0x10(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %R9,0x38(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA (%R8,%R8,1),%RSI                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R8,%R15                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RSI,0x28(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADD %R8,%RSI                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSAL $0x3,%R8                           | 1     | 0.50 | 0    | 0    | 0    | 0  | 0.50 | 1       | 0.50\nMOV %R15,%RCX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSETNEB 0x14(%RSP)                      | 2     | 0.50 | 0    | 0.50 | 0.50 | 1  | 0.50 | 1       | 1\nSAL $0x4,%R15                          | 1     | 0.50 | 0    | 0    | 0    | 0  | 0.50 | 1       | 0.50\nVMOVSD %XMM7,0x40(%RSP)                | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVAPD 0x1fa8c(%RIP),%YMM7            | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 4       | 1\nSAL $0x5,%RCX                          | 1     | 0.50 | 0    | 0    | 0    | 0  | 0.50 | 1       | 0.50\nMOV %R15,0x8(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV $-0x10610,%R15                     | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RSI,(%RSP)                        | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %RCX,0x18(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nNOPL (%RAX)                            | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nVZEROUPPER                             | 4     | 0    | 0    | 0    | 0    | 0  | 0    | 2       | 1\nCALL 22f0 <@plt_start@+0x2d0>          | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nMOV 0x120(%RSP),%R8                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x10(%R8),%R15                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x8(%R8),%R10                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%R15),%EBX                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%R10),%R12D                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA -0x2(%RBX),%R14D                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA -0x2(%R12),%R13D                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nCMP $0x2,%EBX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE adfe <exact_rhs_._omp_fn.0+0x3aae> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMP $0x2,%R12D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE adfe <exact_rhs_._omp_fn.0+0x3aae> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCALL 2300 <@plt_start@+0x2e0>          | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nMOV %EAX,%R15D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCALL 22a0 <@plt_start@+0x280>          | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV %EAX,%ECX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R14D,%EAX                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL %R13D,%EAX                        | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nDIV %R15D                              | 10    | 0    | 0    | 0    | 0    | 0  | 0    | 20-28   | 11-18\nMOV %EAX,%R9D                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCMP %EDX,%ECX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJB bbb3 <exact_rhs_._omp_fn.0+0x4863>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nIMUL %R9D,%ECX                         | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%RCX,%RDX,1),%EAX                 | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R9,%RAX,1),%EDI                  | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nCMP %EDI,%EAX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJAE adfe <exact_rhs_._omp_fn.0+0x3aae> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV 0x108(%RSP),%RBX                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nVXORPD %XMM13,%XMM13,%XMM13            | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nSUB $0x1,%R9D                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nDIV %R13D                              | 10    | 0    | 0    | 0    | 0    | 0  | 0    | 20-28   | 11-18\nMOV 0x120(%RSP),%R13                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R9D,0x28(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x110(%RSP),%R10                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOVL $0,0x58(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVSD 0x1e8c2(%RIP),%XMM3             | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nMOV %RBX,%R9                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVMOVAPD 0x1e857(%RIP),%YMM5            | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 4       | 1\nMOV 0x18(%R13),%R15                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%RBX,%RBX,1),%R14                 | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R9,%RDI                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA -0x1(%R12),%ESI                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R14,%R10,1),%R12                 | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %RBX,%R14                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %ESI,0x14(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADD %R10,%R14                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R12,0x30(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV (%R15),%ECX                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R14,0x18(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV $-0x10610,%R15                     | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %ECX,0x138(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA 0x1(%RAX),%R8D                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R10,%RAX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA 0x1(%RDX),%R11D                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %RBX,%RAX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSAL $0x3,%RBX                          | 1     | 0.50 | 0    | 0    | 0    | 0  | 0.50 | 1       | 0.50\nMOV %R8D,0x10(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVCVTSI2SD %R8D,%XMM13,%XMM7            | 2     | 1    | 1    | 0    | 0    | 0  | 0    | 4       | 1.50\nMOVSXD %R8D,%RSI                       | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVMOVSD 0x1e84f(%RIP),%XMM13            | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nMOV %R11D,0xf4(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nSETNEB (%RSP)                          | 2     | 0.50 | 0    | 0.50 | 0.50 | 1  | 0.50 | 1       | 1\nSAL $0x5,%RDI                          | 1     | 0.50 | 0    | 0    | 0    | 0  | 0.50 | 1       | 0.50\nMOV %RAX,0x50(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %RBX,%R8                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSAL $0x4,%R9                           | 1     | 0.50 | 0    | 0    | 0    | 0  | 0.50 | 1       | 0.50\nMOV %RDI,0x8(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVSD %XMM7,0x40(%RSP)                | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVAPD 0x1e7e8(%RIP),%YMM7            | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 4       | 1\nMOV %R9,0x20(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %RSI,0x38(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nNOPW (%RAX,%RAX,1)                     | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nNOPL (%RAX)                            | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nVZEROUPPER                             | 4     | 0    | 0    | 0    | 0    | 0  | 0    | 2       | 1\nCALL 22f0 <@plt_start@+0x2d0>          | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nMOV 0x120(%RSP),%R8                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x18(%R8),%R15                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x10(%R8),%R10                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%R15),%R14D                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%R10),%R15D                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA -0x2(%R14),%R13D                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA -0x2(%R15),%R12D                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nCMP $0x2,%R14D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE b28d <exact_rhs_._omp_fn.0+0x3f3d> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMP $0x2,%R15D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE b28d <exact_rhs_._omp_fn.0+0x3f3d> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCALL 2300 <@plt_start@+0x2e0>          | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nIMUL %R12D,%R13D                       | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %EAX,%EBX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCALL 22a0 <@plt_start@+0x280>          | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV %EAX,%R11D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R13D,%EAX                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nDIV %EBX                               | 10    | 0    | 0    | 0    | 0    | 0  | 0    | 20-28   | 11-18\nMOV %EAX,%R13D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCMP %EDX,%R11D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJB bbbe <exact_rhs_._omp_fn.0+0x486e>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nIMUL %R13D,%R11D                       | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R11,%RDX,1),%EAX                 | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R13,%RAX,1),%ECX                 | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nCMP %ECX,%EAX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJAE b28d <exact_rhs_._omp_fn.0+0x3f3d> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV 0x120(%RSP),%RDI                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nSUB $0x1,%R15D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nDIV %R12D                              | 10    | 0    | 0    | 0    | 0    | 0  | 0    | 20-28   | 11-18\nMOV 0x8(%RDI),%R9                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%RDI),%RDI                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%R9),%R14D                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA -0x2(%R14),%R9D                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x1(%RAX),%R12D                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x1(%RDX),%ESI                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R12D,0x140(%RSP)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nTEST %R9D,%R9D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE b28d <exact_rhs_._omp_fn.0+0x3f3d> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV %R9D,%R8D                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R9D,%EBX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSUB $0x1,%R13D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVMOVQ 0x1d607(%RIP),%XMM6              | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nSHR $0x2,%R8D                          | 1     | 0.50 | 0    | 0    | 0    | 0  | 0.50 | 1       | 0.50\nAND $-0x4,%EBX                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVMOVAPD 0x1d598(%RIP),%YMM0            | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 4       | 1\nSUB $0x3,%R14D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R8,%R8,4),%R10                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nXOR %R8D,%R8D                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nLEA 0x1(%RBX),%R11D                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nSAL $0x5,%R10                          | 1     | 0.50 | 0    | 0    | 0    | 0  | 0.50 | 1       | 0.50\nMOV %R11D,0x148(%RSP)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOVSXD %R12D,%R11                      | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nNOPW %CS:(%RAX,%RAX,1)                 | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nVZEROUPPER                             | 4     | 0    | 0    | 0    | 0    | 0  | 0    | 2       | 1\nLEA -0x28(%RBP),%RSP                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nPOP %RBX                               | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nPOP %R12                               | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nPOP %R13                               | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nPOP %R14                               | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nPOP %R15                               | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nPOP %RBP                               | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nRET                                    | 2     | 0    | 0    | 0.50 | 0.50 | 0  | 1    | 0       | 2\nNOPL (%RAX)                            | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nNOPL (%RAX,%RAX,1)                     | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nNOPW (%RAX,%RAX,1)                     | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nADD $0x1,%R15D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP 73da <exact_rhs_._omp_fn.0+0x8a>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nADD $0x1,%R9D                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP 9bd0 <exact_rhs_._omp_fn.0+0x2880> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nADD $0x1,%R13D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP ae5b <exact_rhs_._omp_fn.0+0x3b0b> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nADD $0x1,%R9D                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP 8957 <exact_rhs_._omp_fn.0+0x1607> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nADD $0x1,%ESI                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP 77ec <exact_rhs_._omp_fn.0+0x49c>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nXCHG %AX,%AX                           | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\n",
        },
      },
      header = {
        "Warnings:\nDetected a function call instruction: ignoring called function instructions.\nRerun with --follow-calls=append to include them to analysis  or with --follow-calls=inline to simulate inlining.",
        "0% of peak computational performance is used (0.00 out of 2.00 FLOP per cycle (GFLOPS @ 1GHz))",
      },
      brief = {
      },
      gain = {
        {
          workaround = " - Try to reorganize arrays of structures to structures of arrays\n - Consider to permute loops (see vectorization gain report)\n - To reference allocatable arrays, use \"allocatable\" instead of \"pointer\" pointers or qualify them with the \"contiguous\" attribute (Fortran 2008)\n - For structures, limit to one indirection. For example, use a_b%c instead of a%b%c with a_b set to a%b before this function\n",
          title = "Code clean check",
          txt = "Detected a slowdown caused by scalar integer instructions (typically used for address computation).\nBy removing them, you can lower the cost of an iteration from 180.00 to 22.00 cycles (8.18x speedup).",
        },
        {
          workaround = " - Try another compiler or update/tune your current one\n - Make array accesses unit-stride:\n  * If your function streams arrays of structures (AoS), try to use structures of arrays instead (SoA):\ndo i a(i)%x = b(i)%x (slow, non stride 1) => do i a%x(i) = b%x(i) (fast, stride 1)\n",
          details = "Store and arithmetical SSE/AVX instructions are used in scalar version (process only one data element in vector registers).\nSince your execution units are vector units, only a vectorized function can use their full power.\n",
          title = "Vectorization",
          txt = "Your function is probably not vectorized.\nOnly 39% of vector register length is used (average across all SSE/AVX instructions).\nBy vectorizing your function, you can lower the cost of an iteration from 180.00 to 101.19 cycles (1.78x speedup).",
        },
        {
          workaround = "Reduce the number of division or square root instructions:\n - If denominator is constant over iterations, use reciprocal (replace x/y with x*(1/y)). Check precision impact. This will be done by your compiler with ffast-math or Ofast\n",
          title = "Execution units bottlenecks",
          txt = "Performance is limited by execution of divide and square root operations (the divide/square root unit is a bottleneck).\n\nBy removing all these bottlenecks, you can lower the cost of an iteration from 180.00 to 121.25 cycles (1.48x speedup).\n",
        },
      },
      potential = {
        {
          title = "Expensive FP math instructions/calls",
          txt = "Detected performance impact from expensive FP math instructions/calls.\nBy removing/reexpressing them, you can lower the cost of an iteration from 180.00 to 98.75 cycles (1.82x speedup).",
        },
      },
    },
  },
  AVG = {
      hint = {
        {
          details = "Calling (and then returning from) a function prevents many compiler optimizations (like vectorization), breaks control flow (which reduces pipeline performance) and executes extra instructions to save/restore the registers used inside it, which is very expensive (dozens of cycles). Consider to inline small functions.\n - unknown: 14 occurrences\n",
          title = "CALL instructions",
          txt = "Detected function call instructions.\n",
        },
        {
          details = "These instructions generate more than one micro-operation and only one of them can be decoded during a cycle and the extra micro-operations increase pressure on execution units.\n - DIV: 10 occurrences\n - RET: 1 occurrences\n - SETNE: 2 occurrences\n - VCVTSI2SD: 3 occurrences\n - VZEROUPPER: 5 occurrences\n",
          title = "Complex instructions",
          txt = "Detected COMPLEX INSTRUCTIONS.\n",
        },
        {
          workaround = "Avoid mixing data with different types. In particular, check if the type of constants is the same as array elements.",
          details = " - VCVTSI2SD (INT32/64 to FP64, scalar): 3 occurrences\n",
          title = "Conversion instructions",
          txt = "Detected expensive conversion instructions.",
        },
        {
          title = "Type of elements and instruction set",
          txt = "No instructions are processing arithmetic or math operations on FP elements. This function is probably writing/copying data or processing integer elements.",
        },
        {
          title = "Matching between your function (in the source code) and the binary function",
          txt = "The binary function does not contain any FP arithmetical operations.\nThe binary function is loading 602 bytes.\nThe binary function is storing 236 bytes.",
        },
      },
      expert = {
        {
          title = "General properties",
          txt = "nb instructions    : 346\nnb uops            : 485\nloop length        : 1504\nused x86 registers : 16\nused mmx registers : 0\nused xmm registers : 8\nused ymm registers : 5\nused zmm registers : 0\nnb stack references: 26\n",
        },
        {
          title = "Front-end",
          txt = "MACRO FUSION NOT POSSIBLE\nFIT IN UOP CACHE\nmicro-operation queue: 121.25 cycles\nfront end            : 121.25 cycles\n",
        },
        {
          title = "Back-end",
          txt = "       | P0    | P1    | P2    | P3    | P4    | P5\n------------------------------------------------------\nuops   | 62.67 | 62.67 | 65.50 | 65.50 | 62.00 | 62.67\ncycles | 62.67 | 62.67 | 65.50 | 65.50 | 62.00 | 62.67\n\nCycles executing div or sqrt instructions: 110.00-180.00\n",
        },
        {
          title = "Cycles summary",
          txt = "Front-end : 121.25\nDispatch  : 65.50\nDIV/SQRT  : 110.00-180.00\nOverall L1: 121.25-180.00\n",
        },
        {
          title = "Vectorization ratios",
          txt = "INT\nall    : 6%\nload   : 0%\nstore  : 0%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 12%\nFP\nall     : 55%\nload    : 53%\nstore   : 0%\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 100%\nINT+FP\nall     : 16%\nload    : 50%\nstore   : 0%\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: 0%\nother   : 26%\n",
        },
        {
          title = "Vector efficiency ratios",
          txt = "INT\nall    : 35%\nload   : 50%\nstore  : 35%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 34%\nFP\nall     : 56%\nload    : 65%\nstore   : 25%\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 50%\nINT+FP\nall     : 39%\nload    : 64%\nstore   : 35%\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: 25%\nother   : 38%\n",
        },
        {
          title = "Cycles and memory resources usage",
          txt = "Assuming all data fit into the L1 cache, each call to the function takes 180.00 cycles. At this rate:\n - 10% of peak load performance is reached (3.34 out of 32.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 8% of peak store performance is reached (1.31 out of 16.00 bytes stored per cycle (GB/s @ 1GHz))\n",
        },
        {
          title = "Front-end bottlenecks",
          txt = "Found no such bottlenecks.",
        },
        {
          title = "ASM code",
          txt = "In the binary file, the address of the function is: 7350\n\nInstruction                            | Nb FU | P0   | P1   | P2   | P3   | P4 | P5   | Latency | Recip. throughput\n--------------------------------------------------------------------------------------------------------------------\nPUSH %RBP                              | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %RSP,%RBP                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nPUSH %R15                              | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nPUSH %R14                              | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nPUSH %R13                              | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nPUSH %R12                              | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nPUSH %RBX                              | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nAND $-0x20,%RSP                        | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSUB $0x1a0,%RSP                        | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x18(%RDI),%RBX                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x30(%RDI),%RAX                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RDI,0x120(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x28(%RDI),%RDX                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x20(%RDI),%RCX                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x10(%RDI),%RSI                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%RBX),%R15D                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RAX,0x110(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %RDX,0x108(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %RCX,0x118(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV (%RSI),%R12D                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nTEST %R15D,%R15D                       | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE 7791 <exact_rhs_._omp_fn.0+0x441>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nTEST %R12D,%R12D                       | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE 7791 <exact_rhs_._omp_fn.0+0x441>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCALL 2300 <@plt_start@+0x2e0>          | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nIMUL %R12D,%R15D                       | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %EAX,%R13D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCALL 22a0 <@plt_start@+0x280>          | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV %EAX,%EDI                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R15D,%EAX                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nDIV %R13D                              | 10    | 0    | 0    | 0    | 0    | 0  | 0    | 20-28   | 11-18\nMOV %EAX,%R15D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCMP %EDX,%EDI                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJB bba8 <exact_rhs_._omp_fn.0+0x4858>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nIMUL %R15D,%EDI                        | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%RDI,%RDX,1),%EAX                 | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R15,%RAX,1),%R8D                 | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nCMP %R8D,%EAX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJAE 7791 <exact_rhs_._omp_fn.0+0x441>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV 0x120(%RSP),%R10                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nDIV %R12D                              | 10    | 0    | 0    | 0    | 0    | 0  | 0    | 20-28   | 11-18\nMOV 0x8(%R10),%R9                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%R10),%RSI                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%R9),%R9D                         | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %EAX,0x148(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nTEST %R9D,%R9D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE 7791 <exact_rhs_._omp_fn.0+0x441>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV %R9D,%R11D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R9D,%EBX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSUB $0x1,%R15D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVXORPD %XMM0,%XMM0,%XMM0               | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOVSXD 0x148(%RSP),%R13                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nSHR $0x2,%R11D                         | 1     | 0.50 | 0    | 0    | 0    | 0  | 0.50 | 1       | 0.50\nAND $-0x4,%EBX                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nXOR %R8D,%R8D                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nLEA (%R11,%R11,4),%R11                 | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA -0x1(%R9),%R14D                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nSAL $0x5,%R11                          | 1     | 0.50 | 0    | 0    | 0    | 0  | 0.50 | 1       | 0.50\nNOPL (%RAX)                            | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nVZEROUPPER                             | 4     | 0    | 0    | 0    | 0    | 0  | 0    | 2       | 1\nCALL 22f0 <@plt_start@+0x2d0>          | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nMOV 0x120(%RSP),%R10                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x18(%R10),%RAX                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x10(%R10),%RCX                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%RAX),%EDI                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%RCX),%R12D                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA -0x2(%RDI),%R14D                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA -0x2(%R12),%R13D                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nCMP $0x2,%EDI                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE 88fb <exact_rhs_._omp_fn.0+0x15ab> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMP $0x2,%R12D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE 88fb <exact_rhs_._omp_fn.0+0x15ab> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCALL 2300 <@plt_start@+0x2e0>          | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nMOV %EAX,%EBX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCALL 22a0 <@plt_start@+0x280>          | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV %EAX,%R8D                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R14D,%EAX                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL %R13D,%EAX                        | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nDIV %EBX                               | 10    | 0    | 0    | 0    | 0    | 0  | 0    | 20-28   | 11-18\nMOV %EAX,%ESI                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCMP %EDX,%R8D                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJB bbd4 <exact_rhs_._omp_fn.0+0x4884>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nIMUL %ESI,%R8D                         | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R8,%RDX,1),%EAX                  | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RSI,%RAX,1),%R9D                 | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nCMP %R9D,%EAX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJAE 88fb <exact_rhs_._omp_fn.0+0x15ab> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV 0x120(%RSP),%RDI                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nVXORPD %XMM4,%XMM4,%XMM4               | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOVL $0,0x7c(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nDIV %R13D                              | 10    | 0    | 0    | 0    | 0    | 0  | 0    | 20-28   | 11-18\nVMOVSD 0x20cb6(%RIP),%XMM3             | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVSD 0x20cb6(%RIP),%XMM5             | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVAPD 0x20c6e(%RIP),%YMM7            | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 4       | 1\nMOV 0x8(%RDI),%R14                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA -0x1(%R12),%R11D                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA -0x1(%RSI),%R12D                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R11D,0x50(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %R12D,0x78(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV (%R14),%ECX                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %ECX,0x148(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA 0x1(%RAX),%R10D                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nVCVTSI2SD %R10D,%XMM4,%XMM1            | 2     | 1    | 1    | 0    | 0    | 0  | 0    | 4       | 1.50\nMOVSXD %R10D,%R13                      | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R10D,0x48(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVAPD 0x20c14(%RIP),%YMM4            | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 4       | 1\nLEA 0x1(%RDX),%R15D                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R13,0x60(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %R15D,0x100(%RSP)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV $-0x10610,%R15                     | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVMOVSD %XMM1,0x58(%RSP)                | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nNOPW (%RAX,%RAX,1)                     | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nNOP                                    | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nVZEROUPPER                             | 4     | 0    | 0    | 0    | 0    | 0  | 0    | 2       | 1\nCALL 22f0 <@plt_start@+0x2d0>          | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nMOV 0x120(%RSP),%R15                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x18(%R15),%RSI                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x8(%R15),%RDX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%RSI),%EBX                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%RDX),%R12D                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA -0x2(%RBX),%R14D                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA -0x2(%R12),%R13D                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nCMP $0x2,%EBX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE 9b73 <exact_rhs_._omp_fn.0+0x2823> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMP $0x2,%R12D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE 9b73 <exact_rhs_._omp_fn.0+0x2823> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCALL 2300 <@plt_start@+0x2e0>          | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nMOV %EAX,%R15D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCALL 22a0 <@plt_start@+0x280>          | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV %EAX,%ECX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R14D,%EAX                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL %R13D,%EAX                        | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nDIV %R15D                              | 10    | 0    | 0    | 0    | 0    | 0  | 0    | 20-28   | 11-18\nMOV %EAX,%R9D                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCMP %EDX,%ECX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJB bbc9 <exact_rhs_._omp_fn.0+0x4879>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nIMUL %R9D,%ECX                         | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%RCX,%RDX,1),%EAX                 | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R9,%RAX,1),%EDI                  | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nCMP %EDI,%EAX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJAE 9b73 <exact_rhs_._omp_fn.0+0x2823> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV 0x120(%RSP),%RBX                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nVXORPD %XMM4,%XMM4,%XMM4               | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOVL $0,0x58(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nDIV %R13D                              | 10    | 0    | 0    | 0    | 0    | 0  | 0    | 20-28   | 11-18\nVMOVSD 0x1fb4d(%RIP),%XMM3             | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVSD 0x1fb4d(%RIP),%XMM5             | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVAPD 0x1fae5(%RIP),%YMM13           | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 4       | 1\nMOV 0x10(%RBX),%R14                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA -0x1(%R12),%R10D                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA -0x1(%R9),%R13D                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R10D,0x20(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %R13D,0x30(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV (%R14),%R12D                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R12D,0x138(%RSP)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA 0x1(%RDX),%R8D                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R8D,0xf4(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x118(%RSP),%R8                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x1(%RAX),%R11D                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nVCVTSI2SD %R11D,%XMM4,%XMM7            | 2     | 1    | 1    | 0    | 0    | 0  | 0    | 4       | 1.50\nMOVSXD %R11D,%R9                       | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R11D,0x10(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %R9,0x38(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA (%R8,%R8,1),%RSI                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R8,%R15                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RSI,0x28(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADD %R8,%RSI                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSAL $0x3,%R8                           | 1     | 0.50 | 0    | 0    | 0    | 0  | 0.50 | 1       | 0.50\nMOV %R15,%RCX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSETNEB 0x14(%RSP)                      | 2     | 0.50 | 0    | 0.50 | 0.50 | 1  | 0.50 | 1       | 1\nSAL $0x4,%R15                          | 1     | 0.50 | 0    | 0    | 0    | 0  | 0.50 | 1       | 0.50\nVMOVSD %XMM7,0x40(%RSP)                | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVAPD 0x1fa8c(%RIP),%YMM7            | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 4       | 1\nSAL $0x5,%RCX                          | 1     | 0.50 | 0    | 0    | 0    | 0  | 0.50 | 1       | 0.50\nMOV %R15,0x8(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV $-0x10610,%R15                     | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RSI,(%RSP)                        | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %RCX,0x18(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nNOPL (%RAX)                            | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nVZEROUPPER                             | 4     | 0    | 0    | 0    | 0    | 0  | 0    | 2       | 1\nCALL 22f0 <@plt_start@+0x2d0>          | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nMOV 0x120(%RSP),%R8                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x10(%R8),%R15                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x8(%R8),%R10                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%R15),%EBX                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%R10),%R12D                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA -0x2(%RBX),%R14D                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA -0x2(%R12),%R13D                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nCMP $0x2,%EBX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE adfe <exact_rhs_._omp_fn.0+0x3aae> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMP $0x2,%R12D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE adfe <exact_rhs_._omp_fn.0+0x3aae> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCALL 2300 <@plt_start@+0x2e0>          | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nMOV %EAX,%R15D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCALL 22a0 <@plt_start@+0x280>          | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV %EAX,%ECX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R14D,%EAX                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL %R13D,%EAX                        | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nDIV %R15D                              | 10    | 0    | 0    | 0    | 0    | 0  | 0    | 20-28   | 11-18\nMOV %EAX,%R9D                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCMP %EDX,%ECX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJB bbb3 <exact_rhs_._omp_fn.0+0x4863>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nIMUL %R9D,%ECX                         | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%RCX,%RDX,1),%EAX                 | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R9,%RAX,1),%EDI                  | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nCMP %EDI,%EAX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJAE adfe <exact_rhs_._omp_fn.0+0x3aae> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV 0x108(%RSP),%RBX                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nVXORPD %XMM13,%XMM13,%XMM13            | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nSUB $0x1,%R9D                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nDIV %R13D                              | 10    | 0    | 0    | 0    | 0    | 0  | 0    | 20-28   | 11-18\nMOV 0x120(%RSP),%R13                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R9D,0x28(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x110(%RSP),%R10                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOVL $0,0x58(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVSD 0x1e8c2(%RIP),%XMM3             | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nMOV %RBX,%R9                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVMOVAPD 0x1e857(%RIP),%YMM5            | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 4       | 1\nMOV 0x18(%R13),%R15                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%RBX,%RBX,1),%R14                 | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R9,%RDI                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA -0x1(%R12),%ESI                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R14,%R10,1),%R12                 | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %RBX,%R14                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %ESI,0x14(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADD %R10,%R14                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R12,0x30(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV (%R15),%ECX                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R14,0x18(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV $-0x10610,%R15                     | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %ECX,0x138(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA 0x1(%RAX),%R8D                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R10,%RAX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA 0x1(%RDX),%R11D                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %RBX,%RAX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSAL $0x3,%RBX                          | 1     | 0.50 | 0    | 0    | 0    | 0  | 0.50 | 1       | 0.50\nMOV %R8D,0x10(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVCVTSI2SD %R8D,%XMM13,%XMM7            | 2     | 1    | 1    | 0    | 0    | 0  | 0    | 4       | 1.50\nMOVSXD %R8D,%RSI                       | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVMOVSD 0x1e84f(%RIP),%XMM13            | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nMOV %R11D,0xf4(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nSETNEB (%RSP)                          | 2     | 0.50 | 0    | 0.50 | 0.50 | 1  | 0.50 | 1       | 1\nSAL $0x5,%RDI                          | 1     | 0.50 | 0    | 0    | 0    | 0  | 0.50 | 1       | 0.50\nMOV %RAX,0x50(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %RBX,%R8                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSAL $0x4,%R9                           | 1     | 0.50 | 0    | 0    | 0    | 0  | 0.50 | 1       | 0.50\nMOV %RDI,0x8(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVSD %XMM7,0x40(%RSP)                | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVAPD 0x1e7e8(%RIP),%YMM7            | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 4       | 1\nMOV %R9,0x20(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %RSI,0x38(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nNOPW (%RAX,%RAX,1)                     | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nNOPL (%RAX)                            | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nVZEROUPPER                             | 4     | 0    | 0    | 0    | 0    | 0  | 0    | 2       | 1\nCALL 22f0 <@plt_start@+0x2d0>          | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nMOV 0x120(%RSP),%R8                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x18(%R8),%R15                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x10(%R8),%R10                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%R15),%R14D                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%R10),%R15D                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA -0x2(%R14),%R13D                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA -0x2(%R15),%R12D                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nCMP $0x2,%R14D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE b28d <exact_rhs_._omp_fn.0+0x3f3d> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMP $0x2,%R15D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE b28d <exact_rhs_._omp_fn.0+0x3f3d> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCALL 2300 <@plt_start@+0x2e0>          | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nIMUL %R12D,%R13D                       | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %EAX,%EBX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCALL 22a0 <@plt_start@+0x280>          | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV %EAX,%R11D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R13D,%EAX                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nDIV %EBX                               | 10    | 0    | 0    | 0    | 0    | 0  | 0    | 20-28   | 11-18\nMOV %EAX,%R13D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCMP %EDX,%R11D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJB bbbe <exact_rhs_._omp_fn.0+0x486e>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nIMUL %R13D,%R11D                       | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R11,%RDX,1),%EAX                 | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R13,%RAX,1),%ECX                 | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nCMP %ECX,%EAX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJAE b28d <exact_rhs_._omp_fn.0+0x3f3d> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV 0x120(%RSP),%RDI                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nSUB $0x1,%R15D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nDIV %R12D                              | 10    | 0    | 0    | 0    | 0    | 0  | 0    | 20-28   | 11-18\nMOV 0x8(%RDI),%R9                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%RDI),%RDI                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%R9),%R14D                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA -0x2(%R14),%R9D                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x1(%RAX),%R12D                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x1(%RDX),%ESI                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R12D,0x140(%RSP)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nTEST %R9D,%R9D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE b28d <exact_rhs_._omp_fn.0+0x3f3d> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV %R9D,%R8D                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R9D,%EBX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSUB $0x1,%R13D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVMOVQ 0x1d607(%RIP),%XMM6              | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nSHR $0x2,%R8D                          | 1     | 0.50 | 0    | 0    | 0    | 0  | 0.50 | 1       | 0.50\nAND $-0x4,%EBX                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVMOVAPD 0x1d598(%RIP),%YMM0            | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 4       | 1\nSUB $0x3,%R14D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R8,%R8,4),%R10                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nXOR %R8D,%R8D                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nLEA 0x1(%RBX),%R11D                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nSAL $0x5,%R10                          | 1     | 0.50 | 0    | 0    | 0    | 0  | 0.50 | 1       | 0.50\nMOV %R11D,0x148(%RSP)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOVSXD %R12D,%R11                      | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nNOPW %CS:(%RAX,%RAX,1)                 | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nVZEROUPPER                             | 4     | 0    | 0    | 0    | 0    | 0  | 0    | 2       | 1\nLEA -0x28(%RBP),%RSP                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nPOP %RBX                               | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nPOP %R12                               | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nPOP %R13                               | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nPOP %R14                               | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nPOP %R15                               | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nPOP %RBP                               | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nRET                                    | 2     | 0    | 0    | 0.50 | 0.50 | 0  | 1    | 0       | 2\nNOPL (%RAX)                            | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nNOPL (%RAX,%RAX,1)                     | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nNOPW (%RAX,%RAX,1)                     | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nADD $0x1,%R15D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP 73da <exact_rhs_._omp_fn.0+0x8a>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nADD $0x1,%R9D                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP 9bd0 <exact_rhs_._omp_fn.0+0x2880> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nADD $0x1,%R13D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP ae5b <exact_rhs_._omp_fn.0+0x3b0b> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nADD $0x1,%R9D                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP 8957 <exact_rhs_._omp_fn.0+0x1607> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nADD $0x1,%ESI                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nXOR %EDX,%EDX                          | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP 77ec <exact_rhs_._omp_fn.0+0x49c>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nXCHG %AX,%AX                           | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\n",
        },
      },
      header = {
        "Warnings:\nDetected a function call instruction: ignoring called function instructions.\nRerun with --follow-calls=append to include them to analysis  or with --follow-calls=inline to simulate inlining.",
        "0% of peak computational performance is used (0.00 out of 2.00 FLOP per cycle (GFLOPS @ 1GHz))",
      },
      brief = {
      },
      gain = {
        {
          workaround = " - Try to reorganize arrays of structures to structures of arrays\n - Consider to permute loops (see vectorization gain report)\n - To reference allocatable arrays, use \"allocatable\" instead of \"pointer\" pointers or qualify them with the \"contiguous\" attribute (Fortran 2008)\n - For structures, limit to one indirection. For example, use a_b%c instead of a%b%c with a_b set to a%b before this function\n",
          title = "Code clean check",
          txt = "Detected a slowdown caused by scalar integer instructions (typically used for address computation).\nBy removing them, you can lower the cost of an iteration from 180.00 to 22.00 cycles (8.18x speedup).",
        },
        {
          workaround = " - Try another compiler or update/tune your current one\n - Make array accesses unit-stride:\n  * If your function streams arrays of structures (AoS), try to use structures of arrays instead (SoA):\ndo i a(i)%x = b(i)%x (slow, non stride 1) => do i a%x(i) = b%x(i) (fast, stride 1)\n",
          details = "Store and arithmetical SSE/AVX instructions are used in scalar version (process only one data element in vector registers).\nSince your execution units are vector units, only a vectorized function can use their full power.\n",
          title = "Vectorization",
          txt = "Your function is probably not vectorized.\nOnly 39% of vector register length is used (average across all SSE/AVX instructions).\nBy vectorizing your function, you can lower the cost of an iteration from 180.00 to 101.19 cycles (1.78x speedup).",
        },
        {
          workaround = "Reduce the number of division or square root instructions:\n - If denominator is constant over iterations, use reciprocal (replace x/y with x*(1/y)). Check precision impact. This will be done by your compiler with ffast-math or Ofast\n",
          title = "Execution units bottlenecks",
          txt = "Performance is limited by execution of divide and square root operations (the divide/square root unit is a bottleneck).\n\nBy removing all these bottlenecks, you can lower the cost of an iteration from 180.00 to 121.25 cycles (1.48x speedup).\n",
        },
      },
      potential = {
        {
          title = "Expensive FP math instructions/calls",
          txt = "Detected performance impact from expensive FP math instructions/calls.\nBy removing/reexpressing them, you can lower the cost of an iteration from 180.00 to 98.75 cycles (1.82x speedup).",
        },
      },
    },
  common = {
    header = {
      "The function is defined in /users/user2210/NPB3.4-MZ-MPI/BT-MZ/exact_rhs.f90:23-32,42-70,76,82-92,101,111-122,130-133,143-170,176-181,187-192,201,210-221,229-232,243-270,276-286,292,301,310-321,329-332,342-347.\n",
      "Warnings:\nIgnoring paths for analysis",
    },
  },
}
