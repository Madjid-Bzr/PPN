_cqa_text_report = {
  paths = {
    {
      hint = {
        {
          details = "These instructions generate more than one micro-operation and only one of them can be decoded during a cycle and the extra micro-operations increase pressure on execution units.\n - ADD: 3 occurrences\n",
          title = "Complex instructions",
          txt = "Detected COMPLEX INSTRUCTIONS.\n",
        },
        {
          workaround = "Avoid mixing data with different types. In particular, check if the type of constants is the same as array elements.",
          details = " - CLTQ: 1 occurrences\n",
          title = "Conversion instructions",
          txt = "Detected expensive conversion instructions.",
        },
        {
          title = "Type of elements and instruction set",
          txt = "No instructions are processing arithmetic or math operations on FP elements. This loop is probably writing/copying data or processing integer elements.",
        },
        {
          title = "Matching between your loop (in the source code) and the binary loop",
          txt = "The binary loop does not contain any FP arithmetical operations.\nThe binary loop is loading 1080 bytes.\nThe binary loop is storing 208 bytes.",
        },
      },
      expert = {
        {
          title = "General properties",
          txt = "nb instructions    : 374\nnb uops            : 377\nloop length        : 2113\nused x86 registers : 15\nused mmx registers : 0\nused xmm registers : 2\nused ymm registers : 0\nused zmm registers : 0\nnb stack references: 69\n",
        },
        {
          title = "Front-end",
          txt = "MACRO FUSION NOT POSSIBLE\nFIT IN UOP CACHE\nmicro-operation queue: 94.25 cycles\nfront end            : 94.25 cycles\n",
        },
        {
          title = "Back-end",
          txt = "       | P0    | P1    | P2    | P3    | P4    | P5\n------------------------------------------------------\nuops   | 79.67 | 79.67 | 86.50 | 86.50 | 28.00 | 79.67\ncycles | 79.67 | 79.67 | 86.50 | 86.50 | 28.00 | 79.67\n\nCycles executing div or sqrt instructions: NA\n",
        },
        {
          title = "Cycles summary",
          txt = "Front-end : 94.25\nDispatch  : 86.50\nOverall L1: 94.25\n",
        },
        {
          title = "Vectorization ratios",
          txt = "INT\nall    : 0%\nload   : 0%\nstore  : 0%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 0%\nFP\nall     : 0%\nload    : 0%\nstore   : NA (no store vectorizable/vectorized instructions)\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : NA (no other vectorizable/vectorized instructions)\nINT+FP\nall     : 0%\nload    : 0%\nstore   : 0%\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 0%\n",
        },
        {
          title = "Vector efficiency ratios",
          txt = "INT\nall    : 41%\nload   : 25%\nstore  : 46%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 27%\nFP\nall     : 25%\nload    : 25%\nstore   : NA (no store vectorizable/vectorized instructions)\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : NA (no other vectorizable/vectorized instructions)\nINT+FP\nall     : 38%\nload    : 25%\nstore   : 46%\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 27%\n",
        },
        {
          title = "Cycles and memory resources usage",
          txt = "Assuming all data fit into the L1 cache, each iteration of the binary loop takes 94.25 cycles. At this rate:\n - 35% of peak load performance is reached (11.46 out of 32.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 13% of peak store performance is reached (2.21 out of 16.00 bytes stored per cycle (GB/s @ 1GHz))\n",
        },
        {
          title = "Front-end bottlenecks",
          txt = "Performance is limited by instruction throughput (loading/decoding program instructions to execution core) (front-end is a bottleneck).\n\nBy removing all these bottlenecks, you can lower the cost of an iteration from 94.25 to 86.50 cycles (1.09x speedup).\n",
        },
        {
          title = "ASM code",
          txt = "In the binary file, the address of the loop is: ee4d\n\nInstruction                               | Nb FU | P0   | P1   | P2   | P3   | P4 | P5   | Latency | Recip. throughput\n-----------------------------------------------------------------------------------------------------------------------\nMOV 0x1c0(%RSP),%RSI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOVSXD 0x1e8(%RSP),%RDI                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nMOV 0x1d0(%RSP),%R12                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1a0(%RSP),%R10                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RSI,%R14                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x1d8(%RSP),%R11                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RDI,%R14                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %RDI,%R8                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RDI,0xe8(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOVSXD 0x140(%RSP),%RDI                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nLEA 0x1(%R8),%EAX                         | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x158(%RSP),%RBX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nCLTQ                                      | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x1b8(%RSP),%R13                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1a8(%RSP),%R8                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RDI,%R12                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %RDI,0x98(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA (%RSI,%R14,1),%R9                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R11,%RSI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL %RAX,%RSI                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nIMUL %RDI,%RBX                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nIMUL %RDI,%R8                             | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %R12,0xf8(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nIMUL %RDI,%R13                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %R10,%R12                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL %RAX,%R12                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %RSI,%RCX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSUB %R11,%RCX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RBX,0x100(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x198(%RSP),%RBX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R12,%RDX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL %RDI,%RBX                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nSUB %R10,%RDX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x1b0(%RSP),%R10                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RDX,0x228(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x148(%RSP),%RDX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R10,%R11                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL %RAX,%R11                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nIMUL %RDI,%RDX                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %R11,%R15                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R11,0x220(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x150(%RSP),%R11                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nSUB %R10,%R15                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RDX,0xd0(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x168(%RSP),%R10                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R15,0x218(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x170(%RSP),%R15                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RAX,%R11                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nIMUL %RDI,%R10                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %R15,%RDX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL %RAX,%RDX                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %RDX,0xc8(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nSUB %R15,%RDX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x180(%RSP),%R15                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RDX,0x230(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x188(%RSP),%RDX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RDI,%R15                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nIMUL %RDX,%RAX                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %R15,0x1f0(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x160(%RSP),%R15                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RAX,0xc0(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nSUB %RDX,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL 0xe8(%RSP),%R15                      | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nMOV %RAX,0xb8(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADD 0x1c8(%RSP),%R15                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV 0x100(%RSP),%RDI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0xe0(%RSP),%RDX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x6(%RDI,%R15,1),%RAX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x1e0(%RSP),%R15                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0xf8(%RSP),%RDI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%RDX,%RAX,8),%RDX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %R15,%RSI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA 0x6(%RDI,%RSI,1),%RAX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0xd8(%RSP),%RSI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%RSI,%RAX,8),%RAX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %RAX,0xb0(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %R15,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RDI,%R15                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %RCX,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSUB 0x1d8(%RSP),%RCX                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD 0x1e0(%RSP),%RCX                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA 0x6(%RDI,%RAX,1),%RAX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%RSI,%RAX,8),%RDI                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x50(%RSP),%RAX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x6(%R15,%RCX,1),%R15                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%RSI,%R15,8),%RCX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x110(%RSP),%R15                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD $0x2,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RAX,0x238(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x138(%RSP),%RAX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %RAX,%R14                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %R13,%R14                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R15,%R14,8),%R14                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %RAX,%R15                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R14,0x1f8(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x110(%RSP),%R14                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%RAX,%R9,1),%RAX                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %R13,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R14,%RAX,8),%RSI                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x1c0(%RSP),%RAX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RSI,0x200(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA (%RAX,%RAX,1),%R14                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x128(%RSP),%RAX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nSUB %R14,%R9                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x70(%RSP),%R14                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %R15,%R9                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %R13,%R9                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x110(%RSP),%R13                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %RAX,%R12                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %RBX,%R12                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R14,%RSI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R14,%R12,8),%R15                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %RAX,%R12                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R13,%R9,8),%R9                      | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x228(%RSP),%R13                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R9,0x208(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADD %R13,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSUB 0x1a0(%RSP),%R13                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV %RAX,%R9                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %RBX,%R9                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R14,%R9,8),%R14                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x130(%RSP),%R9                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %R12,%R13                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x220(%RSP),%R12                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %R13,%RBX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RSI,%RBX,8),%RBX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x68(%RSP),%RSI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RBX,0x210(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x218(%RSP),%RBX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R9,%RAX                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %R9,%R12                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %R8,%R12                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RSI,%R12,8),%R13                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %RBX,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSUB 0x1b0(%RSP),%RBX                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD %R8,%RAX                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RSI,%RAX,8),%R12                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %R9,%RBX                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %R8,%RBX                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RSI,%RBX,8),%R8                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x120(%RSP),%RSI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R8,0x218(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0xd0(%RSP),%R8                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0xf0(%RSP),%R9                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x150(%RSP),%RBX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%RSI,%R11,1),%RAX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %R8,%RAX                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R9,%RAX,8),%R9                      | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RBX,%RBX,1),%RAX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nSUB %RAX,%R11                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0xc8(%RSP),%RAX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %RSI,%R11                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0xf0(%RSP),%RSI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %R8,%R11                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RSI,%R11,8),%R8                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x178(%RSP),%R11                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x60(%RSP),%RSI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %R11,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %R10,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RSI,%RAX,8),%RBX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x230(%RSP),%RAX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %R11,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %R10,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RSI,%RAX,8),%R11                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x230(%RSP),%RAX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nSUB 0x170(%RSP),%RAX                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD 0x178(%RSP),%RAX                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD %R10,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RSI,%RAX,8),%R10                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x58(%RSP),%RSI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0xc0(%RSP),%RAX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R10,0x220(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADD 0x190(%RSP),%RAX                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD 0x1f0(%RSP),%RAX                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV 0xb8(%RSP),%R10                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%RSI,%RAX,8),%RAX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %RAX,0x228(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x190(%RSP),%RAX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %R10,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSUB 0x188(%RSP),%R10                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD 0x1f0(%RSP),%RAX                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD 0x190(%RSP),%R10                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD 0x1f0(%RSP),%R10                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA (%RSI,%RAX,8),%RAX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %RAX,0x230(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV $0x1,%EAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RSI,%R10,8),%RSI                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %RSI,0x1f0(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0xb0(%RSP),%RSI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nNOPL (%RAX,%RAX,1)                        | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nCMPL $0x1,0x1e8(%RSP)                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJE f7c4 <compute_rhs_._omp_fn.0+0x3474>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMPL $0x2,0x1e8(%RSP)                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJE fb58 <compute_rhs_._omp_fn.0+0x3808>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x48(%RSP),%EDX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nSUB $0x3,%EDX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCMP %EDX,0x1e8(%RSP)                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJE 10804 <compute_rhs_._omp_fn.0+0x44b4>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOVSXD 0x1e8(%RSP),%RAX                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nMOV 0x80(%RSP),%R14D                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nCMP %R14D,%EAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJE f2bb <compute_rhs_._omp_fn.0+0x2f6b>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x118(%RSP),%EBX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nTEST %EBX,%EBX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE ee4d <compute_rhs_._omp_fn.0+0x2afd>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOVSXD 0x140(%RSP),%R13                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nLEA -0x2(%RAX),%EDI                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x1d0(%RSP),%R10                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOVSXD %EDI,%R11                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x1d8(%RSP),%R12                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL 0x160(%RSP),%RAX                     | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nADD 0x1c8(%RSP),%RAX                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV 0xe0(%RSP),%R8                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R13,%R10                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0xd8(%RSP),%R14                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R12,%R11                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x1986d(%RIP),%XMM13               | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nIMUL 0x158(%RSP),%R13                     | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nVMOVSD 0x19864(%RIP),%XMM9                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nLEA (%R12,%R11,1),%RCX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R12,%RCX,1),%RDX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %RAX,%R13                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x1e0(%RSP),%RAX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%R12,%RDX,1),%R9                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x30(%R8,%R13,8),%R15                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x40(%RSP),%R13                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD %RAX,%RCX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %RAX,%RDX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %RAX,%R11                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA 0x6(%R10,%RCX,1),%RDI                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA 0x6(%R10,%RDX,1),%RCX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%RAX,%R9,1),%RDX                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %R12,%R9                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA 0x6(%R10,%R11,1),%RSI                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD %RAX,%R9                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R14,%RDI,8),%R11                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x6(%R10,%R9,1),%R12                  | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA 0x6(%R10,%RDX,1),%RDI                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R14,%RSI,8),%RBX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R14,%R12,8),%R10                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R14,%RCX,8),%RSI                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x58(%R8,%R13,8),%R13                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R14,%RDI,8),%RCX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nNOPW (%RAX,%RAX,1)                        | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV 0x108(%RSP),%R12D                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nCMP %R12D,0xa4(%RSP)                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJE eec0 <compute_rhs_._omp_fn.0+0x2b70>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nADDL $0x1,0x140(%RSP)                     | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nMOV 0x140(%RSP),%EDI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nCMP %EDI,0x78(%RSP)                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJLE 100f2 <compute_rhs_._omp_fn.0+0x3da2> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x118(%RSP),%R15D                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADDL $0x1,0x108(%RSP)                     | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nTEST %R15D,%R15D                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJG e480 <compute_rhs_._omp_fn.0+0x2130>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x118(%RSP),%R9D                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nTEST %R9D,%R9D                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE ee4d <compute_rhs_._omp_fn.0+0x2afd>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOVSXD 0x140(%RSP),%R15                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nMOVSXD %EAX,%RSI                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x1d0(%RSP),%R12                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA -0x2(%RSI),%R8D                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x1d8(%RSP),%RBX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOVSXD %R8D,%R11                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL 0x160(%RSP),%RSI                     | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nADD 0x1c8(%RSP),%RSI                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV 0xe0(%RSP),%R10                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R15,%R12                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x1e0(%RSP),%R14                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RBX,%R11                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0xd8(%RSP),%R13                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL 0x158(%RSP),%R15                     | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nVMOVSD 0x191a8(%RIP),%XMM13               | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVSD 0x19198(%RIP),%XMM9                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nLEA (%RBX,%R11,1),%RDI                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %R14,%R11                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R14,%RDI,1),%R9                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %R15,%RSI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %RBX,%RDI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA 0x30(%R10,%RSI,8),%RAX                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x40(%RSP),%RSI                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD %R14,%RDI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA 0x6(%R12,%R11,1),%RDX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA 0x6(%R12,%R9,1),%R15                  | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA 0x6(%R12,%RDI,1),%R11                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R13,%RDX,8),%RCX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R13,%R15,8),%R8                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R13,%R11,8),%RBX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x58(%R10,%RSI,8),%RSI                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nNOPL (%RAX)                               | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP ee4d <compute_rhs_._omp_fn.0+0x2afd>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nMOV 0xe0(%RSP),%R15                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1c8(%RSP),%R8                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD 0x160(%RSP),%R8                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD 0x100(%RSP),%R8                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV 0xf8(%RSP),%RBX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1e0(%RSP),%R14                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x30(%RSP),%R13                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD 0x1d8(%RSP),%R14                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA 0x30(%R15,%R8,8),%RAX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x38(%RSP),%RSI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0xd8(%RSP),%R11                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD 0x40(%RSP),%R8                        | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA 0x6(%R13,%RBX,1),%R9                  | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x18cb3(%RIP),%XMM13               | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nLEA 0x6(%RBX,%R14,1),%RDI                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x18c9e(%RIP),%XMM9                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nLEA 0x6(%RSI,%RBX,1),%RDX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R11,%RDI,8),%RCX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R11,%R9,8),%R12                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R11,%RDX,8),%R10                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x58(%R15,%R8,8),%R8                  | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nNOPL (%RAX,%RAX,1)                        | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP ee4d <compute_rhs_._omp_fn.0+0x2afd>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nMOV 0x98(%RSP),%R9                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1d0(%RSP),%R12                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x30(%RSP),%RSI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x28(%RSP),%R10                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0xe0(%RSP),%R14                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R9,%R12                             | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x1e0(%RSP),%RDI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL 0x158(%RSP),%R9                      | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nADD 0x1d8(%RSP),%RDI                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV 0x38(%RSP),%R11                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0xd8(%RSP),%R8                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x6(%RSI,%R12,1),%RDX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x20(%RSP),%RSI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x6(%R12,%RDI,1),%RCX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD %R9,%R10                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVMOVSD 0x18922(%RIP),%XMM13               | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nLEA 0x30(%R14,%R10,8),%RAX                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x40(%RSP),%R10                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA 0x6(%R11,%R12,1),%R13                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA 0x6(%R12,%RSI,1),%R12                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R8,%RDX,8),%R15                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R8,%RCX,8),%RBX                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R8,%R13,8),%R9                      | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R8,%R12,8),%RDX                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x58(%R14,%R10,8),%R10                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nNOPW (%RAX,%RAX,1)                        | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP ee4d <compute_rhs_._omp_fn.0+0x2afd>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nADDL $0x1,0x1e8(%RSP)                     | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nMOVL $0x1,0x140(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJMP ee78 <compute_rhs_._omp_fn.0+0x2b28>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nMOV 0x98(%RSP),%RCX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1d0(%RSP),%R15                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1e0(%RSP),%R8                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x18(%RSP),%RBX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x10(%RSP),%RSI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RCX,%R15                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0xe8(%RSP),%RDI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL 0x158(%RSP),%RCX                     | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nIMUL 0x160(%RSP),%RDI                     | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nADD %R8,%RBX                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD 0x1c8(%RSP),%RDI                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD %R8,%RSI                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD 0x8(%RSP),%R8                         | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV 0xe0(%RSP),%R12                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0xd8(%RSP),%RAX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x6(%R15,%RBX,1),%R11                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%RDI,%RCX,1),%R13                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x6(%R15,%R8,1),%R14                  | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV (%RSP),%R8                            | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x30(%R12,%R13,8),%R9                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x40(%RSP),%R13                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA 0x6(%R15,%RSI,1),%RDX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA 0x6(%R15,%R8,1),%R15                  | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%RAX,%R11,8),%R10                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RAX,%RDX,8),%RDI                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RAX,%R14,8),%R11                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RAX,%R15,8),%RBX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x58(%R12,%R13,8),%R13                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nNOPW (%RAX,%RAX,1)                        | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP ee4d <compute_rhs_._omp_fn.0+0x2afd>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\n",
        },
      },
      header = {
        "0% of peak computational performance is used (0.00 out of 2.00 FLOP per cycle (GFLOPS @ 1GHz))",
      },
      brief = {
      },
      gain = {
        {
          workaround = " - Try to reorganize arrays of structures to structures of arrays\n - Consider to permute loops (see vectorization gain report)\n - To reference allocatable arrays, use \"allocatable\" instead of \"pointer\" pointers or qualify them with the \"contiguous\" attribute (Fortran 2008)\n - For structures, limit to one indirection. For example, use a_b%c instead of a%b%c with a_b set to a%b before this loop\n",
          title = "Code clean check",
          txt = "Detected a slowdown caused by scalar integer instructions (typically used for address computation).\nBy removing them, you can lower the cost of an iteration from 94.25 to 10.50 cycles (8.98x speedup).",
        },
        {
          workaround = " - Try another compiler or update/tune your current one:\n  * recompile with fassociative-math (included in Ofast or ffast-math) to extend loop vectorization to FP reductions.\n - Remove inter-iterations dependences from your loop and make it unit-stride:\n  * If your arrays have 2 or more dimensions, check whether elements are accessed contiguously and, otherwise, try to permute loops accordingly:\nFortran storage order is column-major: do i do j a(i,j) = b(i,j) (slow, non stride 1) => do i do j a(j,i) = b(i,j) (fast, stride 1)\n  * If your loop streams arrays of structures (AoS), try to use structures of arrays instead (SoA):\ndo i a(i)%x = b(i)%x (slow, non stride 1) => do i a%x(i) = b%x(i) (fast, stride 1)\n",
          details = "All SSE/AVX instructions are used in scalar version (process only one data element in vector registers).\nSince your execution units are vector units, only a vectorized loop can use their full power.\n",
          title = "Vectorization",
          txt = "Your loop is not vectorized.\nOnly 38% of vector register length is used (average across all SSE/AVX instructions).\nBy vectorizing your loop, you can lower the cost of an iteration from 94.25 to 25.14 cycles (3.75x speedup).",
        },
        {
          title = "Execution units bottlenecks",
          txt = "Found no such bottlenecks but see expert reports for more complex bottlenecks.",
        },
      },
      potential = {
      },
    },
  },
  AVG = {
      hint = {
        {
          details = "These instructions generate more than one micro-operation and only one of them can be decoded during a cycle and the extra micro-operations increase pressure on execution units.\n - ADD: 3 occurrences\n",
          title = "Complex instructions",
          txt = "Detected COMPLEX INSTRUCTIONS.\n",
        },
        {
          workaround = "Avoid mixing data with different types. In particular, check if the type of constants is the same as array elements.",
          details = " - CLTQ: 1 occurrences\n",
          title = "Conversion instructions",
          txt = "Detected expensive conversion instructions.",
        },
        {
          title = "Type of elements and instruction set",
          txt = "No instructions are processing arithmetic or math operations on FP elements. This loop is probably writing/copying data or processing integer elements.",
        },
        {
          title = "Matching between your loop (in the source code) and the binary loop",
          txt = "The binary loop does not contain any FP arithmetical operations.\nThe binary loop is loading 1080 bytes.\nThe binary loop is storing 208 bytes.",
        },
      },
      expert = {
        {
          title = "General properties",
          txt = "nb instructions    : 374\nnb uops            : 377\nloop length        : 2113\nused x86 registers : 15\nused mmx registers : 0\nused xmm registers : 2\nused ymm registers : 0\nused zmm registers : 0\nnb stack references: 69\n",
        },
        {
          title = "Front-end",
          txt = "MACRO FUSION NOT POSSIBLE\nFIT IN UOP CACHE\nmicro-operation queue: 94.25 cycles\nfront end            : 94.25 cycles\n",
        },
        {
          title = "Back-end",
          txt = "       | P0    | P1    | P2    | P3    | P4    | P5\n------------------------------------------------------\nuops   | 79.67 | 79.67 | 86.50 | 86.50 | 28.00 | 79.67\ncycles | 79.67 | 79.67 | 86.50 | 86.50 | 28.00 | 79.67\n\nCycles executing div or sqrt instructions: NA\n",
        },
        {
          title = "Cycles summary",
          txt = "Front-end : 94.25\nDispatch  : 86.50\nOverall L1: 94.25\n",
        },
        {
          title = "Vectorization ratios",
          txt = "INT\nall    : 0%\nload   : 0%\nstore  : 0%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 0%\nFP\nall     : 0%\nload    : 0%\nstore   : NA (no store vectorizable/vectorized instructions)\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : NA (no other vectorizable/vectorized instructions)\nINT+FP\nall     : 0%\nload    : 0%\nstore   : 0%\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 0%\n",
        },
        {
          title = "Vector efficiency ratios",
          txt = "INT\nall    : 41%\nload   : 25%\nstore  : 46%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 27%\nFP\nall     : 25%\nload    : 25%\nstore   : NA (no store vectorizable/vectorized instructions)\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : NA (no other vectorizable/vectorized instructions)\nINT+FP\nall     : 38%\nload    : 25%\nstore   : 46%\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 27%\n",
        },
        {
          title = "Cycles and memory resources usage",
          txt = "Assuming all data fit into the L1 cache, each iteration of the binary loop takes 94.25 cycles. At this rate:\n - 35% of peak load performance is reached (11.46 out of 32.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 13% of peak store performance is reached (2.21 out of 16.00 bytes stored per cycle (GB/s @ 1GHz))\n",
        },
        {
          title = "Front-end bottlenecks",
          txt = "Performance is limited by instruction throughput (loading/decoding program instructions to execution core) (front-end is a bottleneck).\n\nBy removing all these bottlenecks, you can lower the cost of an iteration from 94.25 to 86.50 cycles (1.09x speedup).\n",
        },
        {
          title = "ASM code",
          txt = "In the binary file, the address of the loop is: ee4d\n\nInstruction                               | Nb FU | P0   | P1   | P2   | P3   | P4 | P5   | Latency | Recip. throughput\n-----------------------------------------------------------------------------------------------------------------------\nMOV 0x1c0(%RSP),%RSI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOVSXD 0x1e8(%RSP),%RDI                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nMOV 0x1d0(%RSP),%R12                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1a0(%RSP),%R10                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RSI,%R14                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x1d8(%RSP),%R11                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RDI,%R14                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %RDI,%R8                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RDI,0xe8(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOVSXD 0x140(%RSP),%RDI                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nLEA 0x1(%R8),%EAX                         | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x158(%RSP),%RBX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nCLTQ                                      | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x1b8(%RSP),%R13                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1a8(%RSP),%R8                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RDI,%R12                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %RDI,0x98(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA (%RSI,%R14,1),%R9                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R11,%RSI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL %RAX,%RSI                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nIMUL %RDI,%RBX                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nIMUL %RDI,%R8                             | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %R12,0xf8(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nIMUL %RDI,%R13                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %R10,%R12                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL %RAX,%R12                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %RSI,%RCX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSUB %R11,%RCX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RBX,0x100(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x198(%RSP),%RBX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R12,%RDX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL %RDI,%RBX                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nSUB %R10,%RDX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x1b0(%RSP),%R10                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RDX,0x228(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x148(%RSP),%RDX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R10,%R11                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL %RAX,%R11                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nIMUL %RDI,%RDX                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %R11,%R15                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R11,0x220(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x150(%RSP),%R11                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nSUB %R10,%R15                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RDX,0xd0(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x168(%RSP),%R10                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R15,0x218(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x170(%RSP),%R15                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RAX,%R11                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nIMUL %RDI,%R10                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %R15,%RDX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL %RAX,%RDX                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %RDX,0xc8(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nSUB %R15,%RDX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x180(%RSP),%R15                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RDX,0x230(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x188(%RSP),%RDX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RDI,%R15                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nIMUL %RDX,%RAX                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %R15,0x1f0(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x160(%RSP),%R15                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RAX,0xc0(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nSUB %RDX,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL 0xe8(%RSP),%R15                      | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nMOV %RAX,0xb8(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADD 0x1c8(%RSP),%R15                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV 0x100(%RSP),%RDI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0xe0(%RSP),%RDX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x6(%RDI,%R15,1),%RAX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x1e0(%RSP),%R15                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0xf8(%RSP),%RDI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%RDX,%RAX,8),%RDX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %R15,%RSI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA 0x6(%RDI,%RSI,1),%RAX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0xd8(%RSP),%RSI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%RSI,%RAX,8),%RAX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %RAX,0xb0(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %R15,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RDI,%R15                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %RCX,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSUB 0x1d8(%RSP),%RCX                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD 0x1e0(%RSP),%RCX                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA 0x6(%RDI,%RAX,1),%RAX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%RSI,%RAX,8),%RDI                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x50(%RSP),%RAX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x6(%R15,%RCX,1),%R15                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%RSI,%R15,8),%RCX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x110(%RSP),%R15                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD $0x2,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RAX,0x238(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x138(%RSP),%RAX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %RAX,%R14                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %R13,%R14                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R15,%R14,8),%R14                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %RAX,%R15                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R14,0x1f8(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x110(%RSP),%R14                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%RAX,%R9,1),%RAX                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %R13,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R14,%RAX,8),%RSI                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x1c0(%RSP),%RAX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RSI,0x200(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA (%RAX,%RAX,1),%R14                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x128(%RSP),%RAX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nSUB %R14,%R9                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x70(%RSP),%R14                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %R15,%R9                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %R13,%R9                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x110(%RSP),%R13                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %RAX,%R12                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %RBX,%R12                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R14,%RSI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R14,%R12,8),%R15                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %RAX,%R12                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R13,%R9,8),%R9                      | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x228(%RSP),%R13                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R9,0x208(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADD %R13,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSUB 0x1a0(%RSP),%R13                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV %RAX,%R9                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %RBX,%R9                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R14,%R9,8),%R14                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x130(%RSP),%R9                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %R12,%R13                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x220(%RSP),%R12                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %R13,%RBX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RSI,%RBX,8),%RBX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x68(%RSP),%RSI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RBX,0x210(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x218(%RSP),%RBX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R9,%RAX                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %R9,%R12                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %R8,%R12                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RSI,%R12,8),%R13                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %RBX,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSUB 0x1b0(%RSP),%RBX                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD %R8,%RAX                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RSI,%RAX,8),%R12                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %R9,%RBX                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %R8,%RBX                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RSI,%RBX,8),%R8                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x120(%RSP),%RSI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R8,0x218(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0xd0(%RSP),%R8                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0xf0(%RSP),%R9                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x150(%RSP),%RBX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%RSI,%R11,1),%RAX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %R8,%RAX                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R9,%RAX,8),%R9                      | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RBX,%RBX,1),%RAX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nSUB %RAX,%R11                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0xc8(%RSP),%RAX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %RSI,%R11                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0xf0(%RSP),%RSI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %R8,%R11                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RSI,%R11,8),%R8                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x178(%RSP),%R11                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x60(%RSP),%RSI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %R11,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %R10,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RSI,%RAX,8),%RBX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x230(%RSP),%RAX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %R11,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %R10,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RSI,%RAX,8),%R11                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x230(%RSP),%RAX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nSUB 0x170(%RSP),%RAX                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD 0x178(%RSP),%RAX                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD %R10,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RSI,%RAX,8),%R10                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x58(%RSP),%RSI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0xc0(%RSP),%RAX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R10,0x220(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADD 0x190(%RSP),%RAX                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD 0x1f0(%RSP),%RAX                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV 0xb8(%RSP),%R10                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%RSI,%RAX,8),%RAX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %RAX,0x228(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x190(%RSP),%RAX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %R10,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSUB 0x188(%RSP),%R10                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD 0x1f0(%RSP),%RAX                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD 0x190(%RSP),%R10                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD 0x1f0(%RSP),%R10                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA (%RSI,%RAX,8),%RAX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %RAX,0x230(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV $0x1,%EAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RSI,%R10,8),%RSI                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %RSI,0x1f0(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0xb0(%RSP),%RSI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nNOPL (%RAX,%RAX,1)                        | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nCMPL $0x1,0x1e8(%RSP)                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJE f7c4 <compute_rhs_._omp_fn.0+0x3474>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMPL $0x2,0x1e8(%RSP)                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJE fb58 <compute_rhs_._omp_fn.0+0x3808>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x48(%RSP),%EDX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nSUB $0x3,%EDX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCMP %EDX,0x1e8(%RSP)                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJE 10804 <compute_rhs_._omp_fn.0+0x44b4>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOVSXD 0x1e8(%RSP),%RAX                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nMOV 0x80(%RSP),%R14D                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nCMP %R14D,%EAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJE f2bb <compute_rhs_._omp_fn.0+0x2f6b>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x118(%RSP),%EBX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nTEST %EBX,%EBX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE ee4d <compute_rhs_._omp_fn.0+0x2afd>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOVSXD 0x140(%RSP),%R13                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nLEA -0x2(%RAX),%EDI                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x1d0(%RSP),%R10                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOVSXD %EDI,%R11                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x1d8(%RSP),%R12                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL 0x160(%RSP),%RAX                     | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nADD 0x1c8(%RSP),%RAX                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV 0xe0(%RSP),%R8                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R13,%R10                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0xd8(%RSP),%R14                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R12,%R11                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x1986d(%RIP),%XMM13               | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nIMUL 0x158(%RSP),%R13                     | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nVMOVSD 0x19864(%RIP),%XMM9                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nLEA (%R12,%R11,1),%RCX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R12,%RCX,1),%RDX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %RAX,%R13                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x1e0(%RSP),%RAX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%R12,%RDX,1),%R9                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x30(%R8,%R13,8),%R15                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x40(%RSP),%R13                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD %RAX,%RCX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %RAX,%RDX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %RAX,%R11                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA 0x6(%R10,%RCX,1),%RDI                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA 0x6(%R10,%RDX,1),%RCX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%RAX,%R9,1),%RDX                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %R12,%R9                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA 0x6(%R10,%R11,1),%RSI                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD %RAX,%R9                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R14,%RDI,8),%R11                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x6(%R10,%R9,1),%R12                  | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA 0x6(%R10,%RDX,1),%RDI                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R14,%RSI,8),%RBX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R14,%R12,8),%R10                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R14,%RCX,8),%RSI                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x58(%R8,%R13,8),%R13                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R14,%RDI,8),%RCX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nNOPW (%RAX,%RAX,1)                        | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV 0x108(%RSP),%R12D                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nCMP %R12D,0xa4(%RSP)                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJE eec0 <compute_rhs_._omp_fn.0+0x2b70>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nADDL $0x1,0x140(%RSP)                     | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nMOV 0x140(%RSP),%EDI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nCMP %EDI,0x78(%RSP)                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJLE 100f2 <compute_rhs_._omp_fn.0+0x3da2> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x118(%RSP),%R15D                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADDL $0x1,0x108(%RSP)                     | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nTEST %R15D,%R15D                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJG e480 <compute_rhs_._omp_fn.0+0x2130>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x118(%RSP),%R9D                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nTEST %R9D,%R9D                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE ee4d <compute_rhs_._omp_fn.0+0x2afd>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOVSXD 0x140(%RSP),%R15                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nMOVSXD %EAX,%RSI                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x1d0(%RSP),%R12                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA -0x2(%RSI),%R8D                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x1d8(%RSP),%RBX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOVSXD %R8D,%R11                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL 0x160(%RSP),%RSI                     | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nADD 0x1c8(%RSP),%RSI                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV 0xe0(%RSP),%R10                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R15,%R12                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x1e0(%RSP),%R14                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RBX,%R11                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0xd8(%RSP),%R13                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL 0x158(%RSP),%R15                     | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nVMOVSD 0x191a8(%RIP),%XMM13               | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVSD 0x19198(%RIP),%XMM9                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nLEA (%RBX,%R11,1),%RDI                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %R14,%R11                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R14,%RDI,1),%R9                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %R15,%RSI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %RBX,%RDI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA 0x30(%R10,%RSI,8),%RAX                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x40(%RSP),%RSI                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD %R14,%RDI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA 0x6(%R12,%R11,1),%RDX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA 0x6(%R12,%R9,1),%R15                  | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA 0x6(%R12,%RDI,1),%R11                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R13,%RDX,8),%RCX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R13,%R15,8),%R8                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R13,%R11,8),%RBX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x58(%R10,%RSI,8),%RSI                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nNOPL (%RAX)                               | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP ee4d <compute_rhs_._omp_fn.0+0x2afd>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nMOV 0xe0(%RSP),%R15                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1c8(%RSP),%R8                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD 0x160(%RSP),%R8                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD 0x100(%RSP),%R8                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV 0xf8(%RSP),%RBX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1e0(%RSP),%R14                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x30(%RSP),%R13                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD 0x1d8(%RSP),%R14                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA 0x30(%R15,%R8,8),%RAX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x38(%RSP),%RSI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0xd8(%RSP),%R11                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD 0x40(%RSP),%R8                        | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA 0x6(%R13,%RBX,1),%R9                  | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x18cb3(%RIP),%XMM13               | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nLEA 0x6(%RBX,%R14,1),%RDI                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x18c9e(%RIP),%XMM9                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nLEA 0x6(%RSI,%RBX,1),%RDX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R11,%RDI,8),%RCX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R11,%R9,8),%R12                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R11,%RDX,8),%R10                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x58(%R15,%R8,8),%R8                  | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nNOPL (%RAX,%RAX,1)                        | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP ee4d <compute_rhs_._omp_fn.0+0x2afd>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nMOV 0x98(%RSP),%R9                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1d0(%RSP),%R12                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x30(%RSP),%RSI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x28(%RSP),%R10                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0xe0(%RSP),%R14                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R9,%R12                             | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x1e0(%RSP),%RDI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL 0x158(%RSP),%R9                      | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nADD 0x1d8(%RSP),%RDI                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV 0x38(%RSP),%R11                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0xd8(%RSP),%R8                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x6(%RSI,%R12,1),%RDX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x20(%RSP),%RSI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x6(%R12,%RDI,1),%RCX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD %R9,%R10                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVMOVSD 0x18922(%RIP),%XMM13               | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nLEA 0x30(%R14,%R10,8),%RAX                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x40(%RSP),%R10                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA 0x6(%R11,%R12,1),%R13                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA 0x6(%R12,%RSI,1),%R12                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R8,%RDX,8),%R15                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R8,%RCX,8),%RBX                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R8,%R13,8),%R9                      | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R8,%R12,8),%RDX                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x58(%R14,%R10,8),%R10                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nNOPW (%RAX,%RAX,1)                        | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP ee4d <compute_rhs_._omp_fn.0+0x2afd>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nADDL $0x1,0x1e8(%RSP)                     | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nMOVL $0x1,0x140(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJMP ee78 <compute_rhs_._omp_fn.0+0x2b28>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nMOV 0x98(%RSP),%RCX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1d0(%RSP),%R15                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1e0(%RSP),%R8                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x18(%RSP),%RBX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x10(%RSP),%RSI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RCX,%R15                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0xe8(%RSP),%RDI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL 0x158(%RSP),%RCX                     | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nIMUL 0x160(%RSP),%RDI                     | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nADD %R8,%RBX                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD 0x1c8(%RSP),%RDI                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD %R8,%RSI                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD 0x8(%RSP),%R8                         | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV 0xe0(%RSP),%R12                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0xd8(%RSP),%RAX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x6(%R15,%RBX,1),%R11                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%RDI,%RCX,1),%R13                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x6(%R15,%R8,1),%R14                  | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV (%RSP),%R8                            | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x30(%R12,%R13,8),%R9                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x40(%RSP),%R13                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA 0x6(%R15,%RSI,1),%RDX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA 0x6(%R15,%R8,1),%R15                  | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%RAX,%R11,8),%R10                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RAX,%RDX,8),%RDI                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RAX,%R14,8),%R11                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RAX,%R15,8),%RBX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x58(%R12,%R13,8),%R13                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nNOPW (%RAX,%RAX,1)                        | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP ee4d <compute_rhs_._omp_fn.0+0x2afd>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\n",
        },
      },
      header = {
        "0% of peak computational performance is used (0.00 out of 2.00 FLOP per cycle (GFLOPS @ 1GHz))",
      },
      brief = {
      },
      gain = {
        {
          workaround = " - Try to reorganize arrays of structures to structures of arrays\n - Consider to permute loops (see vectorization gain report)\n - To reference allocatable arrays, use \"allocatable\" instead of \"pointer\" pointers or qualify them with the \"contiguous\" attribute (Fortran 2008)\n - For structures, limit to one indirection. For example, use a_b%c instead of a%b%c with a_b set to a%b before this loop\n",
          title = "Code clean check",
          txt = "Detected a slowdown caused by scalar integer instructions (typically used for address computation).\nBy removing them, you can lower the cost of an iteration from 94.25 to 10.50 cycles (8.98x speedup).",
        },
        {
          workaround = " - Try another compiler or update/tune your current one:\n  * recompile with fassociative-math (included in Ofast or ffast-math) to extend loop vectorization to FP reductions.\n - Remove inter-iterations dependences from your loop and make it unit-stride:\n  * If your arrays have 2 or more dimensions, check whether elements are accessed contiguously and, otherwise, try to permute loops accordingly:\nFortran storage order is column-major: do i do j a(i,j) = b(i,j) (slow, non stride 1) => do i do j a(j,i) = b(i,j) (fast, stride 1)\n  * If your loop streams arrays of structures (AoS), try to use structures of arrays instead (SoA):\ndo i a(i)%x = b(i)%x (slow, non stride 1) => do i a%x(i) = b%x(i) (fast, stride 1)\n",
          details = "All SSE/AVX instructions are used in scalar version (process only one data element in vector registers).\nSince your execution units are vector units, only a vectorized loop can use their full power.\n",
          title = "Vectorization",
          txt = "Your loop is not vectorized.\nOnly 38% of vector register length is used (average across all SSE/AVX instructions).\nBy vectorizing your loop, you can lower the cost of an iteration from 94.25 to 25.14 cycles (3.75x speedup).",
        },
        {
          title = "Execution units bottlenecks",
          txt = "Found no such bottlenecks but see expert reports for more complex bottlenecks.",
        },
      },
      potential = {
      },
    },
  common = {
    header = {
      "The loop is defined in /users/user2210/NPB3.4-MZ-MPI/BT-MZ/rhs.f90:236,254,295-303,310,317,326,340,346-388,404.\n",
      "Warnings:\n - Non-innermost loop: analyzing only self part (ignoring child loops).\n - Ignoring paths for analysis\n - Failed to get the number of paths\n - RecMII not computed since number of paths is unknown or > max_paths\n - Streams not analyzed since number of paths is unknown or > max_paths\n",
    },
  },
}
