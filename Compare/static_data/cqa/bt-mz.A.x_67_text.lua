_cqa_text_report = {
  paths = {
    {
      hint = {
        {
          details = "These instructions generate more than one micro-operation and only one of them can be decoded during a cycle and the extra micro-operations increase pressure on execution units.\n - ADD: 3 occurrences\n",
          title = "Complex instructions",
          txt = "Detected COMPLEX INSTRUCTIONS.\n",
        },
        {
          title = "Type of elements and instruction set",
          txt = "140 SSE or AVX instructions are processing arithmetic or math operations on double precision FP elements in scalar mode (one at a time).\n",
        },
        {
          title = "Matching between your loop (in the source code) and the binary loop",
          txt = "The binary loop is composed of 140 FP arithmetical operations:\n - 70: addition or subtraction\n - 70: multiply\nThe binary loop is loading 1116 bytes (139 double precision FP elements).\nThe binary loop is storing 176 bytes (22 double precision FP elements).",
        },
        {
          title = "Arithmetic intensity",
          txt = "Arithmetic intensity is 0.11 FP operations per loaded or stored byte.",
        },
      },
      expert = {
        {
          title = "General properties",
          txt = "nb instructions    : 305\nnb uops            : 308\nloop length        : 1687\nused x86 registers : 15\nused mmx registers : 0\nused xmm registers : 16\nused ymm registers : 0\nused zmm registers : 0\nnb stack references: 46\nADD-SUB / MUL ratio: 1.00\n",
        },
        {
          title = "Front-end",
          txt = "MACRO FUSION NOT POSSIBLE\nFIT IN UOP CACHE\nmicro-operation queue: 77.00 cycles\nfront end            : 77.00 cycles\n",
        },
        {
          title = "Back-end",
          txt = "       | P0    | P1    | P2    | P3    | P4    | P5\n------------------------------------------------------\nuops   | 89.00 | 90.00 | 84.50 | 84.50 | 24.00 | 34.00\ncycles | 89.00 | 90.00 | 84.50 | 84.50 | 24.00 | 34.00\n\nCycles executing div or sqrt instructions: NA\n",
        },
        {
          title = "Cycles summary",
          txt = "Front-end : 77.00\nDispatch  : 90.00\nOverall L1: 90.00\n",
        },
        {
          title = "Vectorization ratios",
          txt = "INT\nall    : 0%\nload   : 0%\nstore  : 0%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 0%\nFP\nall     : 0%\nload    : 0%\nstore   : 0%\nmul     : 0%\nadd-sub : 0%\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : NA (no other vectorizable/vectorized instructions)\nINT+FP\nall     : 0%\nload    : 0%\nstore   : 0%\nmul     : 0%\nadd-sub : 0%\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 0%\n",
        },
        {
          title = "Vector efficiency ratios",
          txt = "INT\nall    : 28%\nload   : 29%\nstore  : 25%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 25%\nFP\nall     : 25%\nload    : 25%\nstore   : 25%\nmul     : 25%\nadd-sub : 25%\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : NA (no other vectorizable/vectorized instructions)\nINT+FP\nall     : 25%\nload    : 25%\nstore   : 25%\nmul     : 25%\nadd-sub : 25%\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 25%\n",
        },
        {
          title = "Cycles and memory resources usage",
          txt = "Assuming all data fit into the L1 cache, each iteration of the binary loop takes 90.00 cycles. At this rate:\n - 38% of peak load performance is reached (12.40 out of 32.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 12% of peak store performance is reached (1.96 out of 16.00 bytes stored per cycle (GB/s @ 1GHz))\n",
        },
        {
          title = "Front-end bottlenecks",
          txt = "Found no such bottlenecks.",
        },
        {
          title = "ASM code",
          txt = "In the binary file, the address of the loop is: cc00\n\nInstruction                               | Nb FU | P0   | P1   | P2   | P3   | P4 | P5   | Latency | Recip. throughput\n-----------------------------------------------------------------------------------------------------------------------\nMOVSXD 0x238(%RSP),%RBX                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nMOV 0x160(%RSP),%R11                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x158(%RSP),%RSI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1d8(%RSP),%R10                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1d0(%RSP),%RAX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R15,%R11                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x220(%RSP),%ECX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RBX,%RSI                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x1c8(%RSP),%R11                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nIMUL %R15,%R10                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nIMUL %RBX,%RAX                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x1e0(%RSP),%R10                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD %RSI,%R11                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %RAX,%R10                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nTEST %ECX,%ECX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE d067 <compute_rhs_._omp_fn.0+0xd17>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x1a0(%RSP),%R12                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x8(%R14,%R10,8),%RAX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x198(%RSP),%RDX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x140(%RSP),%R13                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x230(%RSP),%R8                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R15,%R12                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x150(%RSP),%R9                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RBX,%RDX                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x128(%RSP),%R12                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV 0x148(%RSP),%RDI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x110(%RSP),%RCX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R15,%R9                             | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x120(%RSP),%R9                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD %RDX,%R12                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL %RBX,%RDI                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R13,%R12,8),%RSI                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x1b0(%RSP),%R13                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x30(%R8,%R11,8),%RDX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x1a8(%RSP),%R8                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD 0xe0(%RSP),%R12                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nIMUL %R15,%R13                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD %RDI,%R9                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x1c0(%RSP),%RDI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RBX,%R8                             | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x130(%RSP),%R13                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA (%RCX,%R9,8),%RCX                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x108(%RSP),%R9                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R15,%RDI                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x138(%RSP),%RDI                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD %R8,%R13                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x100(%RSP),%R8                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%R9,%R13,8),%R9                      | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x1b8(%RSP),%R13                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RBX,%R13                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD %R13,%RDI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x168(%RSP),%R13                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%R8,%RDI,8),%R8                      | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x170(%RSP),%RDI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RBX,%R13                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nIMUL %R15,%RDI                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x178(%RSP),%RDI                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nIMUL 0x180(%RSP),%RBX                     | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nADD %R13,%RDI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0xf8(%RSP),%R13                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%R13,%RDI,8),%RDI                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x188(%RSP),%R13                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R15,%R13                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x190(%RSP),%R13                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD %R13,%RBX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0xf0(%RSP),%R13                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%R13,%RBX,8),%RBX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0xd8(%RSP),%R13                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%R13,%R12,8),%R12                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nXCHG %AX,%AX                              | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nLEA (%R14,%R10,8),%RAX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nVMOVSD 0x1f8bd(%RIP),%XMM0                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD 0x30(%RAX),%XMM7,%XMM6             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x58(%RAX),%XMM1,%XMM12            | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nMOV 0x230(%RSP),%RSI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nVSUBSD %XMM12,%XMM6,%XMM14                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%RSI,%R11,8),%RDX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nVADDSD 0x80(%RAX),%XMM14,%XMM11           | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nVMOVSD 0x30(%RDX),%XMM8                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVSD 0x38(%RDX),%XMM6                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD %XMM0,%XMM11,%XMM15                | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM15,%XMM8,%XMM10                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM10,0x30(%RDX)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x38(%RAX),%XMM7,%XMM9             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x60(%RAX),%XMM1,%XMM2             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVSUBSD %XMM2,%XMM9,%XMM3                  | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x40(%RDX),%XMM9                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVADDSD 0x88(%RAX),%XMM3,%XMM5             | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nVMULSD %XMM0,%XMM5,%XMM13                 | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM13,%XMM6,%XMM12                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM12,0x38(%RDX)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x40(%RAX),%XMM7,%XMM14            | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x68(%RAX),%XMM1,%XMM11            | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVSUBSD %XMM11,%XMM14,%XMM15               | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x48(%RDX),%XMM14                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVADDSD 0x90(%RAX),%XMM15,%XMM8            | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nVMULSD %XMM0,%XMM8,%XMM10                 | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM10,%XMM9,%XMM2                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM2,0x40(%RDX)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x48(%RAX),%XMM7,%XMM5             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x70(%RAX),%XMM1,%XMM3             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVSUBSD %XMM3,%XMM5,%XMM13                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x50(%RDX),%XMM5                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVADDSD 0x98(%RAX),%XMM13,%XMM6            | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nVMULSD %XMM0,%XMM6,%XMM12                 | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM12,%XMM14,%XMM11               | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM11,0x48(%RDX)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x50(%RAX),%XMM7,%XMM15            | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x78(%RAX),%XMM1,%XMM8             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVSUBSD %XMM8,%XMM15,%XMM10                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVADDSD 0xa0(%RAX),%XMM10,%XMM9            | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nVMOVSD 0x58(%RDX),%XMM10                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD %XMM0,%XMM9,%XMM2                  | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM2,%XMM5,%XMM3                  | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM3,0x50(%RDX)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x58(%RAX),%XMM4,%XMM13            | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x30(%RAX),%XMM1,%XMM6             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x80(%RAX),%XMM1,%XMM14            | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVSUBSD %XMM6,%XMM13,%XMM12                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVSUBSD %XMM14,%XMM12,%XMM11               | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVADDSD 0xa8(%RAX),%XMM11,%XMM15           | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nVMULSD %XMM0,%XMM15,%XMM8                 | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM8,%XMM10,%XMM9                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM9,0x58(%RDX)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x60(%RAX),%XMM4,%XMM2             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x38(%RAX),%XMM1,%XMM5             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x88(%RAX),%XMM1,%XMM3             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMOVSD 0x60(%RDX),%XMM11                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nCMPL $0x2,0x218(%RSP)                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nVSUBSD %XMM5,%XMM2,%XMM13                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVSUBSD %XMM3,%XMM13,%XMM6                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x68(%RDX),%XMM3                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVADDSD 0xb0(%RAX),%XMM6,%XMM12            | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nVMULSD %XMM0,%XMM12,%XMM14                | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM14,%XMM11,%XMM15               | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM15,0x60(%RDX)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x68(%RAX),%XMM4,%XMM8             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x40(%RAX),%XMM1,%XMM10            | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x90(%RAX),%XMM1,%XMM2             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVSUBSD %XMM10,%XMM8,%XMM9                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVSUBSD %XMM2,%XMM9,%XMM5                  | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVADDSD 0xb8(%RAX),%XMM5,%XMM13            | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nVMOVSD 0x70(%RDX),%XMM5                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD %XMM0,%XMM13,%XMM6                 | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM6,%XMM3,%XMM12                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM12,0x68(%RDX)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x70(%RAX),%XMM4,%XMM14            | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x48(%RAX),%XMM1,%XMM11            | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x98(%RAX),%XMM1,%XMM8             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVSUBSD %XMM11,%XMM14,%XMM15               | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVSUBSD %XMM8,%XMM15,%XMM10                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVADDSD 0xc0(%RAX),%XMM10,%XMM9            | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nVMOVSD 0x78(%RDX),%XMM10                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD %XMM0,%XMM9,%XMM2                  | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM2,%XMM5,%XMM13                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM13,0x70(%RDX)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x78(%RAX),%XMM4,%XMM6             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x50(%RAX),%XMM1,%XMM3             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0xa0(%RAX),%XMM1,%XMM14            | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVSUBSD %XMM3,%XMM6,%XMM12                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVSUBSD %XMM14,%XMM12,%XMM11               | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVADDSD 0xc8(%RAX),%XMM11,%XMM15           | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nVMULSD %XMM0,%XMM15,%XMM8                 | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM8,%XMM10,%XMM9                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM9,0x78(%RDX)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJLE d413 <compute_rhs_._omp_fn.0+0x10c3>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0xe8(%RSP),%RDI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x30(%R14,%R10,8),%R8                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x230(%RSP),%RCX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0xd0(%RSP),%RBX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%RDI,%R10,1),%R13                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x80(%RCX,%R11,8),%R9                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%RBX,%R13,8),%R12                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nNOPL (%RAX)                               | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nVMOVSD 0x1f51d(%RIP),%XMM0                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nMOV 0x1f0(%RSP),%RDI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x200(%RSP),%RDX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1f8(%RSP),%RAX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x230(%RSP),%R9                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %R10,%RDI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R14,%RDI,8),%R13                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nVMULSD 0x8(%R13),%XMM1,%XMM13             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nADD %R10,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RDX,%R11,1),%RSI                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RDX,%R10,1),%RBX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x1e8(%RSP),%RDX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%R14,%RBX,8),%R12                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R14,%RAX,8),%R8                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nVMOVSD 0x8(%R8),%XMM6                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nLEA (%R9,%RSI,8),%RCX                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nVMULSD 0x8(%R12),%XMM4,%XMM3              | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nADD %RDX,%R10                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %RDX,%R11                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R14,%R10,8),%R10                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nVSUBSD %XMM13,%XMM6,%XMM12                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x8(%RCX),%XMM10                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD 0x8(%R10),%XMM1,%XMM11             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nLEA (%R9,%R11,8),%R11                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nVADDSD %XMM3,%XMM12,%XMM14                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVSUBSD %XMM11,%XMM14,%XMM15               | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMULSD %XMM0,%XMM15,%XMM8                 | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVMOVSD 0x10(%RCX),%XMM15                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVSUBSD %XMM8,%XMM10,%XMM9                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM9,0x8(%RCX)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x10(%R13),%XMM1,%XMM5             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x10(%R12),%XMM4,%XMM6             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMOVSD 0x10(%R8),%XMM2                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD 0x10(%R10),%XMM1,%XMM3             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVSUBSD %XMM5,%XMM2,%XMM13                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVADDSD %XMM6,%XMM13,%XMM12                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVSUBSD %XMM3,%XMM12,%XMM14                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x18(%RCX),%XMM3                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD %XMM0,%XMM14,%XMM11                | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM11,%XMM15,%XMM8                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM8,0x10(%RCX)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x18(%R13),%XMM1,%XMM10            | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x18(%R12),%XMM4,%XMM2             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMOVSD 0x18(%R8),%XMM9                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD 0x18(%R10),%XMM1,%XMM6             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVSUBSD %XMM10,%XMM9,%XMM5                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVADDSD %XMM2,%XMM5,%XMM13                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVSUBSD %XMM6,%XMM13,%XMM12                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMULSD %XMM0,%XMM12,%XMM14                | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVMOVSD 0x20(%RCX),%XMM12                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVSUBSD %XMM14,%XMM3,%XMM11                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM11,0x18(%RCX)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x20(%R13),%XMM1,%XMM15            | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMOVSD 0x20(%R8),%XMM8                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD 0x20(%R12),%XMM4,%XMM9             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x20(%R10),%XMM1,%XMM2             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVSUBSD %XMM15,%XMM8,%XMM10                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVADDSD %XMM9,%XMM10,%XMM5                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVSUBSD %XMM2,%XMM5,%XMM13                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMULSD %XMM0,%XMM13,%XMM6                 | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM6,%XMM12,%XMM14                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM14,0x20(%RCX)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x28(%R13),%XMM1,%XMM3             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x28(%R12),%XMM4,%XMM8             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMOVSD 0x28(%R8),%XMM11                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD 0x28(%R10),%XMM1,%XMM9             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMOVSD 0x28(%RCX),%XMM13                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVSUBSD %XMM3,%XMM11,%XMM15                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x228(%RSP),%ESI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nVADDSD %XMM8,%XMM15,%XMM10                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVSUBSD %XMM9,%XMM10,%XMM5                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMULSD %XMM0,%XMM5,%XMM2                  | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM2,%XMM13,%XMM6                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM6,0x28(%RCX)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x8(%R12),%XMM1,%XMM12             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x8(%R10),%XMM7,%XMM3              | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMOVSD 0x8(%R13),%XMM14                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVSD 0x8(%R11),%XMM10                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVSUBSD %XMM12,%XMM14,%XMM11               | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVADDSD %XMM3,%XMM11,%XMM15                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x10(%R11),%XMM11                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD %XMM0,%XMM15,%XMM8                 | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM8,%XMM10,%XMM9                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM9,0x8(%R11)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x10(%R12),%XMM1,%XMM5             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x10(%R10),%XMM7,%XMM6             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMOVSD 0x10(%R13),%XMM2                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVSUBSD %XMM5,%XMM2,%XMM13                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVADDSD %XMM6,%XMM13,%XMM12                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x18(%R11),%XMM13                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD %XMM0,%XMM12,%XMM14                | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM14,%XMM11,%XMM3                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM3,0x10(%R11)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x18(%R12),%XMM1,%XMM15            | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x18(%R10),%XMM7,%XMM9             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMOVSD 0x18(%R13),%XMM8                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVSUBSD %XMM15,%XMM8,%XMM10                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVADDSD %XMM9,%XMM10,%XMM5                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x20(%R11),%XMM10                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD %XMM0,%XMM5,%XMM2                  | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM2,%XMM13,%XMM6                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM6,0x18(%R11)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x20(%R12),%XMM1,%XMM12            | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMOVSD 0x20(%R13),%XMM14                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD 0x20(%R10),%XMM7,%XMM3             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVSUBSD %XMM12,%XMM14,%XMM11               | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x28(%R11),%XMM14                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVADDSD %XMM3,%XMM11,%XMM15                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMULSD %XMM0,%XMM15,%XMM8                 | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM8,%XMM10,%XMM9                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM9,0x20(%R11)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x28(%R12),%XMM1,%XMM5             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x28(%R10),%XMM7,%XMM6             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMOVSD 0x28(%R13),%XMM2                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVSUBSD %XMM5,%XMM2,%XMM13                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVADDSD %XMM6,%XMM13,%XMM12                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMULSD %XMM0,%XMM12,%XMM0                 | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM0,%XMM14,%XMM11                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM11,0x28(%R11)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nCMP %ESI,0x208(%RSP)                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJE d6cd <compute_rhs_._omp_fn.0+0x137d>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nADDL $0x1,0x238(%RSP)                     | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nMOV 0x238(%RSP),%R9D                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nCMP 0x210(%RSP),%R9D                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJGE 107e4 <compute_rhs_._omp_fn.0+0x4494> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nADDL $0x1,0x228(%RSP)                     | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nJMP cc00 <compute_rhs_._omp_fn.0+0x8b0>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nADDL $0x1,0xc8(%RSP)                      | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nMOVL $0x1,0x238(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOVSXD 0xc8(%RSP),%R15                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nJMP d6a4 <compute_rhs_._omp_fn.0+0x1354>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\n",
        },
      },
      header = {
        "19% of peak computational performance is used (1.56 out of 8.00 FLOP per cycle (GFLOPS @ 1GHz))",
      },
      brief = {
      },
      gain = {
        {
          workaround = " - Try to reorganize arrays of structures to structures of arrays\n - Consider to permute loops (see vectorization gain report)\n - To reference allocatable arrays, use \"allocatable\" instead of \"pointer\" pointers or qualify them with the \"contiguous\" attribute (Fortran 2008)\n - For structures, limit to one indirection. For example, use a_b%c instead of a%b%c with a_b set to a%b before this loop\n",
          title = "Code clean check",
          txt = "Detected a slowdown caused by scalar integer instructions (typically used for address computation).\nBy removing them, you can lower the cost of an iteration from 90.00 to 70.00 cycles (1.29x speedup).",
        },
        {
          workaround = " - Try another compiler or update/tune your current one:\n  * recompile with fassociative-math (included in Ofast or ffast-math) to extend loop vectorization to FP reductions.\n - Remove inter-iterations dependences from your loop and make it unit-stride:\n  * If your arrays have 2 or more dimensions, check whether elements are accessed contiguously and, otherwise, try to permute loops accordingly:\nFortran storage order is column-major: do i do j a(i,j) = b(i,j) (slow, non stride 1) => do i do j a(j,i) = b(i,j) (fast, stride 1)\n  * If your loop streams arrays of structures (AoS), try to use structures of arrays instead (SoA):\ndo i a(i)%x = b(i)%x (slow, non stride 1) => do i a%x(i) = b%x(i) (fast, stride 1)\n",
          details = "All SSE/AVX instructions are used in scalar version (process only one data element in vector registers).\nSince your execution units are vector units, only a vectorized loop can use their full power.\n",
          title = "Vectorization",
          txt = "Your loop is not vectorized.\nOnly 25% of vector register length is used (average across all SSE/AVX instructions).\nBy vectorizing your loop, you can lower the cost of an iteration from 90.00 to 29.37 cycles (3.06x speedup).",
        },
        {
          workaround = "Reduce the number of FP add instructions",
          title = "Execution units bottlenecks",
          txt = "Performance is limited by execution of FP add operations (the FP add unit is a bottleneck).\n",
        },
      },
      potential = {
      },
    },
  },
  AVG = {
      hint = {
        {
          details = "These instructions generate more than one micro-operation and only one of them can be decoded during a cycle and the extra micro-operations increase pressure on execution units.\n - ADD: 3 occurrences\n",
          title = "Complex instructions",
          txt = "Detected COMPLEX INSTRUCTIONS.\n",
        },
        {
          title = "Type of elements and instruction set",
          txt = "140 SSE or AVX instructions are processing arithmetic or math operations on double precision FP elements in scalar mode (one at a time).\n",
        },
        {
          title = "Matching between your loop (in the source code) and the binary loop",
          txt = "The binary loop is composed of 140 FP arithmetical operations:\n - 70: addition or subtraction\n - 70: multiply\nThe binary loop is loading 1116 bytes (139 double precision FP elements).\nThe binary loop is storing 176 bytes (22 double precision FP elements).",
        },
        {
          title = "Arithmetic intensity",
          txt = "Arithmetic intensity is 0.11 FP operations per loaded or stored byte.",
        },
      },
      expert = {
        {
          title = "General properties",
          txt = "nb instructions    : 305\nnb uops            : 308\nloop length        : 1687\nused x86 registers : 15\nused mmx registers : 0\nused xmm registers : 16\nused ymm registers : 0\nused zmm registers : 0\nnb stack references: 46\nADD-SUB / MUL ratio: 1.00\n",
        },
        {
          title = "Front-end",
          txt = "MACRO FUSION NOT POSSIBLE\nFIT IN UOP CACHE\nmicro-operation queue: 77.00 cycles\nfront end            : 77.00 cycles\n",
        },
        {
          title = "Back-end",
          txt = "       | P0    | P1    | P2    | P3    | P4    | P5\n------------------------------------------------------\nuops   | 89.00 | 90.00 | 84.50 | 84.50 | 24.00 | 34.00\ncycles | 89.00 | 90.00 | 84.50 | 84.50 | 24.00 | 34.00\n\nCycles executing div or sqrt instructions: NA\n",
        },
        {
          title = "Cycles summary",
          txt = "Front-end : 77.00\nDispatch  : 90.00\nOverall L1: 90.00\n",
        },
        {
          title = "Vectorization ratios",
          txt = "INT\nall    : 0%\nload   : 0%\nstore  : 0%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 0%\nFP\nall     : 0%\nload    : 0%\nstore   : 0%\nmul     : 0%\nadd-sub : 0%\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : NA (no other vectorizable/vectorized instructions)\nINT+FP\nall     : 0%\nload    : 0%\nstore   : 0%\nmul     : 0%\nadd-sub : 0%\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 0%\n",
        },
        {
          title = "Vector efficiency ratios",
          txt = "INT\nall    : 28%\nload   : 29%\nstore  : 25%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 25%\nFP\nall     : 25%\nload    : 25%\nstore   : 25%\nmul     : 25%\nadd-sub : 25%\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : NA (no other vectorizable/vectorized instructions)\nINT+FP\nall     : 25%\nload    : 25%\nstore   : 25%\nmul     : 25%\nadd-sub : 25%\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 25%\n",
        },
        {
          title = "Cycles and memory resources usage",
          txt = "Assuming all data fit into the L1 cache, each iteration of the binary loop takes 90.00 cycles. At this rate:\n - 38% of peak load performance is reached (12.40 out of 32.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 12% of peak store performance is reached (1.96 out of 16.00 bytes stored per cycle (GB/s @ 1GHz))\n",
        },
        {
          title = "Front-end bottlenecks",
          txt = "Found no such bottlenecks.",
        },
        {
          title = "ASM code",
          txt = "In the binary file, the address of the loop is: cc00\n\nInstruction                               | Nb FU | P0   | P1   | P2   | P3   | P4 | P5   | Latency | Recip. throughput\n-----------------------------------------------------------------------------------------------------------------------\nMOVSXD 0x238(%RSP),%RBX                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nMOV 0x160(%RSP),%R11                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x158(%RSP),%RSI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1d8(%RSP),%R10                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1d0(%RSP),%RAX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R15,%R11                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x220(%RSP),%ECX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RBX,%RSI                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x1c8(%RSP),%R11                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nIMUL %R15,%R10                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nIMUL %RBX,%RAX                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x1e0(%RSP),%R10                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD %RSI,%R11                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %RAX,%R10                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nTEST %ECX,%ECX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE d067 <compute_rhs_._omp_fn.0+0xd17>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x1a0(%RSP),%R12                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x8(%R14,%R10,8),%RAX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x198(%RSP),%RDX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x140(%RSP),%R13                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x230(%RSP),%R8                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R15,%R12                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x150(%RSP),%R9                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RBX,%RDX                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x128(%RSP),%R12                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV 0x148(%RSP),%RDI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x110(%RSP),%RCX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R15,%R9                             | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x120(%RSP),%R9                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD %RDX,%R12                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL %RBX,%RDI                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R13,%R12,8),%RSI                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x1b0(%RSP),%R13                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x30(%R8,%R11,8),%RDX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x1a8(%RSP),%R8                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD 0xe0(%RSP),%R12                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nIMUL %R15,%R13                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD %RDI,%R9                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x1c0(%RSP),%RDI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RBX,%R8                             | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x130(%RSP),%R13                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA (%RCX,%R9,8),%RCX                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x108(%RSP),%R9                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R15,%RDI                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x138(%RSP),%RDI                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD %R8,%R13                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x100(%RSP),%R8                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%R9,%R13,8),%R9                      | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x1b8(%RSP),%R13                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RBX,%R13                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD %R13,%RDI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x168(%RSP),%R13                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%R8,%RDI,8),%R8                      | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x170(%RSP),%RDI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RBX,%R13                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nIMUL %R15,%RDI                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x178(%RSP),%RDI                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nIMUL 0x180(%RSP),%RBX                     | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nADD %R13,%RDI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0xf8(%RSP),%R13                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%R13,%RDI,8),%RDI                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x188(%RSP),%R13                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R15,%R13                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x190(%RSP),%R13                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD %R13,%RBX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0xf0(%RSP),%R13                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%R13,%RBX,8),%RBX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0xd8(%RSP),%R13                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%R13,%R12,8),%R12                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nXCHG %AX,%AX                              | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nLEA (%R14,%R10,8),%RAX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nVMOVSD 0x1f8bd(%RIP),%XMM0                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD 0x30(%RAX),%XMM7,%XMM6             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x58(%RAX),%XMM1,%XMM12            | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nMOV 0x230(%RSP),%RSI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nVSUBSD %XMM12,%XMM6,%XMM14                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%RSI,%R11,8),%RDX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nVADDSD 0x80(%RAX),%XMM14,%XMM11           | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nVMOVSD 0x30(%RDX),%XMM8                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVSD 0x38(%RDX),%XMM6                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD %XMM0,%XMM11,%XMM15                | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM15,%XMM8,%XMM10                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM10,0x30(%RDX)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x38(%RAX),%XMM7,%XMM9             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x60(%RAX),%XMM1,%XMM2             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVSUBSD %XMM2,%XMM9,%XMM3                  | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x40(%RDX),%XMM9                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVADDSD 0x88(%RAX),%XMM3,%XMM5             | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nVMULSD %XMM0,%XMM5,%XMM13                 | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM13,%XMM6,%XMM12                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM12,0x38(%RDX)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x40(%RAX),%XMM7,%XMM14            | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x68(%RAX),%XMM1,%XMM11            | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVSUBSD %XMM11,%XMM14,%XMM15               | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x48(%RDX),%XMM14                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVADDSD 0x90(%RAX),%XMM15,%XMM8            | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nVMULSD %XMM0,%XMM8,%XMM10                 | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM10,%XMM9,%XMM2                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM2,0x40(%RDX)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x48(%RAX),%XMM7,%XMM5             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x70(%RAX),%XMM1,%XMM3             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVSUBSD %XMM3,%XMM5,%XMM13                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x50(%RDX),%XMM5                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVADDSD 0x98(%RAX),%XMM13,%XMM6            | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nVMULSD %XMM0,%XMM6,%XMM12                 | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM12,%XMM14,%XMM11               | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM11,0x48(%RDX)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x50(%RAX),%XMM7,%XMM15            | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x78(%RAX),%XMM1,%XMM8             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVSUBSD %XMM8,%XMM15,%XMM10                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVADDSD 0xa0(%RAX),%XMM10,%XMM9            | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nVMOVSD 0x58(%RDX),%XMM10                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD %XMM0,%XMM9,%XMM2                  | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM2,%XMM5,%XMM3                  | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM3,0x50(%RDX)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x58(%RAX),%XMM4,%XMM13            | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x30(%RAX),%XMM1,%XMM6             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x80(%RAX),%XMM1,%XMM14            | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVSUBSD %XMM6,%XMM13,%XMM12                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVSUBSD %XMM14,%XMM12,%XMM11               | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVADDSD 0xa8(%RAX),%XMM11,%XMM15           | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nVMULSD %XMM0,%XMM15,%XMM8                 | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM8,%XMM10,%XMM9                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM9,0x58(%RDX)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x60(%RAX),%XMM4,%XMM2             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x38(%RAX),%XMM1,%XMM5             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x88(%RAX),%XMM1,%XMM3             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMOVSD 0x60(%RDX),%XMM11                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nCMPL $0x2,0x218(%RSP)                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nVSUBSD %XMM5,%XMM2,%XMM13                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVSUBSD %XMM3,%XMM13,%XMM6                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x68(%RDX),%XMM3                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVADDSD 0xb0(%RAX),%XMM6,%XMM12            | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nVMULSD %XMM0,%XMM12,%XMM14                | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM14,%XMM11,%XMM15               | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM15,0x60(%RDX)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x68(%RAX),%XMM4,%XMM8             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x40(%RAX),%XMM1,%XMM10            | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x90(%RAX),%XMM1,%XMM2             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVSUBSD %XMM10,%XMM8,%XMM9                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVSUBSD %XMM2,%XMM9,%XMM5                  | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVADDSD 0xb8(%RAX),%XMM5,%XMM13            | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nVMOVSD 0x70(%RDX),%XMM5                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD %XMM0,%XMM13,%XMM6                 | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM6,%XMM3,%XMM12                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM12,0x68(%RDX)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x70(%RAX),%XMM4,%XMM14            | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x48(%RAX),%XMM1,%XMM11            | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x98(%RAX),%XMM1,%XMM8             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVSUBSD %XMM11,%XMM14,%XMM15               | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVSUBSD %XMM8,%XMM15,%XMM10                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVADDSD 0xc0(%RAX),%XMM10,%XMM9            | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nVMOVSD 0x78(%RDX),%XMM10                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD %XMM0,%XMM9,%XMM2                  | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM2,%XMM5,%XMM13                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM13,0x70(%RDX)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x78(%RAX),%XMM4,%XMM6             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x50(%RAX),%XMM1,%XMM3             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0xa0(%RAX),%XMM1,%XMM14            | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVSUBSD %XMM3,%XMM6,%XMM12                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVSUBSD %XMM14,%XMM12,%XMM11               | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVADDSD 0xc8(%RAX),%XMM11,%XMM15           | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nVMULSD %XMM0,%XMM15,%XMM8                 | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM8,%XMM10,%XMM9                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM9,0x78(%RDX)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJLE d413 <compute_rhs_._omp_fn.0+0x10c3>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0xe8(%RSP),%RDI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x30(%R14,%R10,8),%R8                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x230(%RSP),%RCX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0xd0(%RSP),%RBX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%RDI,%R10,1),%R13                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x80(%RCX,%R11,8),%R9                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%RBX,%R13,8),%R12                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nNOPL (%RAX)                               | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nVMOVSD 0x1f51d(%RIP),%XMM0                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nMOV 0x1f0(%RSP),%RDI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x200(%RSP),%RDX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1f8(%RSP),%RAX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x230(%RSP),%R9                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %R10,%RDI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R14,%RDI,8),%R13                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nVMULSD 0x8(%R13),%XMM1,%XMM13             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nADD %R10,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RDX,%R11,1),%RSI                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RDX,%R10,1),%RBX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x1e8(%RSP),%RDX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%R14,%RBX,8),%R12                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R14,%RAX,8),%R8                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nVMOVSD 0x8(%R8),%XMM6                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nLEA (%R9,%RSI,8),%RCX                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nVMULSD 0x8(%R12),%XMM4,%XMM3              | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nADD %RDX,%R10                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %RDX,%R11                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R14,%R10,8),%R10                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nVSUBSD %XMM13,%XMM6,%XMM12                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x8(%RCX),%XMM10                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD 0x8(%R10),%XMM1,%XMM11             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nLEA (%R9,%R11,8),%R11                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nVADDSD %XMM3,%XMM12,%XMM14                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVSUBSD %XMM11,%XMM14,%XMM15               | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMULSD %XMM0,%XMM15,%XMM8                 | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVMOVSD 0x10(%RCX),%XMM15                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVSUBSD %XMM8,%XMM10,%XMM9                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM9,0x8(%RCX)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x10(%R13),%XMM1,%XMM5             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x10(%R12),%XMM4,%XMM6             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMOVSD 0x10(%R8),%XMM2                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD 0x10(%R10),%XMM1,%XMM3             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVSUBSD %XMM5,%XMM2,%XMM13                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVADDSD %XMM6,%XMM13,%XMM12                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVSUBSD %XMM3,%XMM12,%XMM14                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x18(%RCX),%XMM3                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD %XMM0,%XMM14,%XMM11                | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM11,%XMM15,%XMM8                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM8,0x10(%RCX)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x18(%R13),%XMM1,%XMM10            | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x18(%R12),%XMM4,%XMM2             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMOVSD 0x18(%R8),%XMM9                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD 0x18(%R10),%XMM1,%XMM6             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVSUBSD %XMM10,%XMM9,%XMM5                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVADDSD %XMM2,%XMM5,%XMM13                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVSUBSD %XMM6,%XMM13,%XMM12                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMULSD %XMM0,%XMM12,%XMM14                | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVMOVSD 0x20(%RCX),%XMM12                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVSUBSD %XMM14,%XMM3,%XMM11                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM11,0x18(%RCX)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x20(%R13),%XMM1,%XMM15            | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMOVSD 0x20(%R8),%XMM8                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD 0x20(%R12),%XMM4,%XMM9             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x20(%R10),%XMM1,%XMM2             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVSUBSD %XMM15,%XMM8,%XMM10                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVADDSD %XMM9,%XMM10,%XMM5                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVSUBSD %XMM2,%XMM5,%XMM13                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMULSD %XMM0,%XMM13,%XMM6                 | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM6,%XMM12,%XMM14                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM14,0x20(%RCX)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x28(%R13),%XMM1,%XMM3             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x28(%R12),%XMM4,%XMM8             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMOVSD 0x28(%R8),%XMM11                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD 0x28(%R10),%XMM1,%XMM9             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMOVSD 0x28(%RCX),%XMM13                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVSUBSD %XMM3,%XMM11,%XMM15                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x228(%RSP),%ESI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nVADDSD %XMM8,%XMM15,%XMM10                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVSUBSD %XMM9,%XMM10,%XMM5                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMULSD %XMM0,%XMM5,%XMM2                  | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM2,%XMM13,%XMM6                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM6,0x28(%RCX)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x8(%R12),%XMM1,%XMM12             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x8(%R10),%XMM7,%XMM3              | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMOVSD 0x8(%R13),%XMM14                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVSD 0x8(%R11),%XMM10                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVSUBSD %XMM12,%XMM14,%XMM11               | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVADDSD %XMM3,%XMM11,%XMM15                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x10(%R11),%XMM11                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD %XMM0,%XMM15,%XMM8                 | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM8,%XMM10,%XMM9                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM9,0x8(%R11)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x10(%R12),%XMM1,%XMM5             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x10(%R10),%XMM7,%XMM6             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMOVSD 0x10(%R13),%XMM2                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVSUBSD %XMM5,%XMM2,%XMM13                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVADDSD %XMM6,%XMM13,%XMM12                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x18(%R11),%XMM13                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD %XMM0,%XMM12,%XMM14                | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM14,%XMM11,%XMM3                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM3,0x10(%R11)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x18(%R12),%XMM1,%XMM15            | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x18(%R10),%XMM7,%XMM9             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMOVSD 0x18(%R13),%XMM8                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVSUBSD %XMM15,%XMM8,%XMM10                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVADDSD %XMM9,%XMM10,%XMM5                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x20(%R11),%XMM10                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD %XMM0,%XMM5,%XMM2                  | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM2,%XMM13,%XMM6                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM6,0x18(%R11)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x20(%R12),%XMM1,%XMM12            | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMOVSD 0x20(%R13),%XMM14                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMULSD 0x20(%R10),%XMM7,%XMM3             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVSUBSD %XMM12,%XMM14,%XMM11               | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x28(%R11),%XMM14                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVADDSD %XMM3,%XMM11,%XMM15                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMULSD %XMM0,%XMM15,%XMM8                 | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM8,%XMM10,%XMM9                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM9,0x20(%R11)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMULSD 0x28(%R12),%XMM1,%XMM5             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMULSD 0x28(%R10),%XMM7,%XMM6             | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMOVSD 0x28(%R13),%XMM2                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVSUBSD %XMM5,%XMM2,%XMM13                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVADDSD %XMM6,%XMM13,%XMM12                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMULSD %XMM0,%XMM12,%XMM0                 | 1     | 1    | 0    | 0    | 0    | 0  | 0    | 5       | 1\nVSUBSD %XMM0,%XMM14,%XMM11                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD %XMM11,0x28(%R11)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nCMP %ESI,0x208(%RSP)                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJE d6cd <compute_rhs_._omp_fn.0+0x137d>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nADDL $0x1,0x238(%RSP)                     | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nMOV 0x238(%RSP),%R9D                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nCMP 0x210(%RSP),%R9D                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJGE 107e4 <compute_rhs_._omp_fn.0+0x4494> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nADDL $0x1,0x228(%RSP)                     | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nJMP cc00 <compute_rhs_._omp_fn.0+0x8b0>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nADDL $0x1,0xc8(%RSP)                      | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nMOVL $0x1,0x238(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOVSXD 0xc8(%RSP),%R15                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nJMP d6a4 <compute_rhs_._omp_fn.0+0x1354>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\n",
        },
      },
      header = {
        "19% of peak computational performance is used (1.56 out of 8.00 FLOP per cycle (GFLOPS @ 1GHz))",
      },
      brief = {
      },
      gain = {
        {
          workaround = " - Try to reorganize arrays of structures to structures of arrays\n - Consider to permute loops (see vectorization gain report)\n - To reference allocatable arrays, use \"allocatable\" instead of \"pointer\" pointers or qualify them with the \"contiguous\" attribute (Fortran 2008)\n - For structures, limit to one indirection. For example, use a_b%c instead of a%b%c with a_b set to a%b before this loop\n",
          title = "Code clean check",
          txt = "Detected a slowdown caused by scalar integer instructions (typically used for address computation).\nBy removing them, you can lower the cost of an iteration from 90.00 to 70.00 cycles (1.29x speedup).",
        },
        {
          workaround = " - Try another compiler or update/tune your current one:\n  * recompile with fassociative-math (included in Ofast or ffast-math) to extend loop vectorization to FP reductions.\n - Remove inter-iterations dependences from your loop and make it unit-stride:\n  * If your arrays have 2 or more dimensions, check whether elements are accessed contiguously and, otherwise, try to permute loops accordingly:\nFortran storage order is column-major: do i do j a(i,j) = b(i,j) (slow, non stride 1) => do i do j a(j,i) = b(i,j) (fast, stride 1)\n  * If your loop streams arrays of structures (AoS), try to use structures of arrays instead (SoA):\ndo i a(i)%x = b(i)%x (slow, non stride 1) => do i a%x(i) = b%x(i) (fast, stride 1)\n",
          details = "All SSE/AVX instructions are used in scalar version (process only one data element in vector registers).\nSince your execution units are vector units, only a vectorized loop can use their full power.\n",
          title = "Vectorization",
          txt = "Your loop is not vectorized.\nOnly 25% of vector register length is used (average across all SSE/AVX instructions).\nBy vectorizing your loop, you can lower the cost of an iteration from 90.00 to 29.37 cycles (3.06x speedup).",
        },
        {
          workaround = "Reduce the number of FP add instructions",
          title = "Execution units bottlenecks",
          txt = "Performance is limited by execution of FP add operations (the FP add unit is a bottleneck).\n",
        },
      },
      potential = {
      },
    },
  common = {
    header = {
      "The loop is defined in /users/user2210/NPB3.4-MZ-MPI/BT-MZ/rhs.f90:62,80-88,98,106,114,129,139,146-154,162,169.\n",
      "Warnings:\n - Non-innermost loop: analyzing only self part (ignoring child loops).\n - Ignoring paths for analysis\n - Too many paths. Rerun with max-paths=8\n - RecMII not computed since number of paths is unknown or > max_paths\n - Streams not analyzed since number of paths is unknown or > max_paths\n",
      "Try to simplify control and/or increase the maximum number of paths per function/loop through the 'max-paths-nb' option.\n",
      "This loop has 8 execution paths.\n",
      "The presence of multiple execution paths is typically the main/first bottleneck.\nTry to simplify control inside loop: ideally, try to remove all conditional expressions, for example by (if applicable):\n - hoisting them (moving them outside the loop)\n - turning them into conditional moves, MIN or MAX\n\n",
      "Ex: if (x<0) x=0 => x = max(0,x) (Fortran instrinsic procedure)\n",
    },
    nb_paths = 8,
  },
}
