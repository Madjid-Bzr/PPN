_cqa_text_report = {
  paths = {
    {
      hint = {
        {
          details = "These instructions generate more than one micro-operation and only one of them can be decoded during a cycle and the extra micro-operations increase pressure on execution units.\n - RET: 1 occurrences\n",
          title = "Complex instructions",
          txt = "Detected COMPLEX INSTRUCTIONS.\n",
        },
        {
          title = "Type of elements and instruction set",
          txt = "140 SSE or AVX instructions are processing arithmetic or math operations on double precision FP elements in scalar mode (one at a time).\n",
        },
        {
          title = "Matching between your function (in the source code) and the binary function",
          txt = "The binary function is composed of 140 FP arithmetical operations:\n - 60: addition or subtraction\n - 75: multiply\n - 5: divide\nThe binary function is loading 456 bytes (57 double precision FP elements).\nThe binary function is storing 312 bytes (39 double precision FP elements).",
        },
        {
          title = "Arithmetic intensity",
          txt = "Arithmetic intensity is 0.18 FP operations per loaded or stored byte.",
        },
      },
      expert = {
        {
          title = "General properties",
          txt = "nb instructions    : 224\nnb uops            : 225\nloop length        : 1145\nused x86 registers : 3\nused mmx registers : 0\nused xmm registers : 16\nused ymm registers : 0\nused zmm registers : 0\nnb stack references: 13\nADD-SUB / MUL ratio: 0.80\n",
        },
        {
          title = "Front-end",
          txt = "MACRO FUSION NOT POSSIBLE\nFIT IN UOP CACHE\nmicro-operation queue: 56.25 cycles\nfront end            : 56.25 cycles\n",
        },
        {
          title = "Back-end",
          txt = "       | P0    | P1    | P2    | P3    | P4    | P5\n-----------------------------------------------------\nuops   | 80.00 | 60.00 | 48.50 | 48.50 | 39.00 | 3.00\ncycles | 80.00 | 60.00 | 48.50 | 48.50 | 39.00 | 3.00\n\nCycles executing div or sqrt instructions: 50.00-110.00\n",
        },
        {
          title = "Cycles summary",
          txt = "Front-end : 56.25\nDispatch  : 80.00\nDIV/SQRT  : 50.00-110.00\nOverall L1: 80.00-110.00\n",
        },
        {
          title = "Vectorization ratios",
          txt = "all     : 0%\nload    : 0%\nstore   : 0%\nmul     : 0%\nadd-sub : 0%\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: 0%\nother   : 100%\n",
        },
        {
          title = "Vector efficiency ratios",
          txt = "all     : 25%\nload    : 25%\nstore   : 25%\nmul     : 25%\nadd-sub : 25%\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: 25%\nother   : 50%\n",
        },
        {
          title = "Cycles and memory resources usage",
          txt = "Assuming all data fit into the L1 cache, each call to the function takes 110.00 cycles. At this rate:\n - 12% of peak load performance is reached (4.15 out of 32.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 17% of peak store performance is reached (2.84 out of 16.00 bytes stored per cycle (GB/s @ 1GHz))\n",
        },
        {
          title = "Front-end bottlenecks",
          txt = "Found no such bottlenecks.",
        },
        {
          title = "ASM code",
          txt = "In the binary file, the address of the function is: 1abe0\n\nInstruction                     | Nb FU | P0 | P1 | P2   | P3   | P4 | P5 | Latency | Recip. throughput\n-------------------------------------------------------------------------------------------------------\nVMOVSD 0xd7d0(%RIP),%XMM6       | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVDIVSD (%RDI),%XMM6,%XMM0       | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 10-22   | 10-22\nVMULSD 0x28(%RDI),%XMM0,%XMM11  | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 5       | 1\nVMULSD 0x50(%RDI),%XMM0,%XMM8   | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 5       | 1\nVMULSD 0x78(%RDI),%XMM0,%XMM13  | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 5       | 1\nVMULSD 0xa0(%RDI),%XMM0,%XMM9   | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 5       | 1\nVMULSD (%RSI),%XMM0,%XMM5       | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 5       | 1\nVMOVSD 0x8(%RDI),%XMM15         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMOVSD %XMM11,0x28(%RDI)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD 0x30(%RDI),%XMM3         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD %XMM15,%XMM11,%XMM1      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD 0x8(%RSI),%XMM0          | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD %XMM15,%XMM8,%XMM2       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD 0x58(%RDI),%XMM4         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD %XMM15,%XMM13,%XMM7      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD 0x80(%RDI),%XMM10        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMOVSD %XMM5,-0x60(%RSP)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMULSD %XMM9,%XMM15,%XMM12      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD 0xa8(%RDI),%XMM14        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD %XMM5,%XMM15,%XMM15      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM1,%XMM3,%XMM3        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVSUBSD %XMM2,%XMM4,%XMM6        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVSUBSD %XMM7,%XMM10,%XMM4       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD 0x38(%RDI),%XMM7         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVSUBSD %XMM12,%XMM14,%XMM10     | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD %XMM3,0x30(%RDI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVSUBSD %XMM15,%XMM0,%XMM1       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD 0x60(%RDI),%XMM15        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMOVSD %XMM1,-0x68(%RSP)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD 0x10(%RDI),%XMM1         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD %XMM1,%XMM11,%XMM2       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM1,%XMM8,%XMM12       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM5,%XMM1,%XMM5        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM2,%XMM7,%XMM14       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM1,%XMM13,%XMM7       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD 0x88(%RDI),%XMM2         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVSUBSD %XMM12,%XMM15,%XMM0      | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD 0xb0(%RDI),%XMM15        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMOVSD %XMM14,0x38(%RDI)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD %XMM0,-0x40(%RSP)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVSUBSD %XMM7,%XMM2,%XMM12       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVAPD %XMM9,%XMM7             | 1     | 0  | 0  | 0    | 0    | 0  | 1  | 1       | 1\nVMULSD %XMM9,%XMM1,%XMM9        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD 0x10(%RSI),%XMM1         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVSUBSD %XMM5,%XMM1,%XMM2        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD %XMM12,-0x38(%RSP)       | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD %XMM2,-0x28(%RSP)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD 0x18(%RDI),%XMM2         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVSUBSD %XMM9,%XMM15,%XMM0       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD 0x40(%RDI),%XMM9         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD %XMM2,%XMM11,%XMM12      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM2,%XMM8,%XMM15       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM0,-0x30(%RSP)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD 0x68(%RDI),%XMM0         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVSUBSD %XMM12,%XMM9,%XMM1       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM2,%XMM13,%XMM9       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM15,%XMM0,%XMM12      | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD %XMM1,0x40(%RDI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD 0x90(%RDI),%XMM5         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMOVSD 0xb8(%RDI),%XMM0         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVSUBSD %XMM9,%XMM5,%XMM15       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVAPD %XMM7,%XMM9             | 1     | 0  | 0  | 0    | 0    | 0  | 1  | 1       | 1\nVMULSD %XMM7,%XMM2,%XMM7        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM9,-0x48(%RSP)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMULSD -0x60(%RSP),%XMM2,%XMM2  | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 5       | 1\nVSUBSD %XMM7,%XMM0,%XMM5        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD 0x18(%RSI),%XMM7         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVSUBSD %XMM2,%XMM7,%XMM0        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD 0x20(%RDI),%XMM2         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMOVSD %XMM5,-0x20(%RSP)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD 0x48(%RDI),%XMM5         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD %XMM2,%XMM11,%XMM7       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM0,-0x18(%RSP)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMULSD %XMM9,%XMM2,%XMM9        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM7,%XMM5,%XMM0        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM2,%XMM8,%XMM5        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD 0x70(%RDI),%XMM7         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMOVSD %XMM0,-0x58(%RSP)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD %XMM0,0x48(%RDI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMULSD %XMM2,%XMM13,%XMM0       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM5,%XMM7,%XMM7        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD 0x98(%RDI),%XMM5         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD -0x60(%RSP),%XMM2,%XMM2  | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 5       | 1\nVSUBSD %XMM0,%XMM5,%XMM5        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD 0xc0(%RDI),%XMM0         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVSUBSD %XMM9,%XMM0,%XMM9        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD 0x20(%RSI),%XMM0         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMOVSD %XMM9,-0x10(%RSP)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVSUBSD %XMM2,%XMM0,%XMM9        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD 0xd604(%RIP),%XMM2       | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVDIVSD %XMM3,%XMM2,%XMM3        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 10-22   | 10-22\nVMOVSD %XMM9,-0x8(%RSP)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMULSD -0x68(%RSP),%XMM3,%XMM0  | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 5       | 1\nVMULSD %XMM3,%XMM6,%XMM6        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM0,-0x68(%RSP)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMULSD %XMM3,%XMM4,%XMM4        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM3,%XMM10,%XMM10      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD -0x40(%RSP),%XMM3        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD %XMM6,%XMM11,%XMM9       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM6,0x58(%RDI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMULSD %XMM6,%XMM14,%XMM2       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM6,%XMM1,%XMM0        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM9,%XMM8,%XMM8        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVSUBSD %XMM2,%XMM3,%XMM9        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD -0x58(%RSP),%XMM3        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVSUBSD %XMM0,%XMM12,%XMM12      | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD 0xd5b0(%RIP),%XMM0       | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD %XMM3,%XMM6,%XMM2        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM8,-0x50(%RSP)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVDIVSD %XMM9,%XMM0,%XMM0        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 10-22   | 10-22\nVMOVSD %XMM8,0x50(%RDI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMULSD %XMM4,%XMM14,%XMM8       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM9,0x60(%RDI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD -0x38(%RSP),%XMM9        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMOVSD %XMM12,0x68(%RDI)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVSUBSD %XMM2,%XMM7,%XMM7        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVSUBSD %XMM8,%XMM9,%XMM2        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM10,%XMM14,%XMM9      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM7,0x70(%RDI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMULSD %XMM0,%XMM2,%XMM8        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM8,0x88(%RDI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD -0x30(%RSP),%XMM2        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVSUBSD %XMM9,%XMM2,%XMM9        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD -0x68(%RSP),%XMM14,%XMM2 | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 5       | 1\nVMOVSD -0x28(%RSP),%XMM14       | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD %XMM0,%XMM9,%XMM9        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM2,%XMM14,%XMM2       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD -0x50(%RSP),%XMM8,%XMM14 | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 5       | 1\nVMULSD %XMM0,%XMM2,%XMM2        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM4,%XMM11,%XMM0       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM0,%XMM13,%XMM13      | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM8,%XMM6,%XMM0        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM14,%XMM13,%XMM13     | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVSUBSD %XMM0,%XMM4,%XMM14       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM4,%XMM1,%XMM0        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM3,%XMM4,%XMM4        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM13,0x78(%RDI)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD %XMM14,0x80(%RDI)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVSUBSD %XMM0,%XMM15,%XMM0       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM8,%XMM12,%XMM15      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM15,%XMM0,%XMM0       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVSUBSD %XMM4,%XMM5,%XMM15       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM8,%XMM7,%XMM5        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM0,0x90(%RDI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVSUBSD %XMM5,%XMM15,%XMM4       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD 0xd4ea(%RIP),%XMM15      | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD %XMM10,%XMM1,%XMM5       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD -0x68(%RSP),%XMM1,%XMM1  | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 5       | 1\nVDIVSD %XMM0,%XMM15,%XMM15      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 10-22   | 10-22\nVMOVSD -0x20(%RSP),%XMM0        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMOVSD %XMM4,0x98(%RDI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVSUBSD %XMM5,%XMM0,%XMM5        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM9,%XMM12,%XMM0       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM2,%XMM12,%XMM12      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM0,%XMM5,%XMM5        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD -0x18(%RSP),%XMM0        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVSUBSD %XMM1,%XMM0,%XMM1        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVSUBSD %XMM12,%XMM1,%XMM0       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD -0x50(%RSP),%XMM9,%XMM12 | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 5       | 1\nVMOVSD -0x48(%RSP),%XMM1        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD %XMM15,%XMM5,%XMM5       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM15,%XMM0,%XMM0       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM10,%XMM11,%XMM15     | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM5,0xb8(%RDI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVSUBSD %XMM15,%XMM1,%XMM15      | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM5,%XMM13,%XMM1       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM0,%XMM13,%XMM13      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM12,%XMM15,%XMM15     | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVSUBSD %XMM1,%XMM15,%XMM12      | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM9,%XMM6,%XMM15       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM2,%XMM6,%XMM6        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM12,0xa0(%RDI)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVSUBSD %XMM15,%XMM10,%XMM1      | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM5,%XMM14,%XMM15      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM3,%XMM10,%XMM10      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD -0x10(%RSP),%XMM3        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD %XMM0,%XMM14,%XMM14      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM15,%XMM1,%XMM1       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM5,%XMM8,%XMM15       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM10,%XMM3,%XMM10      | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM0,%XMM8,%XMM8        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM1,0xa8(%RDI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVSUBSD %XMM15,%XMM9,%XMM15      | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM9,%XMM7,%XMM9        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM2,%XMM7,%XMM7        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM15,0xb0(%RDI)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVSUBSD %XMM9,%XMM10,%XMM3       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM5,%XMM4,%XMM10       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM0,%XMM4,%XMM4        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM10,%XMM3,%XMM9       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD -0x68(%RSP),%XMM3        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD -0x58(%RSP),%XMM3,%XMM10 | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 5       | 1\nVMOVSD -0x8(%RSP),%XMM3         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMOVSD %XMM9,0xc0(%RDI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVSUBSD %XMM10,%XMM3,%XMM10      | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVSUBSD %XMM7,%XMM10,%XMM3       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD 0xd3df(%RIP),%XMM7       | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVDIVSD %XMM9,%XMM7,%XMM9        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 10-22   | 10-22\nVSUBSD %XMM4,%XMM3,%XMM10       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD -0x68(%RSP),%XMM3        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMOVSD -0x60(%RSP),%XMM4        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD %XMM3,%XMM11,%XMM11      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM6,%XMM3,%XMM3        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVSUBSD %XMM11,%XMM4,%XMM7       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM9,%XMM10,%XMM10      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD -0x50(%RSP),%XMM2,%XMM9  | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 5       | 1\nVSUBSD %XMM8,%XMM2,%XMM2        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM10,%XMM12,%XMM12     | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM10,0x20(%RSI)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVSUBSD %XMM9,%XMM7,%XMM11       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM10,%XMM1,%XMM1       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM10,%XMM15,%XMM15     | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM14,%XMM3,%XMM9       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM10,%XMM5,%XMM5       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM13,%XMM11,%XMM4      | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVSUBSD %XMM1,%XMM9,%XMM11       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVSUBSD %XMM12,%XMM4,%XMM7       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVSUBSD %XMM15,%XMM2,%XMM13      | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVSUBSD %XMM5,%XMM0,%XMM0        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD %XMM11,0x8(%RSI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD %XMM7,(%RSI)             | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD %XMM13,0x10(%RSI)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD %XMM0,0x18(%RSI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nRET                             | 2     | 0  | 0  | 0.50 | 0.50 | 0  | 1  | 0       | 2\n",
        },
      },
      header = {
        "15% of peak computational performance is used (1.27 out of 8.00 FLOP per cycle (GFLOPS @ 1GHz))",
      },
      brief = {
      },
      gain = {
        {
          workaround = " - Try another compiler or update/tune your current one\n - Make array accesses unit-stride:\n  * If your function streams arrays of structures (AoS), try to use structures of arrays instead (SoA):\ndo i a(i)%x = b(i)%x (slow, non stride 1) => do i a%x(i) = b%x(i) (fast, stride 1)\n",
          details = "Store and arithmetical SSE/AVX instructions are used in scalar version (process only one data element in vector registers).\nSince your execution units are vector units, only a vectorized function can use their full power.\n",
          title = "Vectorization",
          txt = "Your function is probably not vectorized.\nOnly 25% of vector register length is used (average across all SSE/AVX instructions).\nBy vectorizing your function, you can lower the cost of an iteration from 110.00 to 55.00 cycles (2.00x speedup).",
        },
        {
          workaround = " - Reduce the number of division or square root instructions:\n  * If denominator is constant over iterations, use reciprocal (replace x/y with x*(1/y)). Check precision impact. This will be done by your compiler with ffast-math or Ofast\n - Check whether you really need double precision. If not, switch to single precision to speedup execution\n",
          title = "Execution units bottlenecks",
          txt = "Performance is limited by execution of divide and square root operations (the divide/square root unit is a bottleneck).\n\nBy removing all these bottlenecks, you can lower the cost of an iteration from 110.00 to 80.00 cycles (1.38x speedup).\n",
        },
      },
      potential = {
        {
          title = "Expensive FP math instructions/calls",
          txt = "Detected performance impact from expensive FP math instructions/calls.\nBy removing/reexpressing them, you can lower the cost of an iteration from 110.00 to 75.00 cycles (1.47x speedup).",
        },
      },
    },
  },
  AVG = {
      hint = {
        {
          details = "These instructions generate more than one micro-operation and only one of them can be decoded during a cycle and the extra micro-operations increase pressure on execution units.\n - RET: 1 occurrences\n",
          title = "Complex instructions",
          txt = "Detected COMPLEX INSTRUCTIONS.\n",
        },
        {
          title = "Type of elements and instruction set",
          txt = "140 SSE or AVX instructions are processing arithmetic or math operations on double precision FP elements in scalar mode (one at a time).\n",
        },
        {
          title = "Matching between your function (in the source code) and the binary function",
          txt = "The binary function is composed of 140 FP arithmetical operations:\n - 60: addition or subtraction\n - 75: multiply\n - 5: divide\nThe binary function is loading 456 bytes (57 double precision FP elements).\nThe binary function is storing 312 bytes (39 double precision FP elements).",
        },
        {
          title = "Arithmetic intensity",
          txt = "Arithmetic intensity is 0.18 FP operations per loaded or stored byte.",
        },
      },
      expert = {
        {
          title = "General properties",
          txt = "nb instructions    : 224\nnb uops            : 225\nloop length        : 1145\nused x86 registers : 3\nused mmx registers : 0\nused xmm registers : 16\nused ymm registers : 0\nused zmm registers : 0\nnb stack references: 13\nADD-SUB / MUL ratio: 0.80\n",
        },
        {
          title = "Front-end",
          txt = "MACRO FUSION NOT POSSIBLE\nFIT IN UOP CACHE\nmicro-operation queue: 56.25 cycles\nfront end            : 56.25 cycles\n",
        },
        {
          title = "Back-end",
          txt = "       | P0    | P1    | P2    | P3    | P4    | P5\n-----------------------------------------------------\nuops   | 80.00 | 60.00 | 48.50 | 48.50 | 39.00 | 3.00\ncycles | 80.00 | 60.00 | 48.50 | 48.50 | 39.00 | 3.00\n\nCycles executing div or sqrt instructions: 50.00-110.00\n",
        },
        {
          title = "Cycles summary",
          txt = "Front-end : 56.25\nDispatch  : 80.00\nDIV/SQRT  : 50.00-110.00\nOverall L1: 80.00-110.00\n",
        },
        {
          title = "Vectorization ratios",
          txt = "all     : 0%\nload    : 0%\nstore   : 0%\nmul     : 0%\nadd-sub : 0%\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: 0%\nother   : 100%\n",
        },
        {
          title = "Vector efficiency ratios",
          txt = "all     : 25%\nload    : 25%\nstore   : 25%\nmul     : 25%\nadd-sub : 25%\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: 25%\nother   : 50%\n",
        },
        {
          title = "Cycles and memory resources usage",
          txt = "Assuming all data fit into the L1 cache, each call to the function takes 110.00 cycles. At this rate:\n - 12% of peak load performance is reached (4.15 out of 32.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 17% of peak store performance is reached (2.84 out of 16.00 bytes stored per cycle (GB/s @ 1GHz))\n",
        },
        {
          title = "Front-end bottlenecks",
          txt = "Found no such bottlenecks.",
        },
        {
          title = "ASM code",
          txt = "In the binary file, the address of the function is: 1abe0\n\nInstruction                     | Nb FU | P0 | P1 | P2   | P3   | P4 | P5 | Latency | Recip. throughput\n-------------------------------------------------------------------------------------------------------\nVMOVSD 0xd7d0(%RIP),%XMM6       | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVDIVSD (%RDI),%XMM6,%XMM0       | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 10-22   | 10-22\nVMULSD 0x28(%RDI),%XMM0,%XMM11  | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 5       | 1\nVMULSD 0x50(%RDI),%XMM0,%XMM8   | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 5       | 1\nVMULSD 0x78(%RDI),%XMM0,%XMM13  | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 5       | 1\nVMULSD 0xa0(%RDI),%XMM0,%XMM9   | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 5       | 1\nVMULSD (%RSI),%XMM0,%XMM5       | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 5       | 1\nVMOVSD 0x8(%RDI),%XMM15         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMOVSD %XMM11,0x28(%RDI)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD 0x30(%RDI),%XMM3         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD %XMM15,%XMM11,%XMM1      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD 0x8(%RSI),%XMM0          | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD %XMM15,%XMM8,%XMM2       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD 0x58(%RDI),%XMM4         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD %XMM15,%XMM13,%XMM7      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD 0x80(%RDI),%XMM10        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMOVSD %XMM5,-0x60(%RSP)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMULSD %XMM9,%XMM15,%XMM12      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD 0xa8(%RDI),%XMM14        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD %XMM5,%XMM15,%XMM15      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM1,%XMM3,%XMM3        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVSUBSD %XMM2,%XMM4,%XMM6        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVSUBSD %XMM7,%XMM10,%XMM4       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD 0x38(%RDI),%XMM7         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVSUBSD %XMM12,%XMM14,%XMM10     | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD %XMM3,0x30(%RDI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVSUBSD %XMM15,%XMM0,%XMM1       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD 0x60(%RDI),%XMM15        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMOVSD %XMM1,-0x68(%RSP)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD 0x10(%RDI),%XMM1         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD %XMM1,%XMM11,%XMM2       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM1,%XMM8,%XMM12       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM5,%XMM1,%XMM5        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM2,%XMM7,%XMM14       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM1,%XMM13,%XMM7       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD 0x88(%RDI),%XMM2         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVSUBSD %XMM12,%XMM15,%XMM0      | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD 0xb0(%RDI),%XMM15        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMOVSD %XMM14,0x38(%RDI)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD %XMM0,-0x40(%RSP)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVSUBSD %XMM7,%XMM2,%XMM12       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVAPD %XMM9,%XMM7             | 1     | 0  | 0  | 0    | 0    | 0  | 1  | 1       | 1\nVMULSD %XMM9,%XMM1,%XMM9        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD 0x10(%RSI),%XMM1         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVSUBSD %XMM5,%XMM1,%XMM2        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD %XMM12,-0x38(%RSP)       | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD %XMM2,-0x28(%RSP)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD 0x18(%RDI),%XMM2         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVSUBSD %XMM9,%XMM15,%XMM0       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD 0x40(%RDI),%XMM9         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD %XMM2,%XMM11,%XMM12      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM2,%XMM8,%XMM15       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM0,-0x30(%RSP)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD 0x68(%RDI),%XMM0         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVSUBSD %XMM12,%XMM9,%XMM1       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM2,%XMM13,%XMM9       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM15,%XMM0,%XMM12      | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD %XMM1,0x40(%RDI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD 0x90(%RDI),%XMM5         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMOVSD 0xb8(%RDI),%XMM0         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVSUBSD %XMM9,%XMM5,%XMM15       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVAPD %XMM7,%XMM9             | 1     | 0  | 0  | 0    | 0    | 0  | 1  | 1       | 1\nVMULSD %XMM7,%XMM2,%XMM7        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM9,-0x48(%RSP)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMULSD -0x60(%RSP),%XMM2,%XMM2  | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 5       | 1\nVSUBSD %XMM7,%XMM0,%XMM5        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD 0x18(%RSI),%XMM7         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVSUBSD %XMM2,%XMM7,%XMM0        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD 0x20(%RDI),%XMM2         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMOVSD %XMM5,-0x20(%RSP)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD 0x48(%RDI),%XMM5         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD %XMM2,%XMM11,%XMM7       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM0,-0x18(%RSP)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMULSD %XMM9,%XMM2,%XMM9        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM7,%XMM5,%XMM0        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM2,%XMM8,%XMM5        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD 0x70(%RDI),%XMM7         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMOVSD %XMM0,-0x58(%RSP)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD %XMM0,0x48(%RDI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMULSD %XMM2,%XMM13,%XMM0       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM5,%XMM7,%XMM7        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD 0x98(%RDI),%XMM5         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD -0x60(%RSP),%XMM2,%XMM2  | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 5       | 1\nVSUBSD %XMM0,%XMM5,%XMM5        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD 0xc0(%RDI),%XMM0         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVSUBSD %XMM9,%XMM0,%XMM9        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD 0x20(%RSI),%XMM0         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMOVSD %XMM9,-0x10(%RSP)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVSUBSD %XMM2,%XMM0,%XMM9        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD 0xd604(%RIP),%XMM2       | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVDIVSD %XMM3,%XMM2,%XMM3        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 10-22   | 10-22\nVMOVSD %XMM9,-0x8(%RSP)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMULSD -0x68(%RSP),%XMM3,%XMM0  | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 5       | 1\nVMULSD %XMM3,%XMM6,%XMM6        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM0,-0x68(%RSP)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMULSD %XMM3,%XMM4,%XMM4        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM3,%XMM10,%XMM10      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD -0x40(%RSP),%XMM3        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD %XMM6,%XMM11,%XMM9       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM6,0x58(%RDI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMULSD %XMM6,%XMM14,%XMM2       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM6,%XMM1,%XMM0        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM9,%XMM8,%XMM8        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVSUBSD %XMM2,%XMM3,%XMM9        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD -0x58(%RSP),%XMM3        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVSUBSD %XMM0,%XMM12,%XMM12      | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD 0xd5b0(%RIP),%XMM0       | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD %XMM3,%XMM6,%XMM2        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM8,-0x50(%RSP)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVDIVSD %XMM9,%XMM0,%XMM0        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 10-22   | 10-22\nVMOVSD %XMM8,0x50(%RDI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMULSD %XMM4,%XMM14,%XMM8       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM9,0x60(%RDI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD -0x38(%RSP),%XMM9        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMOVSD %XMM12,0x68(%RDI)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVSUBSD %XMM2,%XMM7,%XMM7        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVSUBSD %XMM8,%XMM9,%XMM2        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM10,%XMM14,%XMM9      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM7,0x70(%RDI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMULSD %XMM0,%XMM2,%XMM8        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM8,0x88(%RDI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD -0x30(%RSP),%XMM2        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVSUBSD %XMM9,%XMM2,%XMM9        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD -0x68(%RSP),%XMM14,%XMM2 | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 5       | 1\nVMOVSD -0x28(%RSP),%XMM14       | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD %XMM0,%XMM9,%XMM9        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM2,%XMM14,%XMM2       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD -0x50(%RSP),%XMM8,%XMM14 | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 5       | 1\nVMULSD %XMM0,%XMM2,%XMM2        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM4,%XMM11,%XMM0       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM0,%XMM13,%XMM13      | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM8,%XMM6,%XMM0        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM14,%XMM13,%XMM13     | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVSUBSD %XMM0,%XMM4,%XMM14       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM4,%XMM1,%XMM0        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM3,%XMM4,%XMM4        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM13,0x78(%RDI)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD %XMM14,0x80(%RDI)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVSUBSD %XMM0,%XMM15,%XMM0       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM8,%XMM12,%XMM15      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM15,%XMM0,%XMM0       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVSUBSD %XMM4,%XMM5,%XMM15       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM8,%XMM7,%XMM5        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM0,0x90(%RDI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVSUBSD %XMM5,%XMM15,%XMM4       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD 0xd4ea(%RIP),%XMM15      | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD %XMM10,%XMM1,%XMM5       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD -0x68(%RSP),%XMM1,%XMM1  | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 5       | 1\nVDIVSD %XMM0,%XMM15,%XMM15      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 10-22   | 10-22\nVMOVSD -0x20(%RSP),%XMM0        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMOVSD %XMM4,0x98(%RDI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVSUBSD %XMM5,%XMM0,%XMM5        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM9,%XMM12,%XMM0       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM2,%XMM12,%XMM12      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM0,%XMM5,%XMM5        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD -0x18(%RSP),%XMM0        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVSUBSD %XMM1,%XMM0,%XMM1        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVSUBSD %XMM12,%XMM1,%XMM0       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD -0x50(%RSP),%XMM9,%XMM12 | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 5       | 1\nVMOVSD -0x48(%RSP),%XMM1        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD %XMM15,%XMM5,%XMM5       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM15,%XMM0,%XMM0       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM10,%XMM11,%XMM15     | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM5,0xb8(%RDI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVSUBSD %XMM15,%XMM1,%XMM15      | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM5,%XMM13,%XMM1       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM0,%XMM13,%XMM13      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM12,%XMM15,%XMM15     | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVSUBSD %XMM1,%XMM15,%XMM12      | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM9,%XMM6,%XMM15       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM2,%XMM6,%XMM6        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM12,0xa0(%RDI)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVSUBSD %XMM15,%XMM10,%XMM1      | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM5,%XMM14,%XMM15      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM3,%XMM10,%XMM10      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD -0x10(%RSP),%XMM3        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD %XMM0,%XMM14,%XMM14      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM15,%XMM1,%XMM1       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM5,%XMM8,%XMM15       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM10,%XMM3,%XMM10      | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM0,%XMM8,%XMM8        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM1,0xa8(%RDI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVSUBSD %XMM15,%XMM9,%XMM15      | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM9,%XMM7,%XMM9        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM2,%XMM7,%XMM7        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM15,0xb0(%RDI)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVSUBSD %XMM9,%XMM10,%XMM3       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM5,%XMM4,%XMM10       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM0,%XMM4,%XMM4        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM10,%XMM3,%XMM9       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD -0x68(%RSP),%XMM3        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD -0x58(%RSP),%XMM3,%XMM10 | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 5       | 1\nVMOVSD -0x8(%RSP),%XMM3         | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMOVSD %XMM9,0xc0(%RDI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVSUBSD %XMM10,%XMM3,%XMM10      | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVSUBSD %XMM7,%XMM10,%XMM3       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD 0xd3df(%RIP),%XMM7       | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVDIVSD %XMM9,%XMM7,%XMM9        | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 10-22   | 10-22\nVSUBSD %XMM4,%XMM3,%XMM10       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD -0x68(%RSP),%XMM3        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMOVSD -0x60(%RSP),%XMM4        | 1     | 0  | 0  | 0.50 | 0.50 | 0  | 0  | 3       | 0.50\nVMULSD %XMM3,%XMM11,%XMM11      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM6,%XMM3,%XMM3        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVSUBSD %XMM11,%XMM4,%XMM7       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM9,%XMM10,%XMM10      | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD -0x50(%RSP),%XMM2,%XMM9  | 1     | 1  | 0  | 0.50 | 0.50 | 0  | 0  | 5       | 1\nVSUBSD %XMM8,%XMM2,%XMM2        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM10,%XMM12,%XMM12     | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMOVSD %XMM10,0x20(%RSI)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVSUBSD %XMM9,%XMM7,%XMM11       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM10,%XMM1,%XMM1       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVMULSD %XMM10,%XMM15,%XMM15     | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM14,%XMM3,%XMM9       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMULSD %XMM10,%XMM5,%XMM5       | 1     | 1  | 0  | 0    | 0    | 0  | 0  | 5       | 1\nVSUBSD %XMM13,%XMM11,%XMM4      | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVSUBSD %XMM1,%XMM9,%XMM11       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVSUBSD %XMM12,%XMM4,%XMM7       | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVSUBSD %XMM15,%XMM2,%XMM13      | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVSUBSD %XMM5,%XMM0,%XMM0        | 1     | 0  | 1  | 0    | 0    | 0  | 0  | 3       | 1\nVMOVSD %XMM11,0x8(%RSI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD %XMM7,(%RSI)             | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD %XMM13,0x10(%RSI)        | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nVMOVSD %XMM0,0x18(%RSI)         | 1     | 0  | 0  | 0.50 | 0.50 | 1  | 0  | 3       | 1\nRET                             | 2     | 0  | 0  | 0.50 | 0.50 | 0  | 1  | 0       | 2\n",
        },
      },
      header = {
        "15% of peak computational performance is used (1.27 out of 8.00 FLOP per cycle (GFLOPS @ 1GHz))",
      },
      brief = {
      },
      gain = {
        {
          workaround = " - Try another compiler or update/tune your current one\n - Make array accesses unit-stride:\n  * If your function streams arrays of structures (AoS), try to use structures of arrays instead (SoA):\ndo i a(i)%x = b(i)%x (slow, non stride 1) => do i a%x(i) = b%x(i) (fast, stride 1)\n",
          details = "Store and arithmetical SSE/AVX instructions are used in scalar version (process only one data element in vector registers).\nSince your execution units are vector units, only a vectorized function can use their full power.\n",
          title = "Vectorization",
          txt = "Your function is probably not vectorized.\nOnly 25% of vector register length is used (average across all SSE/AVX instructions).\nBy vectorizing your function, you can lower the cost of an iteration from 110.00 to 55.00 cycles (2.00x speedup).",
        },
        {
          workaround = " - Reduce the number of division or square root instructions:\n  * If denominator is constant over iterations, use reciprocal (replace x/y with x*(1/y)). Check precision impact. This will be done by your compiler with ffast-math or Ofast\n - Check whether you really need double precision. If not, switch to single precision to speedup execution\n",
          title = "Execution units bottlenecks",
          txt = "Performance is limited by execution of divide and square root operations (the divide/square root unit is a bottleneck).\n\nBy removing all these bottlenecks, you can lower the cost of an iteration from 110.00 to 80.00 cycles (1.38x speedup).\n",
        },
      },
      potential = {
        {
          title = "Expensive FP math instructions/calls",
          txt = "Detected performance impact from expensive FP math instructions/calls.\nBy removing/reexpressing them, you can lower the cost of an iteration from 110.00 to 75.00 cycles (1.47x speedup).",
        },
      },
    },
  common = {
    header = {
      "The function is defined in /users/user2210/NPB3.4-MZ-MPI/BT-MZ/solve_subs.f90:508-639.\n",
    },
    nb_paths = 1,
  },
}
