_cqa_text_report = {
  paths = {
    {
      hint = {
        {
          details = "These instructions generate more than one micro-operation and only one of them can be decoded during a cycle and the extra micro-operations increase pressure on execution units.\n - ADD: 16 occurrences\n",
          title = "Complex instructions",
          txt = "Detected COMPLEX INSTRUCTIONS.\n",
        },
        {
          workaround = "Avoid mixing data with different types. In particular, check if the type of constants is the same as array elements.",
          details = " - CLTQ: 1 occurrences\n",
          title = "Conversion instructions",
          txt = "Detected expensive conversion instructions.",
        },
        {
          title = "Type of elements and instruction set",
          txt = "No instructions are processing arithmetic or math operations on FP elements. This loop is probably writing/copying data or processing integer elements.",
        },
        {
          title = "Matching between your loop (in the source code) and the binary loop",
          txt = "The binary loop does not contain any FP arithmetical operations.\nThe binary loop is loading 1116 bytes.\nThe binary loop is storing 336 bytes.",
        },
      },
      expert = {
        {
          title = "General properties",
          txt = "nb instructions    : 426\nnb uops            : 442\nloop length        : 2530\nused x86 registers : 15\nused mmx registers : 0\nused xmm registers : 2\nused ymm registers : 0\nused zmm registers : 0\nnb stack references: 68\n",
        },
        {
          title = "Front-end",
          txt = "MACRO FUSION NOT POSSIBLE\nFIT IN UOP CACHE\nmicro-operation queue: 110.50 cycles\nfront end            : 110.50 cycles\n",
        },
        {
          title = "Back-end",
          txt = "       | P0    | P1    | P2     | P3     | P4    | P5\n--------------------------------------------------------\nuops   | 92.00 | 92.00 | 113.00 | 113.00 | 60.00 | 92.00\ncycles | 92.00 | 92.00 | 113.00 | 113.00 | 60.00 | 92.00\n\nCycles executing div or sqrt instructions: NA\n",
        },
        {
          title = "Cycles summary",
          txt = "Front-end : 110.50\nDispatch  : 113.00\nOverall L1: 113.00\n",
        },
        {
          title = "Vectorization ratios",
          txt = "INT\nall    : 0%\nload   : 0%\nstore  : 0%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 0%\nFP\nall     : 0%\nload    : 0%\nstore   : NA (no store vectorizable/vectorized instructions)\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : NA (no other vectorizable/vectorized instructions)\nINT+FP\nall     : 0%\nload    : 0%\nstore   : 0%\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 0%\n",
        },
        {
          title = "Vector efficiency ratios",
          txt = "INT\nall    : 32%\nload   : 25%\nstore  : 35%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 25%\nFP\nall     : 25%\nload    : 25%\nstore   : NA (no store vectorizable/vectorized instructions)\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : NA (no other vectorizable/vectorized instructions)\nINT+FP\nall     : 31%\nload    : 25%\nstore   : 35%\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 25%\n",
        },
        {
          title = "Cycles and memory resources usage",
          txt = "Assuming all data fit into the L1 cache, each iteration of the binary loop takes 113.00 cycles. At this rate:\n - 30% of peak load performance is reached (9.88 out of 32.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 18% of peak store performance is reached (2.97 out of 16.00 bytes stored per cycle (GB/s @ 1GHz))\n",
        },
        {
          title = "Front-end bottlenecks",
          txt = "Found no such bottlenecks.",
        },
        {
          title = "ASM code",
          txt = "In the binary file, the address of the loop is: e20f\n\nInstruction                              | Nb FU | P0   | P1   | P2   | P3   | P4 | P5   | Latency | Recip. throughput\n----------------------------------------------------------------------------------------------------------------------\nMOVSXD 0x110(%RSP),%RSI                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nMOV 0x1d8(%RSP),%R8                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOVSXD 0x1e8(%RSP),%R13                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nMOV 0x1d0(%RSP),%RDX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1b0(%RSP),%RBX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RSI,%R15                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RSI,0x50(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x160(%RSP),%RCX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RSI,%R8                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x1e0(%RSP),%RDI                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R13,%RAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R13,0x238(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADD $0x1,%EAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x198(%RSP),%R10                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RSI,%RBX                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nCLTQ                                     | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x1a8(%RSP),%R9                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RSI,%RCX                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %RDX,%RSI                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x150(%RSP),%R11                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RAX,%RSI                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x1c8(%RSP),%RCX                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD %R8,%RDI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RDI,0xf8(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x1b8(%RSP),%RDI                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R10,%R12                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL %RAX,%R12                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %R9,%R14                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x1a0(%RSP),%R8                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R13,%R14                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x130(%RSP),%RBX                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV %RCX,0x100(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nIMUL %R15,%R11                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %RSI,%RCX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD 0x120(%RSP),%R11                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nIMUL %R15,%R8                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nSUB %RDX,%RCX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RDI,%RDX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R12,%R13                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD 0x128(%RSP),%R8                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nSUB %R10,%R13                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x1c0(%RSP),%R10                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RAX,%RDX                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %R11,0x228(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x148(%RSP),%R11                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%R9,%R14,1),%R9                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nIMUL %R15,%R10                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x138(%RSP),%R10                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV %RDX,0x220(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nSUB %RDI,%RDX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x170(%RSP),%RDI                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RDX,0x218(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nIMUL %RAX,%R11                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nIMUL %R15,%RDI                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x178(%RSP),%RDI                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV %RDI,0x230(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x168(%RSP),%RDI                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RDI,%RDX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL %RAX,%RDX                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %RDX,0xe0(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nSUB %RDI,%RDX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RDX,0xd8(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x188(%RSP),%RDI                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x180(%RSP),%RDX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R15,%RDI                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x190(%RSP),%R15                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RDX,%RAX                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD %RDI,%R15                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x100(%RSP),%RDI                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R15,0x1f0(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %RAX,%R15                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSUB %RDX,%R15                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x238(%RSP),%RDX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RAX,0xd0(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nIMUL 0x158(%RSP),%RDX                    | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nMOV %R15,0xc8(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0xf0(%RSP),%R15                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x6(%RDI,%RDX,1),%RAX                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0xe8(%RSP),%RDI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%R15,%RAX,8),%RDX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0xf8(%RSP),%R15                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x6(%R15,%RSI,1),%RAX                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %RDI,%RSI                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RDI,%RAX,8),%RAX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %RAX,0xc0(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA 0x6(%R15,%RCX,1),%RAX                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nSUB 0x1d0(%RSP),%RCX                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA (%RDI,%RAX,8),%RDI                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x58(%RSP),%RAX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x6(%R15,%RCX,1),%R15                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%RSI,%R15,8),%RCX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x98(%RSP),%R15                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%RBX,%R9,1),%RSI                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD $0x2,%RAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %RBX,%R14                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RAX,0x238(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADD %R8,%R12                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R15,%R14,8),%R14                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R14,0x1f8(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA (%R15,%RSI,8),%R14                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x1a8(%RSP),%RSI                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R14,0x200(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA (%R8,%R13,1),%R14                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RSI,%RSI,1),%RAX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x78(%RSP),%RSI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nSUB %RAX,%R9                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R13,%RAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSUB 0x198(%RSP),%RAX                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD %RBX,%R9                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R15,%R9,8),%RBX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x80(%RSP),%R9                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RBX,0x208(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x228(%RSP),%RBX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RAX,%R13                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %R8,%R13                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R9,%R12,8),%R15                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x148(%RSP),%R12                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%R9,%R13,8),%R8                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R9,%R14,8),%R14                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R8,0x210(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA (%RBX,%R11,1),%R9                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R12,%R12,1),%RAX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RSI,%R9,8),%R9                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nSUB %RAX,%R11                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R11,%R13                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x218(%RSP),%R11                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %RBX,%R13                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x220(%RSP),%RBX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%RSI,%R13,8),%R8                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x70(%RSP),%RSI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%R10,%RBX,1),%RAX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R10,%R11,1),%RBX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nSUB 0x1b8(%RSP),%R11                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA (%RSI,%RAX,8),%R13                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RSI,%RBX,8),%R12                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R11,%RAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %R10,%RAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RSI,%RAX,8),%R10                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R10,0x218(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0xe0(%RSP),%RAX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x230(%RSP),%R11                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x68(%RSP),%RSI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0xd8(%RSP),%R10                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %R11,%RAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RSI,%RAX,8),%RBX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R10,%RAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSUB 0x168(%RSP),%RAX                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD %R10,%R11                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD 0x230(%RSP),%RAX                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA (%RSI,%R11,8),%R11                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RSI,%RAX,8),%R10                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0xd0(%RSP),%RAX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R10,0x220(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x1f0(%RSP),%R10                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x60(%RSP),%RSI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %R10,%RAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RSI,%RAX,8),%RAX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %RAX,0x228(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %R10,%RAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0xc8(%RSP),%R10                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %R10,%RAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSUB 0x180(%RSP),%R10                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD 0x1f0(%RSP),%R10                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA (%RSI,%RAX,8),%RAX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %RAX,0x230(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV $0x1,%EAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RSI,%R10,8),%RSI                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %RSI,0x1f0(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0xc0(%RSP),%RSI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nNOPL (%RAX)                              | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nCMPL $0x1,0x1e8(%RSP)                    | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJE f659 <compute_rhs_._omp_fn.0+0x3309>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMPL $0x2,0x1e8(%RSP)                    | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJE fd1f <compute_rhs_._omp_fn.0+0x39cf>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0xb0(%RSP),%EDX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1e8(%RSP),%EDI                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nSUB $0x3,%EDX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCMP %EDI,%EDX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJE fee8 <compute_rhs_._omp_fn.0+0x3b98>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x118(%RSP),%ECX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nCMP %ECX,%EDI                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJE f48b <compute_rhs_._omp_fn.0+0x313b>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x108(%RSP),%R15D                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nTEST %R15D,%R15D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE e20f <compute_rhs_._omp_fn.0+0x1ebf> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x1d0(%RSP),%R15                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA -0x2(%RDI),%R14D                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOVSXD %EDI,%R8                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOVSXD 0x110(%RSP),%R13                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nMOVSXD %R14D,%R12                        | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x1d8(%RSP),%R9                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL 0x158(%RSP),%R8                     | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nIMUL %R15,%R12                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0xf0(%RSP),%R11                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0xe8(%RSP),%RBX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R13,%R9                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x1a498(%RIP),%XMM13              | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nIMUL 0x160(%RSP),%R13                    | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nADD 0x1c8(%RSP),%R13                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD 0x1e0(%RSP),%R9                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nVMOVSD 0x1a47f(%RIP),%XMM12              | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nLEA (%R15,%R12,1),%RCX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R15,%RCX,1),%RDX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %R13,%R8                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA 0x30(%R11,%R8,8),%RAX                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x48(%RSP),%R8                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA (%R15,%RDX,1),%R10                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x6(%R9,%R12,1),%RSI                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA 0x6(%R9,%RDX,1),%R12                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA 0x6(%R9,%R10,1),%RDX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD %R15,%R10                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA 0x6(%R9,%RCX,1),%R13                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA 0x6(%R9,%R10,1),%R9                  | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%RBX,%RSI,8),%RDI                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RBX,%R13,8),%R14                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RBX,%R12,8),%RCX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RBX,%RDX,8),%RSI                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RBX,%R9,8),%R15                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x58(%R11,%R8,8),%R10                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nNOP                                      | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV 0xa4(%RSP),%EDI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nSUB 0x140(%RSP),%EDI                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nAND $0x7,%EDI                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJE e271 <compute_rhs_._omp_fn.0+0x1f21>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nADDL $0x1,0x1e8(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nMOV 0x1e8(%RSP),%EBX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nCMP %EBX,0xb8(%RSP)                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJLE f94f <compute_rhs_._omp_fn.0+0x35ff> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x108(%RSP),%R8D                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADDL $0x1,0x140(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nTEST %R8D,%R8D                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJG d8c0 <compute_rhs_._omp_fn.0+0x1570>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x1e8(%RSP),%R11D                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x110(%RSP),%R14D                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x140(%RSP),%EBX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x108(%RSP),%R8D                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nTEST %R8D,%R8D                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE e20f <compute_rhs_._omp_fn.0+0x1ebf> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOVSXD %EDI,%R11                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOVSXD 0x110(%RSP),%R13                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nMOV 0x1d8(%RSP),%RDI                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA -0x2(%R11),%EAX                      | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x1d0(%RSP),%RBX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOVSXD %EAX,%R14                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL 0x158(%RSP),%R11                    | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nMOV 0xf0(%RSP),%RSI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R13,%RDI                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0xe8(%RSP),%R15                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RBX,%R14                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x1e0(%RSP),%RDI                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nVMOVSD 0x18fe9(%RIP),%XMM13              | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nIMUL 0x160(%RSP),%R13                    | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nADD 0x1c8(%RSP),%R13                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nVMOVSD 0x18fc8(%RIP),%XMM12              | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nLEA (%RBX,%R14,1),%R12                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x6(%RDI,%R12,1),%RDX                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD %RBX,%R12                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA 0x6(%RDI,%R14,1),%RCX                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD %R11,%R13                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA 0x30(%RSI,%R13,8),%R9                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x48(%RSP),%R13                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA 0x6(%RDI,%R12,1),%R11                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R15,%RCX,8),%R10                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R15,%RDX,8),%R8                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R15,%R11,8),%RDI                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x58(%RSI,%R13,8),%R13               | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nNOPL (%RAX)                              | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP e20f <compute_rhs_._omp_fn.0+0x1ebf> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nMOV 0xf0(%RSP),%R11                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x100(%RSP),%RSI                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD 0x158(%RSP),%RSI                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV 0xf8(%RSP),%RBX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1d0(%RSP),%R14                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x40(%RSP),%R10                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x38(%RSP),%RCX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x30(%R11,%RSI,8),%RAX               | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0xe8(%RSP),%R9                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD 0x48(%RSP),%RSI                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA 0x6(%R14,%RBX,1),%RDX                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA 0x6(%RBX,%R10,1),%RDI                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA 0x6(%RBX,%RCX,1),%R8                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R9,%RDX,8),%R12                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R9,%RDI,8),%R15                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R9,%R8,8),%R13                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x58(%R11,%RSI,8),%RSI               | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nNOPL (%RAX)                              | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP e20f <compute_rhs_._omp_fn.0+0x1ebf> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nMOV 0x108(%RSP),%EDX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOVL $0x1,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADDL $0x1,0x110(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nADDL $0x1,0x140(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nTEST %EDX,%EDX                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJG d8c0 <compute_rhs_._omp_fn.0+0x1570>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMP $0x1,%EDI                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJE fb37 <compute_rhs_._omp_fn.0+0x37e7>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMP $0x2,%EDI                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJE faf5 <compute_rhs_._omp_fn.0+0x37a5>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMP $0x3,%EDI                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJE fab3 <compute_rhs_._omp_fn.0+0x3763>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMP $0x4,%EDI                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJE fa71 <compute_rhs_._omp_fn.0+0x3721>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMP $0x5,%EDI                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJE fa2f <compute_rhs_._omp_fn.0+0x36df>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMP $0x6,%EDI                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJE f9ed <compute_rhs_._omp_fn.0+0x369d>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMPL $0x2,0xb8(%RSP)                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOVL $0x2,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJG e23e <compute_rhs_._omp_fn.0+0x1eee>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nADDL $0x1,0x110(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nMOVL $0x1,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADDL $0x1,0x140(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nCMPL $0,0x108(%RSP)                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJG d8c0 <compute_rhs_._omp_fn.0+0x1570>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMPL $0x2,0xb8(%RSP)                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOVL $0x2,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJG e23e <compute_rhs_._omp_fn.0+0x1eee>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nADDL $0x1,0x110(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nMOVL $0x1,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADDL $0x1,0x140(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nCMPL $0,0x108(%RSP)                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJG d8c0 <compute_rhs_._omp_fn.0+0x1570>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMPL $0x2,0xb8(%RSP)                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOVL $0x2,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJG e23e <compute_rhs_._omp_fn.0+0x1eee>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nADDL $0x1,0x110(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nMOVL $0x1,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADDL $0x1,0x140(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nCMPL $0,0x108(%RSP)                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJG d8c0 <compute_rhs_._omp_fn.0+0x1570>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMPL $0x2,0xb8(%RSP)                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOVL $0x2,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJG e23e <compute_rhs_._omp_fn.0+0x1eee>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nADDL $0x1,0x110(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nMOVL $0x1,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADDL $0x1,0x140(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nCMPL $0,0x108(%RSP)                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJG d8c0 <compute_rhs_._omp_fn.0+0x1570>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMPL $0x2,0xb8(%RSP)                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOVL $0x2,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJG e23e <compute_rhs_._omp_fn.0+0x1eee>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nADDL $0x1,0x110(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nMOVL $0x1,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADDL $0x1,0x140(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nCMPL $0,0x108(%RSP)                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJG d8c0 <compute_rhs_._omp_fn.0+0x1570>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMPL $0x2,0xb8(%RSP)                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOVL $0x2,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJG e23e <compute_rhs_._omp_fn.0+0x1eee>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nADDL $0x1,0x110(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nMOVL $0x1,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADDL $0x1,0x140(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nCMPL $0,0x108(%RSP)                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJG d8c0 <compute_rhs_._omp_fn.0+0x1570>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x110(%RSP),%R14D                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV $0x1,%R11D                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x140(%RSP),%EBX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nJMP e288 <compute_rhs_._omp_fn.0+0x1f38> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nMOV 0x50(%RSP),%R10                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1d8(%RSP),%R15                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1c8(%RSP),%R8                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x40(%RSP),%RDI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0xf0(%RSP),%R13                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R10,%R15                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x1d0(%RSP),%RDX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL 0x160(%RSP),%R10                    | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nADD 0x1e0(%RSP),%R15                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV 0x38(%RSP),%R9                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0xe8(%RSP),%R14                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x6(%RDI,%R15,1),%RCX                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD %R10,%R8                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD 0x30(%RSP),%R8                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV 0x28(%RSP),%RDI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x6(%RDX,%R15,1),%R11                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA 0x6(%R15,%R9,1),%R12                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA 0x30(%R13,%R8,8),%RAX                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x48(%RSP),%R8                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA 0x6(%R15,%RDI,1),%R15                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R14,%RCX,8),%RBX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R14,%R11,8),%RSI                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R14,%R12,8),%R10                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R14,%R15,8),%RCX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x58(%R13,%R8,8),%R8                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nNOPL (%RAX,%RAX,1)                       | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV %R13D,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJMP e20f <compute_rhs_._omp_fn.0+0x1ebf> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nMOV 0x108(%RSP),%EAX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nTEST %EAX,%EAX                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE e20f <compute_rhs_._omp_fn.0+0x1ebf> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOVSXD 0x110(%RSP),%R12                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nMOV 0x1d8(%RSP),%R9                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOVSXD 0x1e8(%RSP),%R14                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nIMUL 0x158(%RSP),%R14                    | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nMOV 0x20(%RSP),%RBX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R12,%R9                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0xf0(%RSP),%R15                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL 0x160(%RSP),%R12                    | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nADD 0x1e0(%RSP),%R9                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD 0x1c8(%RSP),%R12                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV 0x18(%RSP),%RCX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x10(%RSP),%R11                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x6(%R9,%RBX,1),%RSI                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x8(%RSP),%RBX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %R14,%R12                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0xe8(%RSP),%R8                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x30(%R15,%R12,8),%R10               | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x48(%RSP),%R12                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nVMOVSD 0x18565(%RIP),%XMM13              | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nLEA 0x6(%R9,%RCX,1),%RDX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x18560(%RIP),%XMM12              | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nLEA 0x6(%R9,%R11,1),%RAX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA 0x6(%R9,%RBX,1),%R9                  | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R8,%RSI,8),%RDI                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R8,%RDX,8),%R13                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R8,%RAX,8),%R14                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R8,%R9,8),%RSI                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x58(%R15,%R12,8),%R12               | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nNOP                                      | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP e20f <compute_rhs_._omp_fn.0+0x1ebf> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nMOV %R11D,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %R14D,0x110(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %EBX,0x140(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJMP e23e <compute_rhs_._omp_fn.0+0x1eee> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nMOV %R11D,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %R14D,0x110(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %EBX,0x140(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJMP d8c0 <compute_rhs_._omp_fn.0+0x1570> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\n",
        },
      },
      header = {
        "0% of peak computational performance is used (0.00 out of 2.00 FLOP per cycle (GFLOPS @ 1GHz))",
      },
      brief = {
      },
      gain = {
        {
          workaround = " - Try to reorganize arrays of structures to structures of arrays\n - Consider to permute loops (see vectorization gain report)\n - To reference allocatable arrays, use \"allocatable\" instead of \"pointer\" pointers or qualify them with the \"contiguous\" attribute (Fortran 2008)\n - For structures, limit to one indirection. For example, use a_b%c instead of a%b%c with a_b set to a%b before this loop\n",
          title = "Code clean check",
          txt = "Detected a slowdown caused by scalar integer instructions (typically used for address computation).\nBy removing them, you can lower the cost of an iteration from 113.00 to 29.00 cycles (3.90x speedup).",
        },
        {
          workaround = " - Try another compiler or update/tune your current one:\n  * recompile with fassociative-math (included in Ofast or ffast-math) to extend loop vectorization to FP reductions.\n - Remove inter-iterations dependences from your loop and make it unit-stride:\n  * If your arrays have 2 or more dimensions, check whether elements are accessed contiguously and, otherwise, try to permute loops accordingly:\nFortran storage order is column-major: do i do j a(i,j) = b(i,j) (slow, non stride 1) => do i do j a(j,i) = b(i,j) (fast, stride 1)\n  * If your loop streams arrays of structures (AoS), try to use structures of arrays instead (SoA):\ndo i a(i)%x = b(i)%x (slow, non stride 1) => do i a%x(i) = b%x(i) (fast, stride 1)\n",
          details = "All SSE/AVX instructions are used in scalar version (process only one data element in vector registers).\nSince your execution units are vector units, only a vectorized loop can use their full power.\n",
          title = "Vectorization",
          txt = "Your loop is not vectorized.\nOnly 31% of vector register length is used (average across all SSE/AVX instructions).\nBy vectorizing your loop, you can lower the cost of an iteration from 113.00 to 31.25 cycles (3.62x speedup).",
        },
        {
          workaround = " - Read less array elements\n - Write less array elements\n - Provide more information to your compiler:\n  * hardcode the bounds of the corresponding 'for' loop\n",
          title = "Execution units bottlenecks",
          txt = "Performance is limited by:\n - reading data from caches/RAM (load units are a bottleneck)\n - writing data to caches/RAM (the store unit is a bottleneck)\n",
        },
      },
      potential = {
      },
    },
  },
  AVG = {
      hint = {
        {
          details = "These instructions generate more than one micro-operation and only one of them can be decoded during a cycle and the extra micro-operations increase pressure on execution units.\n - ADD: 16 occurrences\n",
          title = "Complex instructions",
          txt = "Detected COMPLEX INSTRUCTIONS.\n",
        },
        {
          workaround = "Avoid mixing data with different types. In particular, check if the type of constants is the same as array elements.",
          details = " - CLTQ: 1 occurrences\n",
          title = "Conversion instructions",
          txt = "Detected expensive conversion instructions.",
        },
        {
          title = "Type of elements and instruction set",
          txt = "No instructions are processing arithmetic or math operations on FP elements. This loop is probably writing/copying data or processing integer elements.",
        },
        {
          title = "Matching between your loop (in the source code) and the binary loop",
          txt = "The binary loop does not contain any FP arithmetical operations.\nThe binary loop is loading 1116 bytes.\nThe binary loop is storing 336 bytes.",
        },
      },
      expert = {
        {
          title = "General properties",
          txt = "nb instructions    : 426\nnb uops            : 442\nloop length        : 2530\nused x86 registers : 15\nused mmx registers : 0\nused xmm registers : 2\nused ymm registers : 0\nused zmm registers : 0\nnb stack references: 68\n",
        },
        {
          title = "Front-end",
          txt = "MACRO FUSION NOT POSSIBLE\nFIT IN UOP CACHE\nmicro-operation queue: 110.50 cycles\nfront end            : 110.50 cycles\n",
        },
        {
          title = "Back-end",
          txt = "       | P0    | P1    | P2     | P3     | P4    | P5\n--------------------------------------------------------\nuops   | 92.00 | 92.00 | 113.00 | 113.00 | 60.00 | 92.00\ncycles | 92.00 | 92.00 | 113.00 | 113.00 | 60.00 | 92.00\n\nCycles executing div or sqrt instructions: NA\n",
        },
        {
          title = "Cycles summary",
          txt = "Front-end : 110.50\nDispatch  : 113.00\nOverall L1: 113.00\n",
        },
        {
          title = "Vectorization ratios",
          txt = "INT\nall    : 0%\nload   : 0%\nstore  : 0%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 0%\nFP\nall     : 0%\nload    : 0%\nstore   : NA (no store vectorizable/vectorized instructions)\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : NA (no other vectorizable/vectorized instructions)\nINT+FP\nall     : 0%\nload    : 0%\nstore   : 0%\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 0%\n",
        },
        {
          title = "Vector efficiency ratios",
          txt = "INT\nall    : 32%\nload   : 25%\nstore  : 35%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 25%\nFP\nall     : 25%\nload    : 25%\nstore   : NA (no store vectorizable/vectorized instructions)\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : NA (no other vectorizable/vectorized instructions)\nINT+FP\nall     : 31%\nload    : 25%\nstore   : 35%\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 25%\n",
        },
        {
          title = "Cycles and memory resources usage",
          txt = "Assuming all data fit into the L1 cache, each iteration of the binary loop takes 113.00 cycles. At this rate:\n - 30% of peak load performance is reached (9.88 out of 32.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 18% of peak store performance is reached (2.97 out of 16.00 bytes stored per cycle (GB/s @ 1GHz))\n",
        },
        {
          title = "Front-end bottlenecks",
          txt = "Found no such bottlenecks.",
        },
        {
          title = "ASM code",
          txt = "In the binary file, the address of the loop is: e20f\n\nInstruction                              | Nb FU | P0   | P1   | P2   | P3   | P4 | P5   | Latency | Recip. throughput\n----------------------------------------------------------------------------------------------------------------------\nMOVSXD 0x110(%RSP),%RSI                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nMOV 0x1d8(%RSP),%R8                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOVSXD 0x1e8(%RSP),%R13                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nMOV 0x1d0(%RSP),%RDX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1b0(%RSP),%RBX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RSI,%R15                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RSI,0x50(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x160(%RSP),%RCX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RSI,%R8                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x1e0(%RSP),%RDI                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R13,%RAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R13,0x238(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADD $0x1,%EAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x198(%RSP),%R10                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RSI,%RBX                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nCLTQ                                     | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x1a8(%RSP),%R9                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RSI,%RCX                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %RDX,%RSI                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x150(%RSP),%R11                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RAX,%RSI                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x1c8(%RSP),%RCX                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD %R8,%RDI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RDI,0xf8(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x1b8(%RSP),%RDI                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R10,%R12                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL %RAX,%R12                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %R9,%R14                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x1a0(%RSP),%R8                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R13,%R14                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x130(%RSP),%RBX                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV %RCX,0x100(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nIMUL %R15,%R11                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %RSI,%RCX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD 0x120(%RSP),%R11                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nIMUL %R15,%R8                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nSUB %RDX,%RCX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RDI,%RDX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R12,%R13                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD 0x128(%RSP),%R8                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nSUB %R10,%R13                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x1c0(%RSP),%R10                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RAX,%RDX                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %R11,0x228(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x148(%RSP),%R11                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%R9,%R14,1),%R9                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nIMUL %R15,%R10                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x138(%RSP),%R10                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV %RDX,0x220(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nSUB %RDI,%RDX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x170(%RSP),%RDI                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RDX,0x218(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nIMUL %RAX,%R11                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nIMUL %R15,%RDI                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x178(%RSP),%RDI                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV %RDI,0x230(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x168(%RSP),%RDI                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RDI,%RDX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL %RAX,%RDX                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %RDX,0xe0(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nSUB %RDI,%RDX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RDX,0xd8(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x188(%RSP),%RDI                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x180(%RSP),%RDX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R15,%RDI                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x190(%RSP),%R15                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RDX,%RAX                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD %RDI,%R15                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x100(%RSP),%RDI                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R15,0x1f0(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %RAX,%R15                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSUB %RDX,%R15                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x238(%RSP),%RDX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RAX,0xd0(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nIMUL 0x158(%RSP),%RDX                    | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nMOV %R15,0xc8(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0xf0(%RSP),%R15                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x6(%RDI,%RDX,1),%RAX                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0xe8(%RSP),%RDI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%R15,%RAX,8),%RDX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0xf8(%RSP),%R15                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x6(%R15,%RSI,1),%RAX                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %RDI,%RSI                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RDI,%RAX,8),%RAX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %RAX,0xc0(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA 0x6(%R15,%RCX,1),%RAX                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nSUB 0x1d0(%RSP),%RCX                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA (%RDI,%RAX,8),%RDI                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x58(%RSP),%RAX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x6(%R15,%RCX,1),%R15                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%RSI,%R15,8),%RCX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x98(%RSP),%R15                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%RBX,%R9,1),%RSI                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD $0x2,%RAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %RBX,%R14                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RAX,0x238(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADD %R8,%R12                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R15,%R14,8),%R14                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R14,0x1f8(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA (%R15,%RSI,8),%R14                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x1a8(%RSP),%RSI                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R14,0x200(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA (%R8,%R13,1),%R14                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RSI,%RSI,1),%RAX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x78(%RSP),%RSI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nSUB %RAX,%R9                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R13,%RAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSUB 0x198(%RSP),%RAX                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD %RBX,%R9                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R15,%R9,8),%RBX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x80(%RSP),%R9                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RBX,0x208(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x228(%RSP),%RBX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RAX,%R13                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %R8,%R13                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R9,%R12,8),%R15                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x148(%RSP),%R12                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%R9,%R13,8),%R8                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R9,%R14,8),%R14                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R8,0x210(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA (%RBX,%R11,1),%R9                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R12,%R12,1),%RAX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RSI,%R9,8),%R9                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nSUB %RAX,%R11                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R11,%R13                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x218(%RSP),%R11                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %RBX,%R13                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x220(%RSP),%RBX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%RSI,%R13,8),%R8                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x70(%RSP),%RSI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA (%R10,%RBX,1),%RAX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R10,%R11,1),%RBX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nSUB 0x1b8(%RSP),%R11                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA (%RSI,%RAX,8),%R13                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RSI,%RBX,8),%R12                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R11,%RAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD %R10,%RAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RSI,%RAX,8),%R10                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R10,0x218(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0xe0(%RSP),%RAX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x230(%RSP),%R11                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x68(%RSP),%RSI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0xd8(%RSP),%R10                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %R11,%RAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RSI,%RAX,8),%RBX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R10,%RAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSUB 0x168(%RSP),%RAX                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD %R10,%R11                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD 0x230(%RSP),%RAX                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA (%RSI,%R11,8),%R11                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RSI,%RAX,8),%R10                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0xd0(%RSP),%RAX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R10,0x220(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x1f0(%RSP),%R10                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x60(%RSP),%RSI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %R10,%RAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RSI,%RAX,8),%RAX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %RAX,0x228(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %R10,%RAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0xc8(%RSP),%R10                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %R10,%RAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSUB 0x180(%RSP),%R10                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD 0x1f0(%RSP),%R10                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA (%RSI,%RAX,8),%RAX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %RAX,0x230(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV $0x1,%EAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RSI,%R10,8),%RSI                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %RSI,0x1f0(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0xc0(%RSP),%RSI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nNOPL (%RAX)                              | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nCMPL $0x1,0x1e8(%RSP)                    | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJE f659 <compute_rhs_._omp_fn.0+0x3309>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMPL $0x2,0x1e8(%RSP)                    | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJE fd1f <compute_rhs_._omp_fn.0+0x39cf>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0xb0(%RSP),%EDX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1e8(%RSP),%EDI                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nSUB $0x3,%EDX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCMP %EDI,%EDX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJE fee8 <compute_rhs_._omp_fn.0+0x3b98>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x118(%RSP),%ECX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nCMP %ECX,%EDI                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJE f48b <compute_rhs_._omp_fn.0+0x313b>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x108(%RSP),%R15D                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nTEST %R15D,%R15D                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE e20f <compute_rhs_._omp_fn.0+0x1ebf> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x1d0(%RSP),%R15                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA -0x2(%RDI),%R14D                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOVSXD %EDI,%R8                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOVSXD 0x110(%RSP),%R13                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nMOVSXD %R14D,%R12                        | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x1d8(%RSP),%R9                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL 0x158(%RSP),%R8                     | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nIMUL %R15,%R12                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0xf0(%RSP),%R11                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0xe8(%RSP),%RBX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R13,%R9                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x1a498(%RIP),%XMM13              | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nIMUL 0x160(%RSP),%R13                    | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nADD 0x1c8(%RSP),%R13                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD 0x1e0(%RSP),%R9                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nVMOVSD 0x1a47f(%RIP),%XMM12              | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nLEA (%R15,%R12,1),%RCX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R15,%RCX,1),%RDX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %R13,%R8                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA 0x30(%R11,%R8,8),%RAX                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x48(%RSP),%R8                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA (%R15,%RDX,1),%R10                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x6(%R9,%R12,1),%RSI                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA 0x6(%R9,%RDX,1),%R12                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA 0x6(%R9,%R10,1),%RDX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD %R15,%R10                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA 0x6(%R9,%RCX,1),%R13                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA 0x6(%R9,%R10,1),%R9                  | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%RBX,%RSI,8),%RDI                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RBX,%R13,8),%R14                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RBX,%R12,8),%RCX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RBX,%RDX,8),%RSI                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RBX,%R9,8),%R15                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x58(%R11,%R8,8),%R10                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nNOP                                      | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV 0xa4(%RSP),%EDI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nSUB 0x140(%RSP),%EDI                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nAND $0x7,%EDI                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJE e271 <compute_rhs_._omp_fn.0+0x1f21>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nADDL $0x1,0x1e8(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nMOV 0x1e8(%RSP),%EBX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nCMP %EBX,0xb8(%RSP)                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJLE f94f <compute_rhs_._omp_fn.0+0x35ff> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x108(%RSP),%R8D                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADDL $0x1,0x140(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nTEST %R8D,%R8D                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJG d8c0 <compute_rhs_._omp_fn.0+0x1570>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x1e8(%RSP),%R11D                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x110(%RSP),%R14D                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x140(%RSP),%EBX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x108(%RSP),%R8D                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nTEST %R8D,%R8D                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE e20f <compute_rhs_._omp_fn.0+0x1ebf> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOVSXD %EDI,%R11                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOVSXD 0x110(%RSP),%R13                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nMOV 0x1d8(%RSP),%RDI                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA -0x2(%R11),%EAX                      | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x1d0(%RSP),%RBX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOVSXD %EAX,%R14                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL 0x158(%RSP),%R11                    | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nMOV 0xf0(%RSP),%RSI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R13,%RDI                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0xe8(%RSP),%R15                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %RBX,%R14                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x1e0(%RSP),%RDI                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nVMOVSD 0x18fe9(%RIP),%XMM13              | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nIMUL 0x160(%RSP),%R13                    | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nADD 0x1c8(%RSP),%R13                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nVMOVSD 0x18fc8(%RIP),%XMM12              | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nLEA (%RBX,%R14,1),%R12                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x6(%RDI,%R12,1),%RDX                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD %RBX,%R12                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA 0x6(%RDI,%R14,1),%RCX                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD %R11,%R13                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA 0x30(%RSI,%R13,8),%R9                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x48(%RSP),%R13                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA 0x6(%RDI,%R12,1),%R11                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R15,%RCX,8),%R10                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R15,%RDX,8),%R8                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R15,%R11,8),%RDI                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x58(%RSI,%R13,8),%R13               | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nNOPL (%RAX)                              | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP e20f <compute_rhs_._omp_fn.0+0x1ebf> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nMOV 0xf0(%RSP),%R11                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x100(%RSP),%RSI                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD 0x158(%RSP),%RSI                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV 0xf8(%RSP),%RBX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1d0(%RSP),%R14                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x40(%RSP),%R10                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x38(%RSP),%RCX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x30(%R11,%RSI,8),%RAX               | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0xe8(%RSP),%R9                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD 0x48(%RSP),%RSI                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA 0x6(%R14,%RBX,1),%RDX                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA 0x6(%RBX,%R10,1),%RDI                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA 0x6(%RBX,%RCX,1),%R8                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R9,%RDX,8),%R12                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R9,%RDI,8),%R15                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R9,%R8,8),%R13                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x58(%R11,%RSI,8),%RSI               | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nNOPL (%RAX)                              | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP e20f <compute_rhs_._omp_fn.0+0x1ebf> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nMOV 0x108(%RSP),%EDX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOVL $0x1,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADDL $0x1,0x110(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nADDL $0x1,0x140(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nTEST %EDX,%EDX                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJG d8c0 <compute_rhs_._omp_fn.0+0x1570>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMP $0x1,%EDI                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJE fb37 <compute_rhs_._omp_fn.0+0x37e7>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMP $0x2,%EDI                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJE faf5 <compute_rhs_._omp_fn.0+0x37a5>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMP $0x3,%EDI                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJE fab3 <compute_rhs_._omp_fn.0+0x3763>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMP $0x4,%EDI                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJE fa71 <compute_rhs_._omp_fn.0+0x3721>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMP $0x5,%EDI                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJE fa2f <compute_rhs_._omp_fn.0+0x36df>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMP $0x6,%EDI                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJE f9ed <compute_rhs_._omp_fn.0+0x369d>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMPL $0x2,0xb8(%RSP)                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOVL $0x2,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJG e23e <compute_rhs_._omp_fn.0+0x1eee>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nADDL $0x1,0x110(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nMOVL $0x1,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADDL $0x1,0x140(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nCMPL $0,0x108(%RSP)                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJG d8c0 <compute_rhs_._omp_fn.0+0x1570>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMPL $0x2,0xb8(%RSP)                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOVL $0x2,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJG e23e <compute_rhs_._omp_fn.0+0x1eee>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nADDL $0x1,0x110(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nMOVL $0x1,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADDL $0x1,0x140(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nCMPL $0,0x108(%RSP)                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJG d8c0 <compute_rhs_._omp_fn.0+0x1570>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMPL $0x2,0xb8(%RSP)                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOVL $0x2,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJG e23e <compute_rhs_._omp_fn.0+0x1eee>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nADDL $0x1,0x110(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nMOVL $0x1,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADDL $0x1,0x140(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nCMPL $0,0x108(%RSP)                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJG d8c0 <compute_rhs_._omp_fn.0+0x1570>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMPL $0x2,0xb8(%RSP)                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOVL $0x2,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJG e23e <compute_rhs_._omp_fn.0+0x1eee>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nADDL $0x1,0x110(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nMOVL $0x1,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADDL $0x1,0x140(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nCMPL $0,0x108(%RSP)                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJG d8c0 <compute_rhs_._omp_fn.0+0x1570>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMPL $0x2,0xb8(%RSP)                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOVL $0x2,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJG e23e <compute_rhs_._omp_fn.0+0x1eee>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nADDL $0x1,0x110(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nMOVL $0x1,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADDL $0x1,0x140(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nCMPL $0,0x108(%RSP)                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJG d8c0 <compute_rhs_._omp_fn.0+0x1570>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nCMPL $0x2,0xb8(%RSP)                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOVL $0x2,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJG e23e <compute_rhs_._omp_fn.0+0x1eee>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nADDL $0x1,0x110(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nMOVL $0x1,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADDL $0x1,0x140(%RSP)                    | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nCMPL $0,0x108(%RSP)                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJG d8c0 <compute_rhs_._omp_fn.0+0x1570>  | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x110(%RSP),%R14D                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV $0x1,%R11D                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x140(%RSP),%EBX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nJMP e288 <compute_rhs_._omp_fn.0+0x1f38> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nMOV 0x50(%RSP),%R10                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1d8(%RSP),%R15                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x1c8(%RSP),%R8                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x40(%RSP),%RDI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0xf0(%RSP),%R13                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R10,%R15                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x1d0(%RSP),%RDX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL 0x160(%RSP),%R10                    | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nADD 0x1e0(%RSP),%R15                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV 0x38(%RSP),%R9                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0xe8(%RSP),%R14                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x6(%RDI,%R15,1),%RCX                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD %R10,%R8                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD 0x30(%RSP),%R8                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV 0x28(%RSP),%RDI                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x6(%RDX,%R15,1),%R11                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA 0x6(%R15,%R9,1),%R12                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA 0x30(%R13,%R8,8),%RAX                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x48(%RSP),%R8                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA 0x6(%R15,%RDI,1),%R15                | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R14,%RCX,8),%RBX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R14,%R11,8),%RSI                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R14,%R12,8),%R10                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R14,%R15,8),%RCX                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x58(%R13,%R8,8),%R8                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nNOPL (%RAX,%RAX,1)                       | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV %R13D,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJMP e20f <compute_rhs_._omp_fn.0+0x1ebf> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nMOV 0x108(%RSP),%EAX                     | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nTEST %EAX,%EAX                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE e20f <compute_rhs_._omp_fn.0+0x1ebf> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOVSXD 0x110(%RSP),%R12                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nMOV 0x1d8(%RSP),%R9                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOVSXD 0x1e8(%RSP),%R14                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nIMUL 0x158(%RSP),%R14                    | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nMOV 0x20(%RSP),%RBX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R12,%R9                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0xf0(%RSP),%R15                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL 0x160(%RSP),%R12                    | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nADD 0x1e0(%RSP),%R9                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nADD 0x1c8(%RSP),%R12                     | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV 0x18(%RSP),%RCX                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x10(%RSP),%R11                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x6(%R9,%RBX,1),%RSI                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV 0x8(%RSP),%RBX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nADD %R14,%R12                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0xe8(%RSP),%R8                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0x30(%R15,%R12,8),%R10               | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD 0x48(%RSP),%R12                      | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nVMOVSD 0x18565(%RIP),%XMM13              | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nLEA 0x6(%R9,%RCX,1),%RDX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nVMOVSD 0x18560(%RIP),%XMM12              | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nLEA 0x6(%R9,%R11,1),%RAX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA 0x6(%R9,%RBX,1),%R9                  | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R8,%RSI,8),%RDI                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R8,%RDX,8),%R13                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R8,%RAX,8),%R14                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%R8,%R9,8),%RSI                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0x58(%R15,%R12,8),%R12               | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nNOP                                      | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP e20f <compute_rhs_._omp_fn.0+0x1ebf> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nMOV %R11D,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %R14D,0x110(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %EBX,0x140(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJMP e23e <compute_rhs_._omp_fn.0+0x1eee> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nMOV %R11D,0x1e8(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %R14D,0x110(%RSP)                    | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %EBX,0x140(%RSP)                     | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJMP d8c0 <compute_rhs_._omp_fn.0+0x1570> | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\n",
        },
      },
      header = {
        "0% of peak computational performance is used (0.00 out of 2.00 FLOP per cycle (GFLOPS @ 1GHz))",
      },
      brief = {
      },
      gain = {
        {
          workaround = " - Try to reorganize arrays of structures to structures of arrays\n - Consider to permute loops (see vectorization gain report)\n - To reference allocatable arrays, use \"allocatable\" instead of \"pointer\" pointers or qualify them with the \"contiguous\" attribute (Fortran 2008)\n - For structures, limit to one indirection. For example, use a_b%c instead of a%b%c with a_b set to a%b before this loop\n",
          title = "Code clean check",
          txt = "Detected a slowdown caused by scalar integer instructions (typically used for address computation).\nBy removing them, you can lower the cost of an iteration from 113.00 to 29.00 cycles (3.90x speedup).",
        },
        {
          workaround = " - Try another compiler or update/tune your current one:\n  * recompile with fassociative-math (included in Ofast or ffast-math) to extend loop vectorization to FP reductions.\n - Remove inter-iterations dependences from your loop and make it unit-stride:\n  * If your arrays have 2 or more dimensions, check whether elements are accessed contiguously and, otherwise, try to permute loops accordingly:\nFortran storage order is column-major: do i do j a(i,j) = b(i,j) (slow, non stride 1) => do i do j a(j,i) = b(i,j) (fast, stride 1)\n  * If your loop streams arrays of structures (AoS), try to use structures of arrays instead (SoA):\ndo i a(i)%x = b(i)%x (slow, non stride 1) => do i a%x(i) = b%x(i) (fast, stride 1)\n",
          details = "All SSE/AVX instructions are used in scalar version (process only one data element in vector registers).\nSince your execution units are vector units, only a vectorized loop can use their full power.\n",
          title = "Vectorization",
          txt = "Your loop is not vectorized.\nOnly 31% of vector register length is used (average across all SSE/AVX instructions).\nBy vectorizing your loop, you can lower the cost of an iteration from 113.00 to 31.25 cycles (3.62x speedup).",
        },
        {
          workaround = " - Read less array elements\n - Write less array elements\n - Provide more information to your compiler:\n  * hardcode the bounds of the corresponding 'for' loop\n",
          title = "Execution units bottlenecks",
          txt = "Performance is limited by:\n - reading data from caches/RAM (load units are a bottleneck)\n - writing data to caches/RAM (the store unit is a bottleneck)\n",
        },
      },
      potential = {
      },
    },
  common = {
    header = {
      "The loop is defined in /users/user2210/NPB3.4-MZ-MPI/BT-MZ/rhs.f90:182-192,199,208,215,229,235-277.\n",
      "Warnings:\n - Non-innermost loop: analyzing only self part (ignoring child loops).\n - Ignoring paths for analysis\n - Failed to get the number of paths\n - RecMII not computed since number of paths is unknown or > max_paths\n - Streams not analyzed since number of paths is unknown or > max_paths\n",
    },
  },
}
