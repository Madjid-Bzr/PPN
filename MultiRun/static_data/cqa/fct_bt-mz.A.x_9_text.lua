_cqa_text_report = {
  paths = {
    {
      hint = {
        {
          details = "Calling (and then returning from) a function prevents many compiler optimizations (like vectorization), breaks control flow (which reduces pipeline performance) and executes extra instructions to save/restore the registers used inside it, which is very expensive (dozens of cycles). Consider to inline small functions.\n - exact_solution: 2 occurrences\n - unknown: 4 occurrences\n",
          title = "CALL instructions",
          txt = "Detected function call instructions.\n",
        },
        {
          details = "These instructions generate more than one micro-operation and only one of them can be decoded during a cycle and the extra micro-operations increase pressure on execution units.\n - ADD: 2 occurrences\n - IDIV: 4 occurrences\n - RET: 1 occurrences\n - VCVTSI2SD: 7 occurrences\n - VEXTRACTF128: 2 occurrences\n - VZEROUPPER: 5 occurrences\n",
          title = "Complex instructions",
          txt = "Detected COMPLEX INSTRUCTIONS.\n",
        },
        {
          workaround = "Use vector aligned instructions:\n 1) The GNU Fortran compiler does not support allocation alignment and does not feature directives to benefit from aligned data.\n 2) Use another compiler or locally use C code (for instance via libraries)\n",
          details = " - VEXTRACTF128: 2 occurrences\n - VMOVUPS: 2 occurrences\n",
          title = "Vector unaligned load/store instructions",
          txt = "Detected 4 optimal vector unaligned load/store instructions.\n",
        },
        {
          workaround = "Avoid mixing data with different types. In particular, check if the type of constants is the same as array elements.",
          details = " - CLTD: 4 occurrences\n - CLTQ: 4 occurrences\n - VCVTSI2SD (INT32/64 to FP64, scalar): 7 occurrences\n",
          title = "Conversion instructions",
          txt = "Detected expensive conversion instructions.",
        },
        {
          title = "Type of elements and instruction set",
          txt = "4 SSE or AVX instructions are processing arithmetic or math operations on double precision FP elements in scalar mode (one at a time).\n",
        },
        {
          title = "Matching between your function (in the source code) and the binary function",
          txt = "The binary function is composed of 4 FP arithmetical operations:\n - 4: multiply\nThe binary function is loading 824 bytes (103 double precision FP elements).\nThe binary function is storing 540 bytes (67 double precision FP elements).",
        },
        {
          title = "Arithmetic intensity",
          txt = "Arithmetic intensity is 0.00 FP operations per loaded or stored byte.",
        },
      },
      expert = {
        {
          title = "General properties",
          txt = "nb instructions    : 424\nnb uops            : 493\nloop length        : 2051\nused x86 registers : 16\nused mmx registers : 0\nused xmm registers : 15\nused ymm registers : 2\nused zmm registers : 0\nnb stack references: 25\n",
        },
        {
          title = "Front-end",
          txt = "MACRO FUSION NOT POSSIBLE\nFIT IN UOP CACHE\nmicro-operation queue: 124.25 cycles\nfront end            : 124.25 cycles\n",
        },
        {
          title = "Back-end",
          txt = "       | P0    | P1    | P2     | P3     | P4    | P5\n--------------------------------------------------------\nuops   | 80.67 | 80.67 | 105.00 | 105.00 | 90.00 | 80.67\ncycles | 80.67 | 80.67 | 105.00 | 105.00 | 90.00 | 80.67\n\nCycles executing div or sqrt instructions: 44.00-72.00\n",
        },
        {
          title = "Cycles summary",
          txt = "Front-end : 124.25\nDispatch  : 105.00\nDIV/SQRT  : 44.00-72.00\nOverall L1: 124.25\n",
        },
        {
          title = "Vectorization ratios",
          txt = "INT\nall    : 4%\nload   : 0%\nstore  : 0%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 9%\nFP\nall     : 31%\nload    : 25%\nstore   : 16%\nmul     : 0%\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 100%\nINT+FP\nall     : 13%\nload    : 12%\nstore   : 5%\nmul     : 0%\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: 0%\nother   : 24%\n",
        },
        {
          title = "Vector efficiency ratios",
          txt = "INT\nall    : 34%\nload   : 25%\nstore  : 34%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 33%\nFP\nall     : 35%\nload    : 38%\nstore   : 29%\nmul     : 25%\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 50%\nINT+FP\nall     : 34%\nload    : 31%\nstore   : 33%\nmul     : 25%\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: 25%\nother   : 38%\n",
        },
        {
          title = "Cycles and memory resources usage",
          txt = "Assuming all data fit into the L1 cache, each call to the function takes 124.25 cycles. At this rate:\n - 20% of peak load performance is reached (6.63 out of 32.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 27% of peak store performance is reached (4.35 out of 16.00 bytes stored per cycle (GB/s @ 1GHz))\n",
        },
        {
          title = "Front-end bottlenecks",
          txt = "Performance is limited by instruction throughput (loading/decoding program instructions to execution core) (front-end is a bottleneck).\n\nBy removing all these bottlenecks, you can lower the cost of an iteration from 124.25 to 105.00 cycles (1.18x speedup).\n",
        },
        {
          title = "ASM code",
          txt = "In the binary file, the address of the function is: 4730\n\nInstruction                               | Nb FU | P0   | P1   | P2   | P3   | P4 | P5   | Latency | Recip. throughput\n-----------------------------------------------------------------------------------------------------------------------\nPUSH %RBP                                 | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %RSP,%RBP                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nPUSH %R15                                 | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %RDI,%R15                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nPUSH %R14                                 | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nPUSH %R13                                 | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nPUSH %R12                                 | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nPUSH %RBX                                 | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nAND $-0x20,%RSP                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSUB $0x200,%RSP                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x10(%RDI),%RSI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x18(%RDI),%RBX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x28(%RDI),%RDX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x20(%RDI),%RCX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x30(%RDI),%RAX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%RSI),%EDI                           | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%RBX),%R12D                          | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RDX,0x40(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %RCX,0x48(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %RAX,0x30(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %EDI,0x3c(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nCALL 2300 <@plt_start@+0x2e0>             | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nMOV %EAX,0x20(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nCALL 22a0 <@plt_start@+0x280>             | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nMOV %EAX,0x2c(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nTEST %R12D,%R12D                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE 5198 <initialize_._omp_fn.0+0xa68>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x3c(%RSP),%EAX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nTEST %EAX,%EAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE 47c8 <initialize_._omp_fn.0+0x98>     | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nIMUL %R12D,%EAX                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nXOR %EDX,%EDX                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nDIVL 0x20(%RSP)\nMOV %EAX,%R8D                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCMP %EDX,0x2c(%RSP)                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJB 68fd <initialize_._omp_fn.0+0x21cd>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x2c(%RSP),%EAX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R8D,%EAX                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD %EDX,%EAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R8,%RAX,1),%R9D                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nCMP %R9D,%EAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJB 4ae5 <initialize_._omp_fn.0+0x3b5>     | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nVMOVSD 0x23be8(%RIP),%XMM0                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nMOVQ $0,0xa8(%RSP)                        | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVSD %XMM0,0x98(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x3c(%RSP),%EAX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nTEST %EAX,%EAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE 63a5 <initialize_._omp_fn.0+0x1c75>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nIMUL %R12D,%EAX                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nXOR %EDX,%EDX                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nDIVL 0x20(%RSP)\nMOV %EAX,%ECX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCMP %EDX,0x2c(%RSP)                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJB 6928 <initialize_._omp_fn.0+0x21f8>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x2c(%RSP),%EAX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %ECX,%EAX                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD %EDX,%EAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RCX,%RAX,1),%EDI                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nCMP %EDI,%EAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJAE 63a5 <initialize_._omp_fn.0+0x1c75>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nVXORPD %XMM5,%XMM5,%XMM5                  | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nLEA -0x1(%RCX),%R12D                      | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nXOR %EDX,%EDX                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nXOR %EBX,%EBX                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nDIVL 0x3c(%RSP)\nAND $0x1,%ECX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R12D,0x70(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA 0xc0(%RSP),%R9                        | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R9,0x80(%RSP)                        | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA 0xb8(%RSP),%R14                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0xb0(%RSP),%R13                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0xa8(%RSP),%R12                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nVCVTSI2SD %EAX,%XMM5,%XMM11               | 2     | 1    | 1    | 0    | 0    | 0  | 0    | 4       | 1.50\nMOV %EAX,0x68(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nCLTQ                                      | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %EDX,%R8D                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RAX,0x90(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVSD %XMM11,0x88(%RSP)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJNE 49f7 <initialize_._omp_fn.0+0x2c7>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nVXORPD %XMM14,%XMM14,%XMM14               | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV %EDX,0x78(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %R13,%RSI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R9,%RCX                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVCVTSI2SD %EDX,%XMM14,%XMM9               | 2     | 1    | 1    | 0    | 0    | 0  | 0    | 4       | 1.50\nMOV %R12,%RDI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVMULSD 0x2809b(%RIP),%XMM11,%XMM4         | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nMOV %R14,%RDX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVMULSD 0x28098(%RIP),%XMM9,%XMM15         | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMOVSD %XMM4,0xb8(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVSD %XMM15,0xb0(%RSP)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nCALL 7120 <exact_solution_>               | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nMOVSXD 0x78(%RSP),%RSI                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nMOV 0x90(%RSP),%R11                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL 0x40(%RSP),%R11                      | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nADD 0x30(%RSP),%R11                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV %RSI,%R8                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV (%R15),%R10                           | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL 0x48(%RSP),%RSI                      | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nADD $0x1,%R8D                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVMOVAPD 0xc0(%RSP),%XMM10                 | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVAPD 0xc0(%RSP),%YMM3                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 4       | 1\nVMOVSD 0xe0(%RSP),%XMM2                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nADD %RSI,%R11                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVMOVUPS %XMM10,0x8(%R10,%R11,8)           | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVEXTRACTF128 $0x1,%YMM3,0x18(%R10,%R11,8) | 2     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 2       | 1\nVMOVSD %XMM2,0x28(%R10,%R11,8)            | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nCMP 0x3c(%RSP),%R8D                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJGE 693e <initialize_._omp_fn.0+0x220e>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV $0x1,%EBX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVZEROUPPER                                | 4     | 0    | 0    | 0    | 0    | 0  | 0    | 2       | 1\nJMP 49f7 <initialize_._omp_fn.0+0x2c7>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nXOR %EDX,%EDX                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV 0x8(%R15),%RSI                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nDIVL 0x3c(%RSP)\nMOV (%R15),%RCX                           | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%RSI),%R9D                           | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %EDX,0x80(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %EDX,%EDI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %EAX,0x88(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %EAX,0x90(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nTEST %R9D,%R9D                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE 6996 <initialize_._omp_fn.0+0x2266>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nLEA -0x1(%R8),%R13D                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R9D,%EBX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R15,0x78(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %R9D,%R12D                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R13D,0x28(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x40(%RSP),%R15                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nSHR $0x2,%EBX                             | 1     | 0.50 | 0    | 0    | 0    | 0  | 0.50 | 1       | 0.50\nXOR %R8D,%R8D                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOVSXD 0x88(%RSP),%R13                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nLEA (%RBX,%RBX,4),%RBX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nAND $-0x4,%R12D                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RSI,0x70(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x30(%RSP),%R11                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA -0x1(%R9),%R14D                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nSAL $0x5,%RBX                             | 1     | 0.50 | 0    | 0    | 0    | 0  | 0.50 | 1       | 0.50\nVMOVSD 0x2385a(%RIP),%XMM2                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVAPD 0x238da(%RIP),%YMM4               | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 4       | 1\nVMOVSD %XMM2,0x98(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nNOP                                       | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV 0x10(%R15),%R13                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x18(%R15),%R14                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x8(%R15),%R11                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nVMOVSD 0x98(%RSP),%XMM5                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nMOV (%R13),%EBX                           | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nVMOVSD %XMM5,0xa8(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV (%R14),%R12D                          | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%R11),%R13D                          | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %EBX,0x3c(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nTEST %R12D,%R12D                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE 6893 <initialize_._omp_fn.0+0x2163>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nVZEROUPPER                                | 4     | 0    | 0    | 0    | 0    | 0  | 0    | 2       | 1\nMOV 0x3c(%RSP),%ESI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nTEST %ESI,%ESI                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE 51bb <initialize_._omp_fn.0+0xa8b>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV %R12D,%EAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nXOR %EDX,%EDX                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nIMUL %ESI,%EAX                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nDIVL 0x20(%RSP)\nMOV %EAX,%R10D                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCMP %EDX,0x2c(%RSP)                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJB 68f2 <initialize_._omp_fn.0+0x21c2>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x2c(%RSP),%EAX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R10D,%EAX                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD %EDX,%EAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R10,%RAX,1),%R12D                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nCMP %R12D,%EAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJAE 51bb <initialize_._omp_fn.0+0xa8b>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nVXORPD %XMM11,%XMM11,%XMM11               | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nLEA -0x1(%R10),%EDI                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nXOR %EDX,%EDX                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nXOR %EBX,%EBX                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nDIVL 0x3c(%RSP)\nAND $0x1,%R10D                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %EDI,0x60(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA 0xc0(%RSP),%R9                        | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R9,0x78(%RSP)                        | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA 0xb8(%RSP),%R14                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0xa8(%RSP),%R12                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %EAX,0x68(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOVSXD 0x68(%RSP),%R11                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nLEA -0x1(%R13),%EAX                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %EDX,%R8D                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA 0xb0(%RSP),%R13                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nCLTQ                                      | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RAX,%RAX,4),%RCX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %RCX,0x80(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVCVTSI2SD %R11D,%XMM11,%XMM0              | 2     | 1    | 1    | 0    | 0    | 0  | 0    | 4       | 1.50\nMOV %R11,0x90(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVSD %XMM0,0x88(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJNE 50a5 <initialize_._omp_fn.0+0x975>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nVXORPD %XMM14,%XMM14,%XMM14               | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV %EDX,0x70(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %R13,%RSI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R9,%RCX                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVCVTSI2SD %EDX,%XMM14,%XMM9               | 2     | 1    | 1    | 0    | 0    | 0  | 0    | 4       | 1.50\nMOV %R12,%RDI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVMULSD 0x279f8(%RIP),%XMM0,%XMM4          | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nMOV %R14,%RDX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVMULSD 0x279f5(%RIP),%XMM9,%XMM15         | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMOVSD %XMM4,0xb8(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVSD %XMM15,0xb0(%RSP)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nCALL 7120 <exact_solution_>               | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nMOVSXD 0x70(%RSP),%RSI                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nMOV 0x90(%RSP),%RBX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL 0x40(%RSP),%RBX                      | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nADD 0x30(%RSP),%RBX                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV %RSI,%R8                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV (%R15),%R10                           | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL 0x48(%RSP),%RSI                      | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nADD $0x1,%R8D                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVMOVAPD 0xc0(%RSP),%XMM10                 | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVAPD 0xc0(%RSP),%YMM3                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 4       | 1\nVMOVSD 0xe0(%RSP),%XMM2                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nADD %RSI,%RBX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD 0x80(%RSP),%RBX                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nVMOVUPS %XMM10,0x8(%R10,%RBX,8)           | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVEXTRACTF128 $0x1,%YMM3,0x18(%R10,%RBX,8) | 2     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 2       | 1\nVMOVSD %XMM2,0x28(%R10,%RBX,8)            | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nCMP 0x3c(%RSP),%R8D                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJGE 696a <initialize_._omp_fn.0+0x223a>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV $0x1,%EBX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVZEROUPPER                                | 4     | 0    | 0    | 0    | 0    | 0  | 0    | 2       | 1\nJMP 50a5 <initialize_._omp_fn.0+0x975>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nVMOVSD 0x23218(%RIP),%XMM6                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVSD %XMM6,0x98(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVSD 0x98(%RSP),%XMM1                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVSD %XMM1,0xa8(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nCALL 22f0 <@plt_start@+0x2d0>             | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nMOV 0x18(%R15),%R14                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOVQ $0,0xb0(%RSP)                        | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV (%R14),%EAX                           | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nCLTD                                      | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 1       | 1\nIDIVL 0x20(%RSP)                          | 10    | 3    | 3    | 0.50 | 0.50 | 0  | 3    | 20-27   | 11-18\nCMP 0x2c(%RSP),%EDX                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJG 6932 <initialize_._omp_fn.0+0x2202>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV %EDX,%R12D                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %EAX,%R13D                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x2c(%RSP),%EBX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R13D,%EBX                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%RBX,%R12,1),%R11D                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %R11D,%R13D                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R11D,0x78(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %R13D,0x60(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nCMP %R13D,%R11D                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJGE 5632 <initialize_._omp_fn.0+0xf02>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x30(%RSP),%R10                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0xc0(%RSP),%RCX                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOVSXD %R11D,%RSI                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL 0x40(%RSP),%RSI                      | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nMOV %RCX,0x88(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA 0x1(%R10,%RSI,1),%RDX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %RDX,0x68(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nNOPW (%RAX,%RAX,1)                        | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV 0x18(%R15),%R13                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%R13),%EAX                           | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nCLTD                                      | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 1       | 1\nIDIVL 0x20(%RSP)                          | 10    | 3    | 3    | 0.50 | 0.50 | 0  | 3    | 20-27   | 11-18\nMOV 0x10(%R15),%R14                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nVMOVSD 0x98(%RSP),%XMM7                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVSD %XMM7,0xb0(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV (%R14),%R9D                           | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nCMP 0x2c(%RSP),%EDX                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJG 6914 <initialize_._omp_fn.0+0x21e4>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x2c(%RSP),%R11D                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %EAX,%R11D                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R11,%RDX,1),%R8D                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %R8D,%EAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R8D,0x78(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %EAX,0x60(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nCMP %EAX,%R8D                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJGE 5aa2 <initialize_._omp_fn.0+0x1372>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nLEA -0x1(%R9),%EAX                        | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOVSXD %R8D,%RSI                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL 0x40(%RSP),%RSI                      | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nCLTQ                                      | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 1       | 0.50\nIMUL 0x48(%RSP),%RAX                      | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nADD 0x30(%RSP),%RAX                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA 0xc0(%RSP),%R10                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R10,0x88(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADD %RSI,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RAX,0x68(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nNOPL (%RAX)                               | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nCALL 22f0 <@plt_start@+0x2d0>             | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nMOV 0x10(%R15),%R13                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOVQ $0,0xb8(%RSP)                        | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV (%R13),%EAX                           | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nCLTD                                      | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 1       | 1\nIDIVL 0x20(%RSP)                          | 10    | 3    | 3    | 0.50 | 0.50 | 0  | 3    | 20-27   | 11-18\nCMP 0x2c(%RSP),%EDX                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJG 6908 <initialize_._omp_fn.0+0x21d8>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV %EDX,%R9D                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %EAX,%R14D                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x2c(%RSP),%R11D                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R14D,%R11D                          | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R11,%R9,1),%R8D                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %R8D,%R14D                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R8D,0x78(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %R14D,0x60(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nCMP %R14D,%R8D                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJGE 5f1b <initialize_._omp_fn.0+0x17eb>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x30(%RSP),%RAX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0xc0(%RSP),%R10                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOVSXD %R8D,%RDX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL 0x48(%RSP),%RDX                      | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nMOV %R10,0x88(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA 0x1(%RAX,%RDX,1),%RSI                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %RSI,0x68(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nNOPL (%RAX,%RAX,1)                        | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV 0x10(%R15),%R13                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%R13),%EAX                           | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nCLTD                                      | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 1       | 1\nIDIVL 0x20(%RSP)                          | 10    | 3    | 3    | 0.50 | 0.50 | 0  | 3    | 20-27   | 11-18\nMOV 0x18(%R15),%R14                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nVMOVSD 0x98(%RSP),%XMM3                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVSD %XMM3,0xb8(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV (%R14),%EDI                           | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nCMP 0x2c(%RSP),%EDX                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJG 691e <initialize_._omp_fn.0+0x21ee>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x2c(%RSP),%R9D                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %EAX,%R9D                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R9,%RDX,1),%R11D                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %R11D,%EAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R11D,0x80(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %EAX,0x68(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nCMP %EAX,%R11D                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJGE 6396 <initialize_._omp_fn.0+0x1c66>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nLEA -0x1(%RDI),%EAX                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x30(%RSP),%R8                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOVSXD %R11D,%R10                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL 0x48(%RSP),%R10                      | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nCLTQ                                      | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 1       | 0.50\nIMUL 0x40(%RSP),%RAX                      | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nLEA 0xc0(%RSP),%RCX                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %RCX,0x90(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA 0x1(%R8,%RAX,1),%RSI                  | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD %RSI,%R10                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R10,0x70(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nNOPL (%RAX)                               | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nLEA -0x28(%RBP),%RSP                      | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nPOP %RBX                                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nPOP %R12                                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nPOP %R13                                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nPOP %R14                                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nPOP %R15                                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nPOP %RBP                                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nRET                                       | 2     | 0    | 0    | 0.50 | 0.50 | 0  | 1    | 0       | 2\nMOV 0x8(%R15),%RBX                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nVMOVSD 0x98(%RSP),%XMM13                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVSD %XMM13,0xa8(%RSP)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV (%RBX),%R13D                          | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nJMP 4e6e <initialize_._omp_fn.0+0x73e>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nMOV 0x78(%RSP),%R15                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x70(%RSP),%RSI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nVZEROUPPER                                | 4     | 0    | 0    | 0    | 0    | 0  | 0    | 2       | 1\nMOV 0x88(%RSP),%R10D                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nVXORPD %XMM7,%XMM7,%XMM7                  | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOVL $0,0x24(%RSP)                        | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA 0xc0(%RSP),%R14                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x80(%RSP),%EAX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R15,0x88(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVCVTSI2SD %R10D,%XMM7,%XMM5               | 2     | 1    | 1    | 0    | 0    | 0  | 0    | 4       | 1.50\nMOV %R10D,0x1c(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %EAX,0x38(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVSD %XMM5,0x10(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nNOPW %CS:(%RAX,%RAX,1)                    | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nNOP                                       | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV 0x88(%RSP),%R15                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOVQ $0,0xa8(%RSP)                        | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x18(%R15),%R14                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x10(%R15),%RSI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%R14),%R12D                          | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%RSI),%R10D                          | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R10D,0x3c(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nTEST %R12D,%R12D                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJG 47e5 <initialize_._omp_fn.0+0xb5>      | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nJMP 51a9 <initialize_._omp_fn.0+0xa79>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nNOPL (%RAX)                               | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nVZEROUPPER                                | 4     | 0    | 0    | 0    | 0    | 0  | 0    | 2       | 1\nJMP 51bb <initialize_._omp_fn.0+0xa8b>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nADD $0x1,%R10D                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nXOR %EDX,%EDX                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP 4e93 <initialize_._omp_fn.0+0x763>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nADD $0x1,%R8D                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nXOR %EDX,%EDX                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP 47b1 <initialize_._omp_fn.0+0x81>     | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nLEA 0x1(%RAX),%R14D                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nXOR %R9D,%R9D                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP 5ad0 <initialize_._omp_fn.0+0x13a0>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nADD $0x1,%EAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nXOR %EDX,%EDX                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP 5655 <initialize_._omp_fn.0+0xf25>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nADD $0x1,%EAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nXOR %EDX,%EDX                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP 5f3e <initialize_._omp_fn.0+0x180e>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nADD $0x1,%ECX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nXOR %EDX,%EDX                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP 4807 <initialize_._omp_fn.0+0xd7>     | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nLEA 0x1(%RAX),%R13D                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nXOR %R12D,%R12D                           | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP 51e8 <initialize_._omp_fn.0+0xab8>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nADDL $0x1,0x68(%RSP)                      | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nVXORPD %XMM8,%XMM8,%XMM8                  | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nXOR %R8D,%R8D                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOVSXD 0x68(%RSP),%RCX                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nVCVTSI2SD %ECX,%XMM8,%XMM6                | 2     | 1    | 1    | 0    | 0    | 0  | 0    | 4       | 1.50\nMOV %RCX,0x90(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVSD %XMM6,0x88(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJMP 4926 <initialize_._omp_fn.0+0x1f6>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nADDL $0x1,0x68(%RSP)                      | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nVXORPD %XMM8,%XMM8,%XMM8                  | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nXOR %R8D,%R8D                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOVSXD 0x68(%RSP),%RDX                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nVCVTSI2SD %EDX,%XMM8,%XMM6                | 2     | 1    | 1    | 0    | 0    | 0  | 0    | 4       | 1.50\nMOV %RDX,0x90(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVSD %XMM6,0x88(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJMP 4fd1 <initialize_._omp_fn.0+0x8a1>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nVMOVSD 0x21a1a(%RIP),%XMM1                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nLEA -0x1(%R8),%R10D                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R10D,0x28(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVSD %XMM1,0x98(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJMP 63e7 <initialize_._omp_fn.0+0x1cb7>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nNOPW %CS:(%RAX,%RAX,1)                    | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\n",
        },
      },
      header = {
        "Warnings:\n - The number of fused uops of the instruction [DIVL	0x20(%RSP)] is unknown\n - The number of fused uops of the instruction [DIVL	0x3c(%RSP)] is unknown\n - Detected a function call instruction: ignoring called function instructions.\nRerun with --follow-calls=append to include them to analysis  or with --follow-calls=inline to simulate inlining.\n",
        "0% of peak computational performance is used (0.03 out of 8.00 FLOP per cycle (GFLOPS @ 1GHz))",
      },
      brief = {
      },
      gain = {
        {
          workaround = " - Try to reorganize arrays of structures to structures of arrays\n - Consider to permute loops (see vectorization gain report)\n - To reference allocatable arrays, use \"allocatable\" instead of \"pointer\" pointers or qualify them with the \"contiguous\" attribute (Fortran 2008)\n - For structures, limit to one indirection. For example, use a_b%c instead of a%b%c with a_b set to a%b before this function\n",
          title = "Code clean check",
          txt = "Detected a slowdown caused by scalar integer instructions (typically used for address computation).\nBy removing them, you can lower the cost of an iteration from 124.25 to 32.00 cycles (3.88x speedup).",
        },
        {
          workaround = " - Try another compiler or update/tune your current one\n - Make array accesses unit-stride:\n  * If your function streams arrays of structures (AoS), try to use structures of arrays instead (SoA):\ndo i a(i)%x = b(i)%x (slow, non stride 1) => do i a%x(i) = b%x(i) (fast, stride 1)\n",
          details = "13% of SSE/AVX instructions are used in vector version (process two or more data elements in vector registers):\n - 12% of SSE/AVX loads are used in vector version.\n - 5% of SSE/AVX stores are used in vector version.\n - 0% of SSE/AVX multiply instructions are used in vector version.\n - 0% of SSE/AVX nil are used in vector version.\n - 24% of SSE/AVX instructions that are not load, store, addition, subtraction nor multiply instructions are used in vector version.\nSince your execution units are vector units, only a fully vectorized function can use their full power.\n",
          title = "Vectorization",
          txt = "Your function is not vectorized.\nOnly 34% of vector register length is used (average across all SSE/AVX instructions).\nBy fully vectorizing your function, you can lower the cost of an iteration from 124.25 to 95.31 cycles (1.30x speedup).",
        },
        {
          title = "Execution units bottlenecks",
          txt = "Found no such bottlenecks but see expert reports for more complex bottlenecks.",
        },
      },
      potential = {
        {
          title = "Expensive FP math instructions/calls",
          txt = "Detected performance impact from expensive FP math instructions/calls.\nBy removing/reexpressing them, you can lower the cost of an iteration from 124.25 to 116.75 cycles (1.06x speedup).",
        },
      },
    },
  },
  AVG = {
      hint = {
        {
          details = "Calling (and then returning from) a function prevents many compiler optimizations (like vectorization), breaks control flow (which reduces pipeline performance) and executes extra instructions to save/restore the registers used inside it, which is very expensive (dozens of cycles). Consider to inline small functions.\n - exact_solution: 2 occurrences\n - unknown: 4 occurrences\n",
          title = "CALL instructions",
          txt = "Detected function call instructions.\n",
        },
        {
          details = "These instructions generate more than one micro-operation and only one of them can be decoded during a cycle and the extra micro-operations increase pressure on execution units.\n - ADD: 2 occurrences\n - IDIV: 4 occurrences\n - RET: 1 occurrences\n - VCVTSI2SD: 7 occurrences\n - VEXTRACTF128: 2 occurrences\n - VZEROUPPER: 5 occurrences\n",
          title = "Complex instructions",
          txt = "Detected COMPLEX INSTRUCTIONS.\n",
        },
        {
          workaround = "Use vector aligned instructions:\n 1) The GNU Fortran compiler does not support allocation alignment and does not feature directives to benefit from aligned data.\n 2) Use another compiler or locally use C code (for instance via libraries)\n",
          details = " - VEXTRACTF128: 2 occurrences\n - VMOVUPS: 2 occurrences\n",
          title = "Vector unaligned load/store instructions",
          txt = "Detected 4 optimal vector unaligned load/store instructions.\n",
        },
        {
          workaround = "Avoid mixing data with different types. In particular, check if the type of constants is the same as array elements.",
          details = " - CLTD: 4 occurrences\n - CLTQ: 4 occurrences\n - VCVTSI2SD (INT32/64 to FP64, scalar): 7 occurrences\n",
          title = "Conversion instructions",
          txt = "Detected expensive conversion instructions.",
        },
        {
          title = "Type of elements and instruction set",
          txt = "4 SSE or AVX instructions are processing arithmetic or math operations on double precision FP elements in scalar mode (one at a time).\n",
        },
        {
          title = "Matching between your function (in the source code) and the binary function",
          txt = "The binary function is composed of 4 FP arithmetical operations:\n - 4: multiply\nThe binary function is loading 824 bytes (103 double precision FP elements).\nThe binary function is storing 540 bytes (67 double precision FP elements).",
        },
        {
          title = "Arithmetic intensity",
          txt = "Arithmetic intensity is 0.00 FP operations per loaded or stored byte.",
        },
      },
      expert = {
        {
          title = "General properties",
          txt = "nb instructions    : 424\nnb uops            : 493\nloop length        : 2051\nused x86 registers : 16\nused mmx registers : 0\nused xmm registers : 15\nused ymm registers : 2\nused zmm registers : 0\nnb stack references: 25\n",
        },
        {
          title = "Front-end",
          txt = "MACRO FUSION NOT POSSIBLE\nFIT IN UOP CACHE\nmicro-operation queue: 124.25 cycles\nfront end            : 124.25 cycles\n",
        },
        {
          title = "Back-end",
          txt = "       | P0    | P1    | P2     | P3     | P4    | P5\n--------------------------------------------------------\nuops   | 80.67 | 80.67 | 105.00 | 105.00 | 90.00 | 80.67\ncycles | 80.67 | 80.67 | 105.00 | 105.00 | 90.00 | 80.67\n\nCycles executing div or sqrt instructions: 44.00-72.00\n",
        },
        {
          title = "Cycles summary",
          txt = "Front-end : 124.25\nDispatch  : 105.00\nDIV/SQRT  : 44.00-72.00\nOverall L1: 124.25\n",
        },
        {
          title = "Vectorization ratios",
          txt = "INT\nall    : 4%\nload   : 0%\nstore  : 0%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 9%\nFP\nall     : 31%\nload    : 25%\nstore   : 16%\nmul     : 0%\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 100%\nINT+FP\nall     : 13%\nload    : 12%\nstore   : 5%\nmul     : 0%\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: 0%\nother   : 24%\n",
        },
        {
          title = "Vector efficiency ratios",
          txt = "INT\nall    : 34%\nload   : 25%\nstore  : 34%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 33%\nFP\nall     : 35%\nload    : 38%\nstore   : 29%\nmul     : 25%\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 50%\nINT+FP\nall     : 34%\nload    : 31%\nstore   : 33%\nmul     : 25%\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: 25%\nother   : 38%\n",
        },
        {
          title = "Cycles and memory resources usage",
          txt = "Assuming all data fit into the L1 cache, each call to the function takes 124.25 cycles. At this rate:\n - 20% of peak load performance is reached (6.63 out of 32.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 27% of peak store performance is reached (4.35 out of 16.00 bytes stored per cycle (GB/s @ 1GHz))\n",
        },
        {
          title = "Front-end bottlenecks",
          txt = "Performance is limited by instruction throughput (loading/decoding program instructions to execution core) (front-end is a bottleneck).\n\nBy removing all these bottlenecks, you can lower the cost of an iteration from 124.25 to 105.00 cycles (1.18x speedup).\n",
        },
        {
          title = "ASM code",
          txt = "In the binary file, the address of the function is: 4730\n\nInstruction                               | Nb FU | P0   | P1   | P2   | P3   | P4 | P5   | Latency | Recip. throughput\n-----------------------------------------------------------------------------------------------------------------------\nPUSH %RBP                                 | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %RSP,%RBP                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nPUSH %R15                                 | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %RDI,%R15                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nPUSH %R14                                 | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nPUSH %R13                                 | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nPUSH %R12                                 | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nPUSH %RBX                                 | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nAND $-0x20,%RSP                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nSUB $0x200,%RSP                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x10(%RDI),%RSI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x18(%RDI),%RBX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x28(%RDI),%RDX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x20(%RDI),%RCX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x30(%RDI),%RAX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%RSI),%EDI                           | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%RBX),%R12D                          | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %RDX,0x40(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %RCX,0x48(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %RAX,0x30(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %EDI,0x3c(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nCALL 2300 <@plt_start@+0x2e0>             | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nMOV %EAX,0x20(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nCALL 22a0 <@plt_start@+0x280>             | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nMOV %EAX,0x2c(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nTEST %R12D,%R12D                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE 5198 <initialize_._omp_fn.0+0xa68>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x3c(%RSP),%EAX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nTEST %EAX,%EAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE 47c8 <initialize_._omp_fn.0+0x98>     | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nIMUL %R12D,%EAX                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nXOR %EDX,%EDX                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nDIVL 0x20(%RSP)\nMOV %EAX,%R8D                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCMP %EDX,0x2c(%RSP)                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJB 68fd <initialize_._omp_fn.0+0x21cd>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x2c(%RSP),%EAX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R8D,%EAX                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD %EDX,%EAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R8,%RAX,1),%R9D                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nCMP %R9D,%EAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJB 4ae5 <initialize_._omp_fn.0+0x3b5>     | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nVMOVSD 0x23be8(%RIP),%XMM0                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nMOVQ $0,0xa8(%RSP)                        | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVSD %XMM0,0x98(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x3c(%RSP),%EAX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nTEST %EAX,%EAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE 63a5 <initialize_._omp_fn.0+0x1c75>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nIMUL %R12D,%EAX                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nXOR %EDX,%EDX                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nDIVL 0x20(%RSP)\nMOV %EAX,%ECX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCMP %EDX,0x2c(%RSP)                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJB 6928 <initialize_._omp_fn.0+0x21f8>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x2c(%RSP),%EAX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %ECX,%EAX                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD %EDX,%EAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%RCX,%RAX,1),%EDI                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nCMP %EDI,%EAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJAE 63a5 <initialize_._omp_fn.0+0x1c75>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nVXORPD %XMM5,%XMM5,%XMM5                  | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nLEA -0x1(%RCX),%R12D                      | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nXOR %EDX,%EDX                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nXOR %EBX,%EBX                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nDIVL 0x3c(%RSP)\nAND $0x1,%ECX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R12D,0x70(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA 0xc0(%RSP),%R9                        | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R9,0x80(%RSP)                        | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA 0xb8(%RSP),%R14                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0xb0(%RSP),%R13                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0xa8(%RSP),%R12                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nVCVTSI2SD %EAX,%XMM5,%XMM11               | 2     | 1    | 1    | 0    | 0    | 0  | 0    | 4       | 1.50\nMOV %EAX,0x68(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nCLTQ                                      | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %EDX,%R8D                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RAX,0x90(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVSD %XMM11,0x88(%RSP)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJNE 49f7 <initialize_._omp_fn.0+0x2c7>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nVXORPD %XMM14,%XMM14,%XMM14               | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV %EDX,0x78(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %R13,%RSI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R9,%RCX                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVCVTSI2SD %EDX,%XMM14,%XMM9               | 2     | 1    | 1    | 0    | 0    | 0  | 0    | 4       | 1.50\nMOV %R12,%RDI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVMULSD 0x2809b(%RIP),%XMM11,%XMM4         | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nMOV %R14,%RDX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVMULSD 0x28098(%RIP),%XMM9,%XMM15         | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMOVSD %XMM4,0xb8(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVSD %XMM15,0xb0(%RSP)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nCALL 7120 <exact_solution_>               | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nMOVSXD 0x78(%RSP),%RSI                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nMOV 0x90(%RSP),%R11                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL 0x40(%RSP),%R11                      | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nADD 0x30(%RSP),%R11                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV %RSI,%R8                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV (%R15),%R10                           | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL 0x48(%RSP),%RSI                      | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nADD $0x1,%R8D                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVMOVAPD 0xc0(%RSP),%XMM10                 | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVAPD 0xc0(%RSP),%YMM3                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 4       | 1\nVMOVSD 0xe0(%RSP),%XMM2                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nADD %RSI,%R11                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVMOVUPS %XMM10,0x8(%R10,%R11,8)           | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVEXTRACTF128 $0x1,%YMM3,0x18(%R10,%R11,8) | 2     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 2       | 1\nVMOVSD %XMM2,0x28(%R10,%R11,8)            | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nCMP 0x3c(%RSP),%R8D                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJGE 693e <initialize_._omp_fn.0+0x220e>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV $0x1,%EBX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVZEROUPPER                                | 4     | 0    | 0    | 0    | 0    | 0  | 0    | 2       | 1\nJMP 49f7 <initialize_._omp_fn.0+0x2c7>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nXOR %EDX,%EDX                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV 0x8(%R15),%RSI                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nDIVL 0x3c(%RSP)\nMOV (%R15),%RCX                           | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%RSI),%R9D                           | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %EDX,0x80(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %EDX,%EDI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %EAX,0x88(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %EAX,0x90(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nTEST %R9D,%R9D                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE 6996 <initialize_._omp_fn.0+0x2266>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nLEA -0x1(%R8),%R13D                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R9D,%EBX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R15,0x78(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %R9D,%R12D                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R13D,0x28(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x40(%RSP),%R15                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nSHR $0x2,%EBX                             | 1     | 0.50 | 0    | 0    | 0    | 0  | 0.50 | 1       | 0.50\nXOR %R8D,%R8D                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOVSXD 0x88(%RSP),%R13                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nLEA (%RBX,%RBX,4),%RBX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nAND $-0x4,%R12D                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RSI,0x70(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x30(%RSP),%R11                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA -0x1(%R9),%R14D                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nSAL $0x5,%RBX                             | 1     | 0.50 | 0    | 0    | 0    | 0  | 0.50 | 1       | 0.50\nVMOVSD 0x2385a(%RIP),%XMM2                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVAPD 0x238da(%RIP),%YMM4               | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 4       | 1\nVMOVSD %XMM2,0x98(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nNOP                                       | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV 0x10(%R15),%R13                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x18(%R15),%R14                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x8(%R15),%R11                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nVMOVSD 0x98(%RSP),%XMM5                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nMOV (%R13),%EBX                           | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nVMOVSD %XMM5,0xa8(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV (%R14),%R12D                          | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%R11),%R13D                          | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %EBX,0x3c(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nTEST %R12D,%R12D                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE 6893 <initialize_._omp_fn.0+0x2163>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nVZEROUPPER                                | 4     | 0    | 0    | 0    | 0    | 0  | 0    | 2       | 1\nMOV 0x3c(%RSP),%ESI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nTEST %ESI,%ESI                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJLE 51bb <initialize_._omp_fn.0+0xa8b>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV %R12D,%EAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nXOR %EDX,%EDX                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nIMUL %ESI,%EAX                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nDIVL 0x20(%RSP)\nMOV %EAX,%R10D                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nCMP %EDX,0x2c(%RSP)                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJB 68f2 <initialize_._omp_fn.0+0x21c2>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x2c(%RSP),%EAX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R10D,%EAX                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD %EDX,%EAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA (%R10,%RAX,1),%R12D                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nCMP %R12D,%EAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJAE 51bb <initialize_._omp_fn.0+0xa8b>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nVXORPD %XMM11,%XMM11,%XMM11               | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nLEA -0x1(%R10),%EDI                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nXOR %EDX,%EDX                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nXOR %EBX,%EBX                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nDIVL 0x3c(%RSP)\nAND $0x1,%R10D                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %EDI,0x60(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA 0xc0(%RSP),%R9                        | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R9,0x78(%RSP)                        | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA 0xb8(%RSP),%R14                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA 0xa8(%RSP),%R12                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %EAX,0x68(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOVSXD 0x68(%RSP),%R11                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nLEA -0x1(%R13),%EAX                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %EDX,%R8D                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nLEA 0xb0(%RSP),%R13                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nCLTQ                                      | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 1       | 0.50\nLEA (%RAX,%RAX,4),%RCX                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %RCX,0x80(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVCVTSI2SD %R11D,%XMM11,%XMM0              | 2     | 1    | 1    | 0    | 0    | 0  | 0    | 4       | 1.50\nMOV %R11,0x90(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVSD %XMM0,0x88(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJNE 50a5 <initialize_._omp_fn.0+0x975>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nVXORPD %XMM14,%XMM14,%XMM14               | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV %EDX,0x70(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %R13,%RSI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R9,%RCX                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVCVTSI2SD %EDX,%XMM14,%XMM9               | 2     | 1    | 1    | 0    | 0    | 0  | 0    | 4       | 1.50\nMOV %R12,%RDI                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVMULSD 0x279f8(%RIP),%XMM0,%XMM4          | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nMOV %R14,%RDX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVMULSD 0x279f5(%RIP),%XMM9,%XMM15         | 1     | 1    | 0    | 0.50 | 0.50 | 0  | 0    | 5       | 1\nVMOVSD %XMM4,0xb8(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVSD %XMM15,0xb0(%RSP)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nCALL 7120 <exact_solution_>               | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nMOVSXD 0x70(%RSP),%RSI                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nMOV 0x90(%RSP),%RBX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL 0x40(%RSP),%RBX                      | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nADD 0x30(%RSP),%RBX                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nMOV %RSI,%R8                              | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV (%R15),%R10                           | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL 0x48(%RSP),%RSI                      | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nADD $0x1,%R8D                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVMOVAPD 0xc0(%RSP),%XMM10                 | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVAPD 0xc0(%RSP),%YMM3                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 4       | 1\nVMOVSD 0xe0(%RSP),%XMM2                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nADD %RSI,%RBX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nADD 0x80(%RSP),%RBX                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nVMOVUPS %XMM10,0x8(%R10,%RBX,8)           | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVEXTRACTF128 $0x1,%YMM3,0x18(%R10,%RBX,8) | 2     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 2       | 1\nVMOVSD %XMM2,0x28(%R10,%RBX,8)            | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nCMP 0x3c(%RSP),%R8D                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJGE 696a <initialize_._omp_fn.0+0x223a>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV $0x1,%EBX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nVZEROUPPER                                | 4     | 0    | 0    | 0    | 0    | 0  | 0    | 2       | 1\nJMP 50a5 <initialize_._omp_fn.0+0x975>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nVMOVSD 0x23218(%RIP),%XMM6                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVSD %XMM6,0x98(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVSD 0x98(%RSP),%XMM1                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVSD %XMM1,0xa8(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nCALL 22f0 <@plt_start@+0x2d0>             | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nMOV 0x18(%R15),%R14                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOVQ $0,0xb0(%RSP)                        | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV (%R14),%EAX                           | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nCLTD                                      | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 1       | 1\nIDIVL 0x20(%RSP)                          | 10    | 3    | 3    | 0.50 | 0.50 | 0  | 3    | 20-27   | 11-18\nCMP 0x2c(%RSP),%EDX                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJG 6932 <initialize_._omp_fn.0+0x2202>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV %EDX,%R12D                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %EAX,%R13D                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x2c(%RSP),%EBX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R13D,%EBX                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%RBX,%R12,1),%R11D                   | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %R11D,%R13D                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R11D,0x78(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %R13D,0x60(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nCMP %R13D,%R11D                           | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJGE 5632 <initialize_._omp_fn.0+0xf02>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x30(%RSP),%R10                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0xc0(%RSP),%RCX                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOVSXD %R11D,%RSI                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL 0x40(%RSP),%RSI                      | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nMOV %RCX,0x88(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA 0x1(%R10,%RSI,1),%RDX                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %RDX,0x68(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nNOPW (%RAX,%RAX,1)                        | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV 0x18(%R15),%R13                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%R13),%EAX                           | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nCLTD                                      | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 1       | 1\nIDIVL 0x20(%RSP)                          | 10    | 3    | 3    | 0.50 | 0.50 | 0  | 3    | 20-27   | 11-18\nMOV 0x10(%R15),%R14                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nVMOVSD 0x98(%RSP),%XMM7                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVSD %XMM7,0xb0(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV (%R14),%R9D                           | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nCMP 0x2c(%RSP),%EDX                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJG 6914 <initialize_._omp_fn.0+0x21e4>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x2c(%RSP),%R11D                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %EAX,%R11D                           | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R11,%RDX,1),%R8D                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %R8D,%EAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R8D,0x78(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %EAX,0x60(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nCMP %EAX,%R8D                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJGE 5aa2 <initialize_._omp_fn.0+0x1372>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nLEA -0x1(%R9),%EAX                        | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOVSXD %R8D,%RSI                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL 0x40(%RSP),%RSI                      | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nCLTQ                                      | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 1       | 0.50\nIMUL 0x48(%RSP),%RAX                      | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nADD 0x30(%RSP),%RAX                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nLEA 0xc0(%RSP),%R10                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R10,0x88(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nADD %RSI,%RAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %RAX,0x68(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nNOPL (%RAX)                               | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nCALL 22f0 <@plt_start@+0x2d0>             | 3     | 0    | 0    | 0.50 | 0.50 | 1  | 1    | 0       | 2\nMOV 0x10(%R15),%R13                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOVQ $0,0xb8(%RSP)                        | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV (%R13),%EAX                           | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nCLTD                                      | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 1       | 1\nIDIVL 0x20(%RSP)                          | 10    | 3    | 3    | 0.50 | 0.50 | 0  | 3    | 20-27   | 11-18\nCMP 0x2c(%RSP),%EDX                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJG 6908 <initialize_._omp_fn.0+0x21d8>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV %EDX,%R9D                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %EAX,%R14D                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV 0x2c(%RSP),%R11D                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %R14D,%R11D                          | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R11,%R9,1),%R8D                     | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %R8D,%R14D                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R8D,0x78(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %R14D,0x60(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nCMP %R14D,%R8D                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJGE 5f1b <initialize_._omp_fn.0+0x17eb>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x30(%RSP),%RAX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nLEA 0xc0(%RSP),%R10                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOVSXD %R8D,%RDX                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL 0x48(%RSP),%RDX                      | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nMOV %R10,0x88(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA 0x1(%RAX,%RDX,1),%RSI                 | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nMOV %RSI,0x68(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nNOPL (%RAX,%RAX,1)                        | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV 0x10(%R15),%R13                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%R13),%EAX                           | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nCLTD                                      | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 1       | 1\nIDIVL 0x20(%RSP)                          | 10    | 3    | 3    | 0.50 | 0.50 | 0  | 3    | 20-27   | 11-18\nMOV 0x18(%R15),%R14                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nVMOVSD 0x98(%RSP),%XMM3                   | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVSD %XMM3,0xb8(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV (%R14),%EDI                           | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nCMP 0x2c(%RSP),%EDX                       | 1     | 0.33 | 0.33 | 0.50 | 0.50 | 0  | 0.33 | 1       | 0.50\nJG 691e <initialize_._omp_fn.0+0x21ee>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nMOV 0x2c(%RSP),%R9D                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nIMUL %EAX,%R9D                            | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nLEA (%R9,%RDX,1),%R11D                    | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nADD %R11D,%EAX                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R11D,0x80(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %EAX,0x68(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nCMP %EAX,%R11D                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJGE 6396 <initialize_._omp_fn.0+0x1c66>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nLEA -0x1(%RDI),%EAX                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x30(%RSP),%R8                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOVSXD %R11D,%R10                         | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nIMUL 0x48(%RSP),%R10                      | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nCLTQ                                      | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 1       | 0.50\nIMUL 0x40(%RSP),%RAX                      | 1     | 0    | 1    | 0.50 | 0.50 | 0  | 0    | 3       | 1\nLEA 0xc0(%RSP),%RCX                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %RCX,0x90(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA 0x1(%R8,%RAX,1),%RSI                  | 1     | 0    | 1    | 0    | 0    | 0  | 0    | 3       | 1\nADD %RSI,%R10                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nMOV %R10,0x70(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nNOPL (%RAX)                               | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nLEA -0x28(%RBP),%RSP                      | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nPOP %RBX                                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nPOP %R12                                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nPOP %R13                                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nPOP %R14                                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nPOP %R15                                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nPOP %RBP                                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nRET                                       | 2     | 0    | 0    | 0.50 | 0.50 | 0  | 1    | 0       | 2\nMOV 0x8(%R15),%RBX                        | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nVMOVSD 0x98(%RSP),%XMM13                  | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nVMOVSD %XMM13,0xa8(%RSP)                  | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV (%RBX),%R13D                          | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nJMP 4e6e <initialize_._omp_fn.0+0x73e>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nMOV 0x78(%RSP),%R15                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x70(%RSP),%RSI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nVZEROUPPER                                | 4     | 0    | 0    | 0    | 0    | 0  | 0    | 2       | 1\nMOV 0x88(%RSP),%R10D                      | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nVXORPD %XMM7,%XMM7,%XMM7                  | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOVL $0,0x24(%RSP)                        | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nLEA 0xc0(%RSP),%R14                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV 0x80(%RSP),%EAX                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R15,0x88(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVCVTSI2SD %R10D,%XMM7,%XMM5               | 2     | 1    | 1    | 0    | 0    | 0  | 0    | 4       | 1.50\nMOV %R10D,0x1c(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV %EAX,0x38(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVSD %XMM5,0x10(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nNOPW %CS:(%RAX,%RAX,1)                    | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nNOP                                       | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOV 0x88(%RSP),%R15                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOVQ $0,0xa8(%RSP)                        | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nMOV 0x18(%R15),%R14                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV 0x10(%R15),%RSI                       | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%R14),%R12D                          | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV (%RSI),%R10D                          | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 2       | 0.50\nMOV %R10D,0x3c(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nTEST %R12D,%R12D                          | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nJG 47e5 <initialize_._omp_fn.0+0xb5>      | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 1-2\nJMP 51a9 <initialize_._omp_fn.0+0xa79>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nNOPL (%RAX)                               | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nVZEROUPPER                                | 4     | 0    | 0    | 0    | 0    | 0  | 0    | 2       | 1\nJMP 51bb <initialize_._omp_fn.0+0xa8b>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nADD $0x1,%R10D                            | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nXOR %EDX,%EDX                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP 4e93 <initialize_._omp_fn.0+0x763>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nADD $0x1,%R8D                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nXOR %EDX,%EDX                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP 47b1 <initialize_._omp_fn.0+0x81>     | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nLEA 0x1(%RAX),%R14D                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nXOR %R9D,%R9D                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP 5ad0 <initialize_._omp_fn.0+0x13a0>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nADD $0x1,%EAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nXOR %EDX,%EDX                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP 5655 <initialize_._omp_fn.0+0xf25>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nADD $0x1,%EAX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nXOR %EDX,%EDX                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP 5f3e <initialize_._omp_fn.0+0x180e>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nADD $0x1,%ECX                             | 1     | 0.33 | 0.33 | 0    | 0    | 0  | 0.33 | 1       | 0.33\nXOR %EDX,%EDX                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP 4807 <initialize_._omp_fn.0+0xd7>     | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nLEA 0x1(%RAX),%R13D                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nXOR %R12D,%R12D                           | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nJMP 51e8 <initialize_._omp_fn.0+0xab8>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nADDL $0x1,0x68(%RSP)                      | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nVXORPD %XMM8,%XMM8,%XMM8                  | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nXOR %R8D,%R8D                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOVSXD 0x68(%RSP),%RCX                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nVCVTSI2SD %ECX,%XMM8,%XMM6                | 2     | 1    | 1    | 0    | 0    | 0  | 0    | 4       | 1.50\nMOV %RCX,0x90(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVSD %XMM6,0x88(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJMP 4926 <initialize_._omp_fn.0+0x1f6>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nADDL $0x1,0x68(%RSP)                      | 2     | 0.33 | 0.33 | 1    | 1    | 1  | 0.33 | 6       | 1\nVXORPD %XMM8,%XMM8,%XMM8                  | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nXOR %R8D,%R8D                             | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\nMOVSXD 0x68(%RSP),%RDX                    | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 1       | 0.50\nVCVTSI2SD %EDX,%XMM8,%XMM6                | 2     | 1    | 1    | 0    | 0    | 0  | 0    | 4       | 1.50\nMOV %RDX,0x90(%RSP)                       | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVSD %XMM6,0x88(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJMP 4fd1 <initialize_._omp_fn.0+0x8a1>    | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nVMOVSD 0x21a1a(%RIP),%XMM1                | 1     | 0    | 0    | 0.50 | 0.50 | 0  | 0    | 3       | 0.50\nLEA -0x1(%R8),%R10D                       | 1     | 0.50 | 0.50 | 0    | 0    | 0  | 0    | 1       | 0.50\nMOV %R10D,0x28(%RSP)                      | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nVMOVSD %XMM1,0x98(%RSP)                   | 1     | 0    | 0    | 0.50 | 0.50 | 1  | 0    | 3       | 1\nJMP 63e7 <initialize_._omp_fn.0+0x1cb7>   | 1     | 0    | 0    | 0    | 0    | 0  | 1    | 0       | 2\nNOPW %CS:(%RAX,%RAX,1)                    | 1     | 0    | 0    | 0    | 0    | 0  | 0    | 0       | 0.25\n",
        },
      },
      header = {
        "Warnings:\n - The number of fused uops of the instruction [DIVL	0x20(%RSP)] is unknown\n - The number of fused uops of the instruction [DIVL	0x3c(%RSP)] is unknown\n - Detected a function call instruction: ignoring called function instructions.\nRerun with --follow-calls=append to include them to analysis  or with --follow-calls=inline to simulate inlining.\n",
        "0% of peak computational performance is used (0.03 out of 8.00 FLOP per cycle (GFLOPS @ 1GHz))",
      },
      brief = {
      },
      gain = {
        {
          workaround = " - Try to reorganize arrays of structures to structures of arrays\n - Consider to permute loops (see vectorization gain report)\n - To reference allocatable arrays, use \"allocatable\" instead of \"pointer\" pointers or qualify them with the \"contiguous\" attribute (Fortran 2008)\n - For structures, limit to one indirection. For example, use a_b%c instead of a%b%c with a_b set to a%b before this function\n",
          title = "Code clean check",
          txt = "Detected a slowdown caused by scalar integer instructions (typically used for address computation).\nBy removing them, you can lower the cost of an iteration from 124.25 to 32.00 cycles (3.88x speedup).",
        },
        {
          workaround = " - Try another compiler or update/tune your current one\n - Make array accesses unit-stride:\n  * If your function streams arrays of structures (AoS), try to use structures of arrays instead (SoA):\ndo i a(i)%x = b(i)%x (slow, non stride 1) => do i a%x(i) = b%x(i) (fast, stride 1)\n",
          details = "13% of SSE/AVX instructions are used in vector version (process two or more data elements in vector registers):\n - 12% of SSE/AVX loads are used in vector version.\n - 5% of SSE/AVX stores are used in vector version.\n - 0% of SSE/AVX multiply instructions are used in vector version.\n - 0% of SSE/AVX nil are used in vector version.\n - 24% of SSE/AVX instructions that are not load, store, addition, subtraction nor multiply instructions are used in vector version.\nSince your execution units are vector units, only a fully vectorized function can use their full power.\n",
          title = "Vectorization",
          txt = "Your function is not vectorized.\nOnly 34% of vector register length is used (average across all SSE/AVX instructions).\nBy fully vectorizing your function, you can lower the cost of an iteration from 124.25 to 95.31 cycles (1.30x speedup).",
        },
        {
          title = "Execution units bottlenecks",
          txt = "Found no such bottlenecks but see expert reports for more complex bottlenecks.",
        },
      },
      potential = {
        {
          title = "Expensive FP math instructions/calls",
          txt = "Detected performance impact from expensive FP math instructions/calls.\nBy removing/reexpressing them, you can lower the cost of an iteration from 124.25 to 116.75 cycles (1.06x speedup).",
        },
      },
    },
  common = {
    header = {
      "The function is defined in /users/user2210/NPB3.4-MZ-MPI/BT-MZ/initialize.f90:24,32-37,54-84,100-108,118-127,137-145,155-164,174-182,191-200.\n",
      "Warnings:\nIgnoring paths for analysis",
    },
  },
}
