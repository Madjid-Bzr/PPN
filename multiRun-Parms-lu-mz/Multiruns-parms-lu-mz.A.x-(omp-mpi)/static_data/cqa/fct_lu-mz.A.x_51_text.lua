_cqa_text_report = {
  paths = {
    {
      hint = {
        {
          details = "Calling (and then returning from) a function prevents many compiler optimizations (like vectorization), breaks control flow (which reduces pipeline performance) and executes extra instructions to save/restore the registers used inside it, which is very expensive (dozens of cycles). Consider to inline small functions.\n - exchange_4: 1 occurrences\n - unknown: 6 occurrences\n",
          title = "CALL instructions",
          txt = "Detected function call instructions.\n",
        },
        {
          title = "Type of elements and instruction set",
          txt = "No instructions are processing arithmetic or math operations on FP elements. This function is probably writing/copying data or processing integer elements.",
        },
        {
          title = "Matching between your function (in the source code) and the binary function",
          txt = "The binary function does not contain any FP arithmetical operations.\nThe binary function is loading 392 bytes.\nThe binary function is storing 216 bytes.",
        },
      },
      expert = {
        {
          title = "General properties",
          txt = "nb instructions    : 321\nloop length        : 1355\nused x86 registers : 16\nused mmx registers : 0\nused xmm registers : 2\nused ymm registers : 0\nused zmm registers : 0\nnb stack references: 30\n",
        },
        {
          title = "Front-end",
          txt = "MACRO FUSION NOT POSSIBLE\ninstruction fetch    : 85.00 cycles\ninstruction queue    : 160.50 cycles\ndecoding             : 160.50 cycles\nmicro-operation queue: 167.00 cycles\nfront end            : 167.00 cycles\n",
        },
        {
          title = "Back-end",
          txt = "       | P0    | P1   | P2    | P3    | P4     | P5     | P6\n---------------------------------------------------------------\nuops   | 86.50 | 0.00 | 54.00 | 46.00 | 114.00 | 113.50 | 41.00\ncycles | 86.50 | 0.00 | 54.00 | 46.00 | 114.00 | 113.50 | 41.00\n\nCycles executing div or sqrt instructions: 66.00-78.00\n",
        },
        {
          title = "Cycles summary",
          txt = "Front-end : 167.00\nDispatch  : 114.00\nDIV/SQRT  : 66.00-78.00\nOverall L1: 167.00\n",
        },
        {
          title = "Vectorization ratios",
          txt = "INT\nall    : 2%\nload   : 0%\nstore  : 0%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 8%\nFP\nall     : 0%\nload    : 0%\nstore   : NA (no store vectorizable/vectorized instructions)\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : NA (no other vectorizable/vectorized instructions)\nINT+FP\nall     : 2%\nload    : 0%\nstore   : 0%\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: 0%\nother   : 11%\n",
        },
        {
          title = "Vector efficiency ratios",
          txt = "INT\nall    : 9%\nload   : 6%\nstore  : 9%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 7%\nFP\nall     : 12%\nload    : 12%\nstore   : NA (no store vectorizable/vectorized instructions)\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : NA (no other vectorizable/vectorized instructions)\nINT+FP\nall     : 9%\nload    : 8%\nstore   : 9%\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: 6%\nother   : 8%\n",
        },
        {
          title = "Cycles and memory resources usage",
          txt = "Assuming all data fit into the L1 cache, each call to the function takes 167.00 cycles. At this rate:\n - 1% of peak load performance is reached (2.35 out of 128.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 2% of peak store performance is reached (1.29 out of 64.00 bytes stored per cycle (GB/s @ 1GHz))\n",
        },
        {
          title = "Front-end bottlenecks",
          txt = "Performance is limited by instruction throughput (loading/decoding program instructions to execution core) (front-end is a bottleneck).\n",
        },
        {
          title = "ASM code",
          txt = "In the binary file, the address of the function is: 2ecb0\n\nInstruction                          | Nb FU | P0    | P1 | P2   | P3   | P4    | P5   | P6 | Latency | Recip. throughput\n-------------------------------------------------------------------------------------------------------------------------\nPUSH %RBP                            | 1     | 0     | 0  | 0    | 0    | 1     | 1    | 0  | 0       | 1\nMOV %RSP,%RBP                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nPUSH %R15                            | 1     | 0     | 0  | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R14                            | 1     | 0     | 0  | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R13                            | 1     | 0     | 0  | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R12                            | 1     | 0     | 0  | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %RBX                            | 1     | 0     | 0  | 0    | 0    | 1     | 1    | 0  | 0       | 1\nLEA (%RDI),%RBX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nAND $-0x40,%RSP                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0xc0(%RSP),%RSP                 | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x40(%RDI),%RDX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x48(%RDI),%RAX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x38(%RDI),%RCX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x50(%RDI),%ESI                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RDI,0x38(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RDX,0x78(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RCX,0x88(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %ESI,0xac(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RAX,0x80(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 2080 <@plt_start@+0x60>         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV %EAX,0x90(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%RAX),%R15D                     | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 2190 <@plt_start@+0x170>        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x28(%RBX),%R8                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA (%RAX),%EDI                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EAX,0xa0(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV (%R8),%EAX                       | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %EAX,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAR $0x1f,%EDX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nIDIV %R15D                           | 29    | 14.50 | 0  | 0    | 0    | 14.50 | 0    | 0  | 37-49   | 22-26\nCMP %EDX,%EDI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJL 3015f <pintgr_._omp_fn.1+0x14af>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0xa0(%RSP),%R9D                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %EAX,%R10D                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nIMUL %EAX,%R9D                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 3       | 1\nADD %R9D,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %EDX,%R10D                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %R10D,%EDX                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJGE 2ee51 <pintgr_._omp_fn.1+0x1a1>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0x38(%RSP),%R12                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA 0x1(%RDX),%R11D                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x18(%R12),%R13                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x8(%R12),%RBX                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x10(%R12),%R8                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV (%R13),%R14D                     | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nTEST %R14D,%R14D                     | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJLE 2ee51 <pintgr_._omp_fn.1+0x1a1>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOVSXD %R11D,%RSI                    | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA -0x1(%RAX),%EAX                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVSXD %EDX,%RDX                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RSI,%R15                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nADD %RAX,%RDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x1(%R14),%R10D                 | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RDX,%R13                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV $-0x108,%R9                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x5,%R15                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA 0x8(,%R10,8),%RCX                | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x5,%R13                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %RSI,%R15                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R15,%R12                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nADD %RDX,%R13                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R15),%RDI                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R15,%R10,1),%R11               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD $0x42,%R13                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x100(,%R11,8),%R14             | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%R12                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA (%RCX),%R15                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R13,0x98(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD %R9,%R12                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R8),%R13                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RDI),%RDX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nNOPW %CS:(%RAX,%RAX,1)               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nNOP                                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nCALL 2220 <@plt_start@+0x200>        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x38(%RSP),%RBX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x28(%RBX),%RCX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV (%RCX),%EAX                      | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSUB $0x3,%EAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EAX,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAR $0x1f,%EDX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nIDIVL 0x90(%RSP)                     | 30    | 14.50 | 0  | 0.50 | 0.50 | 14.50 | 0    | 0  | 37-49   | 22-26\nCMP %EDX,0xa0(%RSP)                  | 1     | 0     | 0  | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nJL 3014b <pintgr_._omp_fn.1+0x149b>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0xa0(%RSP),%R13D                 | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %EAX,%ESI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nIMUL %EAX,%R13D                      | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 3       | 1\nADD %EDX,%R13D                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R13D,%ESI                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %ESI,%R13D                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJGE 2f459 <pintgr_._omp_fn.1+0x7a9>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0x88(%RSP),%R15                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA 0x3(%R13),%R8D                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0xdb58(%RIP),%EBX                | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0xdb65(%RIP),%R10D               | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x38(%RSP),%R11                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA (%R15),%R9                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EBX,0xb8(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD %R15,%R9                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R10D,0xb0(%RSP)                 | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCMP %R10D,%EBX                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV (%R11),%R14                      | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x8(%R11),%RDI                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nJG 2f459 <pintgr_._omp_fn.1+0x7a9>   | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0x78(%RSP),%RSI                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOVSXD %R8D,%R12                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %R12,%R8                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOVSXD %EBX,%RCX                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nSAL $0x5,%R8                         | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RCX,%RDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA (%RSI),%R11                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %R12,%RSI                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 5       | 2\nADD %R12,%R8                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVSXD %R13D,%R13                    | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %R8,%RDX                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x30(%R14),%R15                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RCX,0x98(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA -0x110(%RDI,%RDX,8),%RDI         | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD 0x80(%RSP),%RSI                  | 1     | 0     | 0  | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nLEA (%R10),%EDX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%R11                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nSUB %EBX,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x8c79(%RIP),%XMM0            | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA (%RCX,%RDX,1),%RBX               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RBX,%RBX,4),%R10               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R9,%RSI                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R10,%RSI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x1(%RDX),%RCX                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x1(%RAX),%R10D                 | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL $-0x28,%RCX,%R9                 | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOV %R10D,0x70(%RSP)                 | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD %R13,%R10                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R10,%RAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV %R10,%RBX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAL $0x3,%RSI                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD $0x84,%RBX                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x5,%RAX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %R15,%RSI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x8c57(%RIP),%XMM1            | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nADD %RAX,%RBX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nNOPW %CS:(%RAX,%RAX,1)               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nNOP                                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV 0x70(%RSP),%EAX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA (%R12),%R8                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x38(%RSP),%RCX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x78(%RSP),%RBX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x98(%RSP),%R11                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nADD %R13,%RAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x10(%RCX),%R10                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RAX,%RDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA (%RBX),%R9                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,%R13                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAL $0x5,%R8                         | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nIMUL %R12,%R9                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOV 0x20(%RCX),%RSI                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nADD %R12,%R8                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x5,%RDX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA (%R11),%R12                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD $0x84,%R13                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R8,%R12                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %RDX,%R13                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x110(%R10,%R12,8),%RDI         | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV 0xb0(%RSP),%EDX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nADD 0x80(%RSP),%R9                   | 1     | 0     | 0  | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nMOV (%RSI),%R12D                     | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSUB 0xb8(%RSP),%EDX                  | 1     | 0     | 0  | 0.50 | 0.50 | 0.50  | 0.50 | 0  | 1       | 1\nSUB $0x2,%R12D                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVSXD %R12D,%R10                    | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %R11,%RDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL 0x88(%RSP),%R10                 | 1     | 0     | 0  | 1    | 0    | 1     | 0    | 0  | 5       | 2\nMOV %RDX,%R12                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA 0x1(%R11,%R11,4),%R11            | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nSAL $0x2,%R12                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %RDX,%R12                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nNOPL (%RAX,%RAX,1)                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nCALL 2220 <@plt_start@+0x200>        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nCALL 2270 <@plt_start@+0x250>        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nCMP $0x1,%AL                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 30169 <pintgr_._omp_fn.1+0x14b9>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nNOPL (%RAX,%RAX,1)                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nCALL 2220 <@plt_start@+0x200>        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x38(%RSP),%RBX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x28(%RBX),%R9                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV (%R9),%EAX                       | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSUB $0x4,%EAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EAX,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAR $0x1f,%EDX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nIDIVL 0x90(%RSP)                     | 30    | 14.50 | 0  | 0.50 | 0.50 | 14.50 | 0    | 0  | 37-49   | 22-26\nCMP %EDX,0xa0(%RSP)                  | 1     | 0     | 0  | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nJL 30155 <pintgr_._omp_fn.1+0x14a5>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0xa0(%RSP),%R8D                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %EAX,%EDI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nVPXOR %XMM0,%XMM0,%XMM0\nIMUL %EAX,%R8D                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 3       | 1\nADD %R8D,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %EDX,%EDI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %EDI,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJGE 2ff51 <pintgr_._omp_fn.1+0x12a1> | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA 0x3(%RDX),%R10D                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVSXD %EDX,%RDX                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOVSXD %R10D,%R11                    | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA -0x1(%RAX),%EAX                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x38(%RSP),%R13                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %R11,%R9                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAL $0x5,%R9                         | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV 0xd528(%RIP),%R12D               | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %R9,%RBX                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV 0x8(%R13),%RCX                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nADD %R11,%RBX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x10(%R13),%R14                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RBX,%RSI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAL $0x3,%RSI                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOVSXD %R12D,%RDI                    | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RSI,%R8                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA (%RCX),%R11                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD $0x108,%R8                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %RSI,%R11                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RBX),%R9                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RCX),%R10                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R14,%RSI,1),%R15               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RDX),%RSI                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %RDI,%R9                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R8,%R10                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x5,%RSI                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA (%R14,%R8,1),%R13                | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x7(%R12),%R8D                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %RDX,%RSI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RBX,0xb0(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA -0x108(%RCX,%R9,8),%RBX          | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %R9,0x80(%RSP)                   | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOVSXD %R8D,%R9                      | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %RSI,%R9                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RDI,%RSI,1),%RDI               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RBX,0x98(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R9,%RBX                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAL $0x3,%RBX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA (%RDX,%RAX,1),%RDX               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%RDI                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %R8D,(%RSP)                      | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA 0x1(%R12),%R8D                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RBX,0x40(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA 0x2(%R12),%EBX                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RDI,0x78(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOVSXD %R8D,%R9                      | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOVSXD %EBX,%RDI                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %RSI,%R9                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%R9                         | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %RSI,%RDI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%RDI                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %R8D,0x18(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA 0x3(%R12),%R8D                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EBX,0x14(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA 0x4(%R12),%EBX                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R9,0x70(%RSP)                   | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOVSXD %R8D,%R9                      | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RDI,0x68(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOVSXD %EBX,%RDI                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %RSI,%R9                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %RSI,%RDI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%R9                         | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nSAL $0x3,%RDI                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %R8D,0x10(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA 0x5(%R12),%R8D                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EBX,0xc(%RSP)                   | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA 0x6(%R12),%EBX                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R9,0x60(%RSP)                   | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOVSXD %R8D,%R9                      | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RDI,0x58(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOVSXD %EBX,%RDI                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %R8D,0x8(%RSP)                   | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD %RSI,%R9                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0xac(%RSP),%R8D                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nADD %RDI,%RSI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%RSI                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RSI,0x48(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%RDX),%RSI                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x5,%RSI                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nSUB %R12D,%R8D                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%R9                         | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %RDX,%RSI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R8D,0x30(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD $0x84,%RSI                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R12D,0x34(%RSP)                 | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD $0x1,%R8D                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R9,0x50(%RSP)                   | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R11),%R12                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EBX,0x4(%RSP)                   | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R10),%R9                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RSI,0x28(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R8D,0x1c(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nNOPL (%RAX,%RAX,1)                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV 0x38(%RSP),%R10                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x30(%R10),%RCX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV (%RCX),%R9                       | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA -0x28(%RBP),%RSP                 | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nPOP %RBX                             | 2     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R12                             | 2     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R13                             | 2     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R14                             | 2     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R15                             | 2     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %RBP                             | 2     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nRET\nNOPL (%RAX,%RAX,1)                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nADD $0x1,%EAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EDX,%EDX\nJMP 2ee7d <pintgr_._omp_fn.1+0x1cd>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 2\nADD $0x1,%EAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EDX,%EDX\nJMP 2f49d <pintgr_._omp_fn.1+0x7ed>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 2\nADD $0x1,%EAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EDX,%EDX\nJMP 2ed30 <pintgr_._omp_fn.1+0x80>   | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 2\nMOV 0x38(%RSP),%R14                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x28(%R14),%RCX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x18(%R14),%RDX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x10(%R14),%RSI                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x8(%R14),%RDI                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nCALL 34b80 <exchange_4_>             | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x30(%R14),%R15                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOVQ $0,(%R15)                       | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nJMP 2f46b <pintgr_._omp_fn.1+0x7bb>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 2\nNOPL (%RAX,%RAX,1)                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\n",
        },
      },
      header = {
        "Warnings:\nget_path_cqa_results:\n - Detected a function call instruction: ignoring called function instructions.\nRerun with --follow-calls=append to include them to analysis  or with --follow-calls=inline to simulate inlining.\n",
        "0% of peak computational performance is used (0.00 out of 4.00 FLOP per cycle (GFLOPS @ 1GHz))",
      },
      brief = {
      },
      gain = {
        {
          workaround = " - Try to reorganize arrays of structures to structures of arrays\n - Consider to permute loops (see vectorization gain report)\n - To reference allocatable arrays, use \"allocatable\" instead of \"pointer\" pointers or qualify them with the \"contiguous\" attribute (Fortran 2008)\n - For structures, limit to one indirection. For example, use a_b%c instead of a%b%c with a_b set to a%b before this function\n",
          title = "Code clean check",
          txt = "Detected a slowdown caused by scalar integer instructions (typically used for address computation).\nBy removing them, you can lower the cost of an iteration from 167.00 to 20.00 cycles (8.35x speedup).",
        },
        {
          workaround = " - Try another compiler or update/tune your current one\n - Make array accesses unit-stride:\n  * If your function streams arrays of structures (AoS), try to use structures of arrays instead (SoA):\ndo i a(i)%x = b(i)%x (slow, non stride 1) => do i a%x(i) = b%x(i) (fast, stride 1)\n",
          details = "Store and arithmetical SSE/AVX instructions are used in scalar version (process only one data element in vector registers).\nSince your execution units are vector units, only a vectorized function can use their full power.\n",
          title = "Vectorization",
          txt = "Your function is probably not vectorized.\nOnly 9% of vector register length is used (average across all SSE/AVX instructions).\nBy vectorizing your function, you can lower the cost of an iteration from 167.00 to 11.09 cycles (15.06x speedup).",
        },
        {
          title = "Execution units bottlenecks",
          txt = "Found no such bottlenecks but see expert reports for more complex bottlenecks.",
        },
      },
      potential = {
      },
    },
  },
  AVG = {
      hint = {
        {
          details = "Calling (and then returning from) a function prevents many compiler optimizations (like vectorization), breaks control flow (which reduces pipeline performance) and executes extra instructions to save/restore the registers used inside it, which is very expensive (dozens of cycles). Consider to inline small functions.\n - exchange_4: 1 occurrences\n - unknown: 6 occurrences\n",
          title = "CALL instructions",
          txt = "Detected function call instructions.\n",
        },
        {
          title = "Type of elements and instruction set",
          txt = "No instructions are processing arithmetic or math operations on FP elements. This function is probably writing/copying data or processing integer elements.",
        },
        {
          title = "Matching between your function (in the source code) and the binary function",
          txt = "The binary function does not contain any FP arithmetical operations.\nThe binary function is loading 392 bytes.\nThe binary function is storing 216 bytes.",
        },
      },
      expert = {
        {
          title = "General properties",
          txt = "nb instructions    : 321\nloop length        : 1355\nused x86 registers : 16\nused mmx registers : 0\nused xmm registers : 2\nused ymm registers : 0\nused zmm registers : 0\nnb stack references: 30\n",
        },
        {
          title = "Front-end",
          txt = "MACRO FUSION NOT POSSIBLE\ninstruction fetch    : 85.00 cycles\ninstruction queue    : 160.50 cycles\ndecoding             : 160.50 cycles\nmicro-operation queue: 167.00 cycles\nfront end            : 167.00 cycles\n",
        },
        {
          title = "Back-end",
          txt = "       | P0    | P1   | P2    | P3    | P4     | P5     | P6\n---------------------------------------------------------------\nuops   | 86.50 | 0.00 | 54.00 | 46.00 | 114.00 | 113.50 | 41.00\ncycles | 86.50 | 0.00 | 54.00 | 46.00 | 114.00 | 113.50 | 41.00\n\nCycles executing div or sqrt instructions: 66.00-78.00\n",
        },
        {
          title = "Cycles summary",
          txt = "Front-end : 167.00\nDispatch  : 114.00\nDIV/SQRT  : 66.00-78.00\nOverall L1: 167.00\n",
        },
        {
          title = "Vectorization ratios",
          txt = "INT\nall    : 2%\nload   : 0%\nstore  : 0%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 8%\nFP\nall     : 0%\nload    : 0%\nstore   : NA (no store vectorizable/vectorized instructions)\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : NA (no other vectorizable/vectorized instructions)\nINT+FP\nall     : 2%\nload    : 0%\nstore   : 0%\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: 0%\nother   : 11%\n",
        },
        {
          title = "Vector efficiency ratios",
          txt = "INT\nall    : 9%\nload   : 6%\nstore  : 9%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 7%\nFP\nall     : 12%\nload    : 12%\nstore   : NA (no store vectorizable/vectorized instructions)\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : NA (no other vectorizable/vectorized instructions)\nINT+FP\nall     : 9%\nload    : 8%\nstore   : 9%\nmul     : NA (no mul vectorizable/vectorized instructions)\nadd-sub : NA (no add-sub vectorizable/vectorized instructions)\nfma     : NA (no fma vectorizable/vectorized instructions)\ndiv/sqrt: 6%\nother   : 8%\n",
        },
        {
          title = "Cycles and memory resources usage",
          txt = "Assuming all data fit into the L1 cache, each call to the function takes 167.00 cycles. At this rate:\n - 1% of peak load performance is reached (2.35 out of 128.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 2% of peak store performance is reached (1.29 out of 64.00 bytes stored per cycle (GB/s @ 1GHz))\n",
        },
        {
          title = "Front-end bottlenecks",
          txt = "Performance is limited by instruction throughput (loading/decoding program instructions to execution core) (front-end is a bottleneck).\n",
        },
        {
          title = "ASM code",
          txt = "In the binary file, the address of the function is: 2ecb0\n\nInstruction                          | Nb FU | P0    | P1 | P2   | P3   | P4    | P5   | P6 | Latency | Recip. throughput\n-------------------------------------------------------------------------------------------------------------------------\nPUSH %RBP                            | 1     | 0     | 0  | 0    | 0    | 1     | 1    | 0  | 0       | 1\nMOV %RSP,%RBP                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nPUSH %R15                            | 1     | 0     | 0  | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R14                            | 1     | 0     | 0  | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R13                            | 1     | 0     | 0  | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R12                            | 1     | 0     | 0  | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %RBX                            | 1     | 0     | 0  | 0    | 0    | 1     | 1    | 0  | 0       | 1\nLEA (%RDI),%RBX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nAND $-0x40,%RSP                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0xc0(%RSP),%RSP                 | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x40(%RDI),%RDX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x48(%RDI),%RAX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x38(%RDI),%RCX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x50(%RDI),%ESI                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RDI,0x38(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RDX,0x78(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RCX,0x88(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %ESI,0xac(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RAX,0x80(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 2080 <@plt_start@+0x60>         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV %EAX,0x90(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%RAX),%R15D                     | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 2190 <@plt_start@+0x170>        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x28(%RBX),%R8                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA (%RAX),%EDI                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EAX,0xa0(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV (%R8),%EAX                       | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %EAX,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAR $0x1f,%EDX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nIDIV %R15D                           | 29    | 14.50 | 0  | 0    | 0    | 14.50 | 0    | 0  | 37-49   | 22-26\nCMP %EDX,%EDI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJL 3015f <pintgr_._omp_fn.1+0x14af>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0xa0(%RSP),%R9D                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %EAX,%R10D                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nIMUL %EAX,%R9D                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 3       | 1\nADD %R9D,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %EDX,%R10D                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %R10D,%EDX                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJGE 2ee51 <pintgr_._omp_fn.1+0x1a1>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0x38(%RSP),%R12                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA 0x1(%RDX),%R11D                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x18(%R12),%R13                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x8(%R12),%RBX                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x10(%R12),%R8                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV (%R13),%R14D                     | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nTEST %R14D,%R14D                     | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJLE 2ee51 <pintgr_._omp_fn.1+0x1a1>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOVSXD %R11D,%RSI                    | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA -0x1(%RAX),%EAX                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVSXD %EDX,%RDX                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RSI,%R15                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nADD %RAX,%RDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x1(%R14),%R10D                 | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RDX,%R13                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV $-0x108,%R9                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x5,%R15                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA 0x8(,%R10,8),%RCX                | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x5,%R13                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %RSI,%R15                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R15,%R12                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nADD %RDX,%R13                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R15),%RDI                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R15,%R10,1),%R11               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD $0x42,%R13                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x100(,%R11,8),%R14             | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%R12                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA (%RCX),%R15                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R13,0x98(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD %R9,%R12                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R8),%R13                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RDI),%RDX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nNOPW %CS:(%RAX,%RAX,1)               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nNOP                                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nCALL 2220 <@plt_start@+0x200>        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x38(%RSP),%RBX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x28(%RBX),%RCX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV (%RCX),%EAX                      | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSUB $0x3,%EAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EAX,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAR $0x1f,%EDX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nIDIVL 0x90(%RSP)                     | 30    | 14.50 | 0  | 0.50 | 0.50 | 14.50 | 0    | 0  | 37-49   | 22-26\nCMP %EDX,0xa0(%RSP)                  | 1     | 0     | 0  | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nJL 3014b <pintgr_._omp_fn.1+0x149b>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0xa0(%RSP),%R13D                 | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %EAX,%ESI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nIMUL %EAX,%R13D                      | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 3       | 1\nADD %EDX,%R13D                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R13D,%ESI                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %ESI,%R13D                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJGE 2f459 <pintgr_._omp_fn.1+0x7a9>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0x88(%RSP),%R15                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA 0x3(%R13),%R8D                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0xdb58(%RIP),%EBX                | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0xdb65(%RIP),%R10D               | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x38(%RSP),%R11                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA (%R15),%R9                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EBX,0xb8(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD %R15,%R9                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R10D,0xb0(%RSP)                 | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCMP %R10D,%EBX                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV (%R11),%R14                      | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x8(%R11),%RDI                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nJG 2f459 <pintgr_._omp_fn.1+0x7a9>   | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0x78(%RSP),%RSI                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOVSXD %R8D,%R12                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %R12,%R8                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOVSXD %EBX,%RCX                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nSAL $0x5,%R8                         | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RCX,%RDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA (%RSI),%R11                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %R12,%RSI                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 5       | 2\nADD %R12,%R8                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVSXD %R13D,%R13                    | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %R8,%RDX                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x30(%R14),%R15                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RCX,0x98(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA -0x110(%RDI,%RDX,8),%RDI         | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD 0x80(%RSP),%RSI                  | 1     | 0     | 0  | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nLEA (%R10),%EDX                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%R11                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nSUB %EBX,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x8c79(%RIP),%XMM0            | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA (%RCX,%RDX,1),%RBX               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RBX,%RBX,4),%R10               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R9,%RSI                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R10,%RSI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x1(%RDX),%RCX                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x1(%RAX),%R10D                 | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL $-0x28,%RCX,%R9                 | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOV %R10D,0x70(%RSP)                 | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD %R13,%R10                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R10,%RAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV %R10,%RBX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAL $0x3,%RSI                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD $0x84,%RBX                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x5,%RAX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %R15,%RSI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x8c57(%RIP),%XMM1            | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nADD %RAX,%RBX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nNOPW %CS:(%RAX,%RAX,1)               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nNOP                                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV 0x70(%RSP),%EAX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA (%R12),%R8                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x38(%RSP),%RCX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x78(%RSP),%RBX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x98(%RSP),%R11                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nADD %R13,%RAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x10(%RCX),%R10                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RAX,%RDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA (%RBX),%R9                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,%R13                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAL $0x5,%R8                         | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nIMUL %R12,%R9                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOV 0x20(%RCX),%RSI                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nADD %R12,%R8                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x5,%RDX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA (%R11),%R12                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD $0x84,%R13                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R8,%R12                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %RDX,%R13                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x110(%R10,%R12,8),%RDI         | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV 0xb0(%RSP),%EDX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nADD 0x80(%RSP),%R9                   | 1     | 0     | 0  | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nMOV (%RSI),%R12D                     | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSUB 0xb8(%RSP),%EDX                  | 1     | 0     | 0  | 0.50 | 0.50 | 0.50  | 0.50 | 0  | 1       | 1\nSUB $0x2,%R12D                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVSXD %R12D,%R10                    | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %R11,%RDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL 0x88(%RSP),%R10                 | 1     | 0     | 0  | 1    | 0    | 1     | 0    | 0  | 5       | 2\nMOV %RDX,%R12                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA 0x1(%R11,%R11,4),%R11            | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nSAL $0x2,%R12                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %RDX,%R12                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nNOPL (%RAX,%RAX,1)                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nCALL 2220 <@plt_start@+0x200>        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nCALL 2270 <@plt_start@+0x250>        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nCMP $0x1,%AL                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 30169 <pintgr_._omp_fn.1+0x14b9>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nNOPL (%RAX,%RAX,1)                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nCALL 2220 <@plt_start@+0x200>        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x38(%RSP),%RBX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x28(%RBX),%R9                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV (%R9),%EAX                       | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSUB $0x4,%EAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EAX,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAR $0x1f,%EDX                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nIDIVL 0x90(%RSP)                     | 30    | 14.50 | 0  | 0.50 | 0.50 | 14.50 | 0    | 0  | 37-49   | 22-26\nCMP %EDX,0xa0(%RSP)                  | 1     | 0     | 0  | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nJL 30155 <pintgr_._omp_fn.1+0x14a5>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0xa0(%RSP),%R8D                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %EAX,%EDI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nVPXOR %XMM0,%XMM0,%XMM0\nIMUL %EAX,%R8D                       | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 3       | 1\nADD %R8D,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %EDX,%EDI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %EDI,%EDX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJGE 2ff51 <pintgr_._omp_fn.1+0x12a1> | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA 0x3(%RDX),%R10D                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVSXD %EDX,%RDX                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOVSXD %R10D,%R11                    | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA -0x1(%RAX),%EAX                  | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x38(%RSP),%R13                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %R11,%R9                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAL $0x5,%R9                         | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV 0xd528(%RIP),%R12D               | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %R9,%RBX                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV 0x8(%R13),%RCX                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nADD %R11,%RBX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x10(%R13),%R14                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RBX,%RSI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAL $0x3,%RSI                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOVSXD %R12D,%RDI                    | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RSI,%R8                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA (%RCX),%R11                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD $0x108,%R8                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %RSI,%R11                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RBX),%R9                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RCX),%R10                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R14,%RSI,1),%R15               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RDX),%RSI                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %RDI,%R9                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R8,%R10                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x5,%RSI                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA (%R14,%R8,1),%R13                | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x7(%R12),%R8D                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %RDX,%RSI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RBX,0xb0(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA -0x108(%RCX,%R9,8),%RBX          | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %R9,0x80(%RSP)                   | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOVSXD %R8D,%R9                      | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %RSI,%R9                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RDI,%RSI,1),%RDI               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RBX,0x98(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R9,%RBX                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAL $0x3,%RBX                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA (%RDX,%RAX,1),%RDX               | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%RDI                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %R8D,(%RSP)                      | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA 0x1(%R12),%R8D                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RBX,0x40(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA 0x2(%R12),%EBX                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RDI,0x78(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOVSXD %R8D,%R9                      | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOVSXD %EBX,%RDI                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %RSI,%R9                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%R9                         | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %RSI,%RDI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%RDI                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %R8D,0x18(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA 0x3(%R12),%R8D                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EBX,0x14(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA 0x4(%R12),%EBX                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R9,0x70(%RSP)                   | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOVSXD %R8D,%R9                      | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RDI,0x68(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOVSXD %EBX,%RDI                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %RSI,%R9                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %RSI,%RDI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%R9                         | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nSAL $0x3,%RDI                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %R8D,0x10(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA 0x5(%R12),%R8D                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EBX,0xc(%RSP)                   | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA 0x6(%R12),%EBX                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R9,0x60(%RSP)                   | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOVSXD %R8D,%R9                      | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RDI,0x58(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOVSXD %EBX,%RDI                     | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %R8D,0x8(%RSP)                   | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD %RSI,%R9                         | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0xac(%RSP),%R8D                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nADD %RDI,%RSI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%RSI                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RSI,0x48(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%RDX),%RSI                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x5,%RSI                        | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nSUB %R12D,%R8D                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%R9                         | 1     | 0     | 0  | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %RDX,%RSI                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R8D,0x30(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD $0x84,%RSI                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R12D,0x34(%RSP)                 | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD $0x1,%R8D                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R9,0x50(%RSP)                   | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R11),%R12                      | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EBX,0x4(%RSP)                   | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R10),%R9                       | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RSI,0x28(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R8D,0x1c(%RSP)                  | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nNOPL (%RAX,%RAX,1)                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV 0x38(%RSP),%R10                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x30(%R10),%RCX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV (%RCX),%R9                       | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA -0x28(%RBP),%RSP                 | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nPOP %RBX                             | 2     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R12                             | 2     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R13                             | 2     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R14                             | 2     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R15                             | 2     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %RBP                             | 2     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nRET\nNOPL (%RAX,%RAX,1)                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nADD $0x1,%EAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EDX,%EDX\nJMP 2ee7d <pintgr_._omp_fn.1+0x1cd>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 2\nADD $0x1,%EAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EDX,%EDX\nJMP 2f49d <pintgr_._omp_fn.1+0x7ed>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 2\nADD $0x1,%EAX                        | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EDX,%EDX\nJMP 2ed30 <pintgr_._omp_fn.1+0x80>   | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 2\nMOV 0x38(%RSP),%R14                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x28(%R14),%RCX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x18(%R14),%RDX                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x10(%R14),%RSI                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x8(%R14),%RDI                   | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nCALL 34b80 <exchange_4_>             | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x30(%R14),%R15                  | 1     | 0     | 0  | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOVQ $0,(%R15)                       | 1     | 0     | 0  | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nJMP 2f46b <pintgr_._omp_fn.1+0x7bb>  | 1     | 0     | 0  | 0    | 0    | 0     | 1    | 0  | 0       | 2\nNOPL (%RAX,%RAX,1)                   | 1     | 0     | 0  | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\n",
        },
      },
      header = {
        "Warnings:\nget_path_cqa_results:\n - Detected a function call instruction: ignoring called function instructions.\nRerun with --follow-calls=append to include them to analysis  or with --follow-calls=inline to simulate inlining.\n",
        "0% of peak computational performance is used (0.00 out of 4.00 FLOP per cycle (GFLOPS @ 1GHz))",
      },
      brief = {
      },
      gain = {
        {
          workaround = " - Try to reorganize arrays of structures to structures of arrays\n - Consider to permute loops (see vectorization gain report)\n - To reference allocatable arrays, use \"allocatable\" instead of \"pointer\" pointers or qualify them with the \"contiguous\" attribute (Fortran 2008)\n - For structures, limit to one indirection. For example, use a_b%c instead of a%b%c with a_b set to a%b before this function\n",
          title = "Code clean check",
          txt = "Detected a slowdown caused by scalar integer instructions (typically used for address computation).\nBy removing them, you can lower the cost of an iteration from 167.00 to 20.00 cycles (8.35x speedup).",
        },
        {
          workaround = " - Try another compiler or update/tune your current one\n - Make array accesses unit-stride:\n  * If your function streams arrays of structures (AoS), try to use structures of arrays instead (SoA):\ndo i a(i)%x = b(i)%x (slow, non stride 1) => do i a%x(i) = b%x(i) (fast, stride 1)\n",
          details = "Store and arithmetical SSE/AVX instructions are used in scalar version (process only one data element in vector registers).\nSince your execution units are vector units, only a vectorized function can use their full power.\n",
          title = "Vectorization",
          txt = "Your function is probably not vectorized.\nOnly 9% of vector register length is used (average across all SSE/AVX instructions).\nBy vectorizing your function, you can lower the cost of an iteration from 167.00 to 11.09 cycles (15.06x speedup).",
        },
        {
          title = "Execution units bottlenecks",
          txt = "Found no such bottlenecks but see expert reports for more complex bottlenecks.",
        },
      },
      potential = {
      },
    },
  common = {
    header = {
      "The function is defined in /users/user2222/NPB3.4.1-MZ/NPB3.4-MZ-MPI/LU-MZ/pintgr.f90:101-116,123-126,136-147.\n",
      "Warnings:\nget_cqa_results:\n - Ignoring paths for analysis\n",
    },
  },
}
