/users/user2222/NPB3.4.1-MZ/NPB3.4-MZ-MPI/LU-MZ/jacu.f90: 39 - 349
--------------------------------------------------------------------------------

39:             do i = iend, ist, -1
40: 
41: !---------------------------------------------------------------------
42: !   form the block daigonal
43: !---------------------------------------------------------------------
44:                tmp1 = rho_i(i,j,k)
45:                tmp2 = tmp1 * tmp1
46:                tmp3 = tmp1 * tmp2
47: 
48:                d(1,1,i,j) =  1.0d0  &
49:      &                       + dt * 2.0d0 * (   tx1 * dx1  &
50:      &                                          + ty1 * dy1  &
51:      &                                          + tz1 * dz1 )
52:                d(1,2,i,j) =  0.0d0
53:                d(1,3,i,j) =  0.0d0
54:                d(1,4,i,j) =  0.0d0
55:                d(1,5,i,j) =  0.0d0
56: 
57:                d(2,1,i,j) =  dt * 2.0d0  &
58:      &           * ( - tx1 * r43 - ty1 - tz1 )  &
59:      &           * ( c34 * tmp2 * u(2,i,j,k) )
[...]
65:      &                             + tz1 * dz2  )
66:                d(2,3,i,j) = 0.0d0
67:                d(2,4,i,j) = 0.0d0
68:                d(2,5,i,j) = 0.0d0
69: 
70:                d(3,1,i,j) = dt * 2.0d0  &
71:      &           * ( - tx1 - ty1 * r43 - tz1 )  &
72:      &           * ( c34 * tmp2 * u(3,i,j,k) )
73:                d(3,2,i,j) = 0.0d0
[...]
79:      &                           + tz1 * dz3 )
80:                d(3,4,i,j) = 0.0d0
81:                d(3,5,i,j) = 0.0d0
82: 
83:                d(4,1,i,j) = dt * 2.0d0  &
84:      &           * ( - tx1 - ty1 - tz1 * r43 )  &
85:      &           * ( c34 * tmp2 * u(4,i,j,k) )
86:                d(4,2,i,j) = 0.0d0
87:                d(4,3,i,j) = 0.0d0
[...]
93:      &                           + tz1 * dz4 )
94:                d(4,5,i,j) = 0.0d0
[...]
107:      &   + ( tx1 + ty1 + tz1 ) * c1345 * tmp2 * u(5,i,j,k) )
108: 
109:                d(5,2,i,j) = dt * 2.0d0  &
110:      & * ( tx1 * ( r43*c34 - c1345 )  &
111:      &   + ty1 * (     c34 - c1345 )  &
112:      &   + tz1 * (     c34 - c1345 ) ) * tmp2 * u(2,i,j,k)
113:                d(5,3,i,j) = dt * 2.0d0  &
114:      & * ( tx1 * ( c34 - c1345 )  &
115:      &   + ty1 * ( r43*c34 -c1345 )  &
116:      &   + tz1 * ( c34 - c1345 ) ) * tmp2 * u(3,i,j,k)
117:                d(5,4,i,j) = dt * 2.0d0  &
118:      & * ( tx1 * ( c34 - c1345 )  &
119:      &   + ty1 * ( c34 - c1345 )  &
120:      &   + tz1 * ( r43*c34 - c1345 ) ) * tmp2 * u(4,i,j,k)
121:                d(5,5,i,j) = 1.0d0  &
122:      &   + dt * 2.0d0 * ( tx1 + ty1 + tz1 ) * c1345 * tmp1  &
123:      &   + dt * 2.0d0 * (  tx1 * dx5  &
124:      &                    +  ty1 * dy5  &
125:      &                    +  tz1 * dz5 )
[...]
131:                tmp2 = tmp1 * tmp1
132:                tmp3 = tmp1 * tmp2
133: 
134:                a(1,1,i,j) = - dt * tx1 * dx1
135:                a(1,2,i,j) =   dt * tx2
136:                a(1,3,i,j) =   0.0d0
137:                a(1,4,i,j) =   0.0d0
138:                a(1,5,i,j) =   0.0d0
139: 
140:                a(2,1,i,j) =  dt * tx2  &
141:      &          * ( - ( u(2,i+1,j,k) * tmp1 ) ** 2  &
142:      &     + c2 * qs(i+1,j,k) * tmp1 )  &
143:      &          - dt * tx1 * ( - r43 * c34 * tmp2 * u(2,i+1,j,k) )
144:                a(2,2,i,j) =  dt * tx2  &
145:      &          * ( ( 2.0d0 - c2 ) * ( u(2,i+1,j,k) * tmp1 ) )  &
146:      &          - dt * tx1 * ( r43 * c34 * tmp1 )  &
147:      &          - dt * tx1 * dx2
148:                a(2,3,i,j) =  dt * tx2  &
149:      &              * ( - c2 * ( u(3,i+1,j,k) * tmp1 ) )
150:                a(2,4,i,j) =  dt * tx2  &
151:      &              * ( - c2 * ( u(4,i+1,j,k) * tmp1 ) )
152:                a(2,5,i,j) =  dt * tx2 * c2 
153: 
154:                a(3,1,i,j) =  dt * tx2  &
155:      &              * ( - ( u(2,i+1,j,k) * u(3,i+1,j,k) ) * tmp2 )  &
156:      &         - dt * tx1 * ( - c34 * tmp2 * u(3,i+1,j,k) )
157:                a(3,2,i,j) =  dt * tx2 * ( u(3,i+1,j,k) * tmp1 )
158:                a(3,3,i,j) =  dt * tx2 * ( u(2,i+1,j,k) * tmp1 )  &
159:      &          - dt * tx1 * ( c34 * tmp1 )  &
160:      &          - dt * tx1 * dx3
161:                a(3,4,i,j) = 0.0d0
162:                a(3,5,i,j) = 0.0d0
163: 
164:                a(4,1,i,j) = dt * tx2  &
165:      &          * ( - ( u(2,i+1,j,k)*u(4,i+1,j,k) ) * tmp2 )  &
166:      &          - dt * tx1 * ( - c34 * tmp2 * u(4,i+1,j,k) )
167:                a(4,2,i,j) = dt * tx2 * ( u(4,i+1,j,k) * tmp1 )
168:                a(4,3,i,j) = 0.0d0
169:                a(4,4,i,j) = dt * tx2 * ( u(2,i+1,j,k) * tmp1 )  &
170:      &          - dt * tx1 * ( c34 * tmp1 )  &
171:      &          - dt * tx1 * dx4
172:                a(4,5,i,j) = 0.0d0
[...]
182:      &              - c1345 * tmp2 * u(5,i+1,j,k) )
[...]
189:      &           * ( r43*c34 - c1345 ) * tmp2 * u(2,i+1,j,k)
190:                a(5,3,i,j) = dt * tx2  &
191:      &           * ( - c2 * ( u(3,i+1,j,k)*u(2,i+1,j,k) ) * tmp2 )  &
192:      &           - dt * tx1  &
193:      &           * (  c34 - c1345 ) * tmp2 * u(3,i+1,j,k)
194:                a(5,4,i,j) = dt * tx2  &
195:      &           * ( - c2 * ( u(4,i+1,j,k)*u(2,i+1,j,k) ) * tmp2 )  &
196:      &           - dt * tx1  &
197:      &           * (  c34 - c1345 ) * tmp2 * u(4,i+1,j,k)
198:                a(5,5,i,j) = dt * tx2  &
199:      &           * ( c1 * ( u(2,i+1,j,k) * tmp1 ) )  &
200:      &           - dt * tx1 * c1345 * tmp1  &
201:      &           - dt * tx1 * dx5
202: 
203: !---------------------------------------------------------------------
204: !   form the second block sub-diagonal
205: !---------------------------------------------------------------------
206:                tmp1 = rho_i(i,j+1,k)
207:                tmp2 = tmp1 * tmp1
208:                tmp3 = tmp1 * tmp2
209: 
210:                b(1,1,i,j) = - dt * ty1 * dy1
211:                b(1,2,i,j) =   0.0d0
212:                b(1,3,i,j) =  dt * ty2
213:                b(1,4,i,j) =   0.0d0
214:                b(1,5,i,j) =   0.0d0
215: 
216:                b(2,1,i,j) =  dt * ty2  &
217:      &           * ( - ( u(2,i,j+1,k)*u(3,i,j+1,k) ) * tmp2 )  &
218:      &           - dt * ty1 * ( - c34 * tmp2 * u(2,i,j+1,k) )
219:                b(2,2,i,j) =  dt * ty2 * ( u(3,i,j+1,k) * tmp1 )  &
220:      &          - dt * ty1 * ( c34 * tmp1 )  &
221:      &          - dt * ty1 * dy2
222:                b(2,3,i,j) =  dt * ty2 * ( u(2,i,j+1,k) * tmp1 )
223:                b(2,4,i,j) = 0.0d0
224:                b(2,5,i,j) = 0.0d0
225: 
226:                b(3,1,i,j) =  dt * ty2  &
227:      &           * ( - ( u(3,i,j+1,k) * tmp1 ) ** 2  &
228:      &      + c2 * ( qs(i,j+1,k) * tmp1 ) )  &
229:      &       - dt * ty1 * ( - r43 * c34 * tmp2 * u(3,i,j+1,k) )
230:                b(3,2,i,j) =  dt * ty2  &
231:      &                   * ( - c2 * ( u(2,i,j+1,k) * tmp1 ) )
232:                b(3,3,i,j) =  dt * ty2 * ( ( 2.0d0 - c2 )  &
233:      &                   * ( u(3,i,j+1,k) * tmp1 ) )  &
234:      &       - dt * ty1 * ( r43 * c34 * tmp1 )  &
235:      &       - dt * ty1 * dy3
236:                b(3,4,i,j) =  dt * ty2  &
237:      &                   * ( - c2 * ( u(4,i,j+1,k) * tmp1 ) )
238:                b(3,5,i,j) =  dt * ty2 * c2
239: 
240:                b(4,1,i,j) =  dt * ty2  &
241:      &              * ( - ( u(3,i,j+1,k)*u(4,i,j+1,k) ) * tmp2 )  &
242:      &       - dt * ty1 * ( - c34 * tmp2 * u(4,i,j+1,k) )
243:                b(4,2,i,j) = 0.0d0
244:                b(4,3,i,j) =  dt * ty2 * ( u(4,i,j+1,k) * tmp1 )
245:                b(4,4,i,j) =  dt * ty2 * ( u(3,i,j+1,k) * tmp1 )  &
246:      &                        - dt * ty1 * ( c34 * tmp1 )  &
247:      &                        - dt * ty1 * dy4
248:                b(4,5,i,j) = 0.0d0
[...]
258:      &              - c1345*tmp2*u(5,i,j+1,k) )
259:                b(5,2,i,j) =  dt * ty2  &
260:      &          * ( - c2 * ( u(2,i,j+1,k)*u(3,i,j+1,k) ) * tmp2 )  &
261:      &          - dt * ty1  &
262:      &          * ( c34 - c1345 ) * tmp2 * u(2,i,j+1,k)
[...]
269:      &          * ( r43*c34 - c1345 ) * tmp2 * u(3,i,j+1,k)
270:                b(5,4,i,j) =  dt * ty2  &
271:      &          * ( - c2 * ( u(3,i,j+1,k)*u(4,i,j+1,k) ) * tmp2 )  &
272:      &          - dt * ty1 * ( c34 - c1345 ) * tmp2 * u(4,i,j+1,k)
273:                b(5,5,i,j) =  dt * ty2  &
274:      &          * ( c1 * ( u(3,i,j+1,k) * tmp1 ) )  &
275:      &          - dt * ty1 * c1345 * tmp1  &
276:      &          - dt * ty1 * dy5
277: 
278: !---------------------------------------------------------------------
279: !   form the third block sub-diagonal
280: !---------------------------------------------------------------------
281:                tmp1 = rho_i(i,j,k+1)
282:                tmp2 = tmp1 * tmp1
283:                tmp3 = tmp1 * tmp2
284: 
285:                c(1,1,i,j) = - dt * tz1 * dz1
286:                c(1,2,i,j) =   0.0d0
287:                c(1,3,i,j) =   0.0d0
288:                c(1,4,i,j) = dt * tz2
289:                c(1,5,i,j) =   0.0d0
290: 
291:                c(2,1,i,j) = dt * tz2  &
292:      &           * ( - ( u(2,i,j,k+1)*u(4,i,j,k+1) ) * tmp2 )  &
293:      &           - dt * tz1 * ( - c34 * tmp2 * u(2,i,j,k+1) )
294:                c(2,2,i,j) = dt * tz2 * ( u(4,i,j,k+1) * tmp1 )  &
295:      &           - dt * tz1 * c34 * tmp1  &
296:      &           - dt * tz1 * dz2 
297:                c(2,3,i,j) = 0.0d0
298:                c(2,4,i,j) = dt * tz2 * ( u(2,i,j,k+1) * tmp1 )
299:                c(2,5,i,j) = 0.0d0
300: 
301:                c(3,1,i,j) = dt * tz2  &
302:      &           * ( - ( u(3,i,j,k+1)*u(4,i,j,k+1) ) * tmp2 )  &
303:      &           - dt * tz1 * ( - c34 * tmp2 * u(3,i,j,k+1) )
304:                c(3,2,i,j) = 0.0d0
305:                c(3,3,i,j) = dt * tz2 * ( u(4,i,j,k+1) * tmp1 )  &
306:      &           - dt * tz1 * ( c34 * tmp1 )  &
307:      &           - dt * tz1 * dz3
308:                c(3,4,i,j) = dt * tz2 * ( u(3,i,j,k+1) * tmp1 )
309:                c(3,5,i,j) = 0.0d0
310: 
311:                c(4,1,i,j) = dt * tz2  &
312:      &        * ( - ( u(4,i,j,k+1) * tmp1 ) ** 2  &
313:      &            + c2 * ( qs(i,j,k+1) * tmp1 ) )  &
314:      &        - dt * tz1 * ( - r43 * c34 * tmp2 * u(4,i,j,k+1) )
315:                c(4,2,i,j) = dt * tz2  &
316:      &             * ( - c2 * ( u(2,i,j,k+1) * tmp1 ) )
317:                c(4,3,i,j) = dt * tz2  &
318:      &             * ( - c2 * ( u(3,i,j,k+1) * tmp1 ) )
319:                c(4,4,i,j) = dt * tz2 * ( 2.0d0 - c2 )  &
320:      &             * ( u(4,i,j,k+1) * tmp1 )  &
321:      &             - dt * tz1 * ( r43 * c34 * tmp1 )  &
322:      &             - dt * tz1 * dz4
323:                c(4,5,i,j) = dt * tz2 * c2
[...]
333:      &          - c1345 * tmp2 * u(5,i,j,k+1) )
334:                c(5,2,i,j) = dt * tz2  &
335:      &       * ( - c2 * ( u(2,i,j,k+1)*u(4,i,j,k+1) ) * tmp2 )  &
336:      &       - dt * tz1 * ( c34 - c1345 ) * tmp2 * u(2,i,j,k+1)
337:                c(5,3,i,j) = dt * tz2  &
338:      &       * ( - c2 * ( u(3,i,j,k+1)*u(4,i,j,k+1) ) * tmp2 )  &
339:      &       - dt * tz1 * ( c34 - c1345 ) * tmp2 * u(3,i,j,k+1)
[...]
345:      &       - dt * tz1 * ( r43*c34 - c1345 ) * tmp2 * u(4,i,j,k+1)
346:                c(5,5,i,j) = dt * tz2  &
347:      &       * ( c1 * ( u(4,i,j,k+1) * tmp1 ) )  &
348:      &       - dt * tz1 * c1345 * tmp1  &
349:      &       - dt * tz1 * dz5
