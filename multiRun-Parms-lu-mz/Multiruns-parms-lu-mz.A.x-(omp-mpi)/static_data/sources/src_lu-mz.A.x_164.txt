/users/user2222/NPB3.4.1-MZ/NPB3.4-MZ-MPI/LU-MZ/rhs.f90: 136 - 160
--------------------------------------------------------------------------------

136:             do i = ist, iend
137:                rsd(1,i,j,k) = rsd(1,i,j,k)  &
138:      &              + dx1 * tx1 * (            u(1,i-1,j,k)  &
139:      &                             - 2.0d+00 * u(1,i,j,k)  &
140:      &                             +           u(1,i+1,j,k) )
141:                rsd(2,i,j,k) = rsd(2,i,j,k)  &
142:      &          + tx3 * c3 * c4 * ( flux(2,i+1) - flux(2,i) )  &
143:      &              + dx2 * tx1 * (            u(2,i-1,j,k)  &
144:      &                             - 2.0d+00 * u(2,i,j,k)  &
145:      &                             +           u(2,i+1,j,k) )
146:                rsd(3,i,j,k) = rsd(3,i,j,k)  &
147:      &          + tx3 * c3 * c4 * ( flux(3,i+1) - flux(3,i) )  &
148:      &              + dx3 * tx1 * (            u(3,i-1,j,k)  &
149:      &                             - 2.0d+00 * u(3,i,j,k)  &
150:      &                             +           u(3,i+1,j,k) )
151:                rsd(4,i,j,k) = rsd(4,i,j,k)  &
152:      &          + tx3 * c3 * c4 * ( flux(4,i+1) - flux(4,i) )  &
153:      &              + dx4 * tx1 * (            u(4,i-1,j,k)  &
154:      &                             - 2.0d+00 * u(4,i,j,k)  &
155:      &                             +           u(4,i+1,j,k) )
156:                rsd(5,i,j,k) = rsd(5,i,j,k)  &
157:      &          + tx3 * c3 * c4 * ( flux(5,i+1) - flux(5,i) )  &
158:      &              + dx5 * tx1 * (            u(5,i-1,j,k)  &
159:      &                             - 2.0d+00 * u(5,i,j,k)  &
160:      &                             +           u(5,i+1,j,k) )
