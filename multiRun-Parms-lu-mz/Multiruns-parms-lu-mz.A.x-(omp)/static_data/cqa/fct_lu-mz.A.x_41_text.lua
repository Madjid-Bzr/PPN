_cqa_text_report = {
  paths = {
    {
      hint = {
        {
          details = "Calling (and then returning from) a function prevents many compiler optimizations (like vectorization), breaks control flow (which reduces pipeline performance) and executes extra instructions to save/restore the registers used inside it, which is very expensive (dozens of cycles). Consider to inline small functions.\n - unknown: 2 occurrences\n",
          title = "CALL instructions",
          txt = "Detected function call instructions.\n",
        },
        {
          title = "Type of elements and instruction set",
          txt = "91 SSE or AVX instructions are processing arithmetic or math operations on double precision FP elements in scalar mode (one at a time).\n",
        },
        {
          title = "Matching between your function (in the source code) and the binary function",
          txt = "The binary function is composed of 115 FP arithmetical operations:\n - 32: addition or subtraction (24 inside FMA instructions)\n - 83: multiply (24 inside FMA instructions)\nThe binary function is loading 424 bytes (53 double precision FP elements).\nThe binary function is storing 616 bytes (77 double precision FP elements).",
        },
        {
          title = "Arithmetic intensity",
          txt = "Arithmetic intensity is 0.11 FP operations per loaded or stored byte.",
        },
      },
      expert = {
        {
          title = "General properties",
          txt = "nb instructions    : 330\nloop length        : 1917\nused x86 registers : 16\nused mmx registers : 0\nused xmm registers : 24\nused ymm registers : 0\nused zmm registers : 7\nnb stack references: 86\nADD-SUB / MUL ratio: 0.14\n",
        },
        {
          title = "Front-end",
          txt = "MACRO FUSION NOT POSSIBLE\ninstruction fetch    : 120.00 cycles\ninstruction queue    : 165.00 cycles\ndecoding             : 165.00 cycles\nmicro-operation queue: 169.00 cycles\nfront end            : 169.00 cycles\n",
        },
        {
          title = "Back-end",
          txt = "       | P0    | P1    | P2    | P3    | P4    | P5    | P6\n--------------------------------------------------------------\nuops   | 65.50 | 65.50 | 69.50 | 69.50 | 52.50 | 52.50 | 84.00\ncycles | 65.50 | 65.50 | 69.50 | 69.50 | 52.50 | 52.50 | 84.00\n\nCycles executing div or sqrt instructions: 22.00-26.00\n",
        },
        {
          title = "Cycles summary",
          txt = "Front-end : 169.00\nDispatch  : 84.00\nDIV/SQRT  : 22.00-26.00\nOverall L1: 169.00\n",
        },
        {
          title = "Vectorization ratios",
          txt = "INT\nall    : 0%\nload   : 0%\nstore  : 0%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: 0%\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 0%\nFP\nall     : 7%\nload    : 0%\nstore   : 0%\nmul     : 0%\nadd-sub : 0%\nfma     : 0%\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 82%\nINT+FP\nall     : 6%\nload    : 0%\nstore   : 0%\nmul     : 0%\nadd-sub : 0%\nfma     : 0%\ndiv/sqrt: 0%\nother   : 51%\n",
        },
        {
          title = "Vector efficiency ratios",
          txt = "INT\nall    : 11%\nload   : 12%\nstore  : 11%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: 12%\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 10%\nFP\nall     : 15%\nload    : 12%\nstore   : 12%\nmul     : 12%\nadd-sub : 12%\nfma     : 12%\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 44%\nINT+FP\nall     : 14%\nload    : 12%\nstore   : 12%\nmul     : 12%\nadd-sub : 12%\nfma     : 12%\ndiv/sqrt: 6%\nother   : 32%\n",
        },
        {
          title = "Cycles and memory resources usage",
          txt = "Assuming all data fit into the L1 cache, each call to the function takes 169.00 cycles. At this rate:\n - 1% of peak load performance is reached (2.51 out of 128.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 5% of peak store performance is reached (3.64 out of 64.00 bytes stored per cycle (GB/s @ 1GHz))\n",
        },
        {
          title = "Front-end bottlenecks",
          txt = "Performance is limited by instruction throughput (loading/decoding program instructions to execution core) (front-end is a bottleneck).\n",
        },
        {
          title = "ASM code",
          txt = "In the binary file, the address of the function is: 1eca0\n\nInstruction                           | Nb FU | P0    | P1   | P2   | P3   | P4    | P5   | P6 | Latency | Recip. throughput\n----------------------------------------------------------------------------------------------------------------------------\nPUSH %R15                             | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R14                             | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R13                             | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nLEA (%R9),%R13                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nPUSH %R12                             | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %RBP                             | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nLEA (%R8),%RBP                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nPUSH %RBX                             | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nLEA (%RDI),%RBX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x288(%RSP),%RSP                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x2e0(%RSP),%RAX                  | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RDX,0x1e8(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RSI,0x210(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV (%RAX),%R14D                      | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RCX,0x1f0(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 2060 <@plt_start@+0x40>          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nLEA (%RAX),%R12D                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 2120 <@plt_start@+0x100>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nLEA (%RAX),%EDI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R14D,%EAX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSUB $0x2,%EAX                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EAX,%EDX                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAR $0x1f,%EDX                        | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nIDIV %R12D                            | 29    | 14.50 | 0    | 0    | 0    | 14.50 | 0    | 0  | 37-49   | 22-26\nCMP %EDX,%EDI                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJL 1ff86 <jacld_+0x12e6>              | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nIMUL %EAX,%EDI                        | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 3       | 1\nMOV %EAX,%ESI                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nADD %EDX,%EDI                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %EDI,%ESI                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %ESI,%EDI                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJGE 1ff73 <jacld_+0x12d3>             | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0x2d8(%RSP),%RCX                  | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nXOR %EAX,%EAX\nVMOVSD 0x12d90(%RIP),%XMM23           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOV %RAX,%R15                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nVMOVSD 0xee35(%RIP),%XMM9             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVADDSD %XMM23,%XMM23,%XMM5            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOVSXD (%RCX),%R9                     | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOVSXD %R14D,%RCX                     | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nVMULSD 0xee17(%RIP),%XMM23,%XMM14     | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nLEA 0x2(%RDI),%EDI                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x1299c(%RIP),%XMM1            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOV $-0x6,%R10                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nTEST %R9,%R9                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x1(%R9),%R11D                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMULSD %XMM23,%XMM9,%XMM12            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOVSXD %R11D,%R14                     | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nCMOVNS %R9,%R15                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nLEA -0x5(%R14,%R14,4),%RDX            | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nVMOVSD 0x1298c(%RIP),%XMM3            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA (%RDX,%RDX,4),%R11                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD %XMM1,%XMM3,%XMM6              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nLEA (%R15),%R8                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %RCX,%R8                         | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nVMOVSD 0x1298d(%RIP),%XMM2            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0xee0d(%RIP),%XMM10            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA (%R15),%R12                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVFMADD231SD %XMM10,%XMM2,%XMM6        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x12cd5(%RIP),%XMM11           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM6,%XMM14,%XMM8             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nNOT %R12                              | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD %XMM12,0x38(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nTEST %R8,%R8                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x12cb5(%RIP),%XMM12           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA (%R9,%R9,4),%RDX                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMULSD %XMM11,%XMM3,%XMM4             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nCMOVS %RAX,%R8                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nVMOVSD 0x12c80(%RIP),%XMM0            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOV $-0x38,%R14                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMULSD %XMM12,%XMM3,%XMM13            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nSUB %R8,%R12                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x12cbf(%RIP),%XMM16           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nTEST %R11,%R11                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0xe4cc(%RIP),%XMM7             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x12ca2(%RIP),%XMM17           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVFMADD231SD %XMM16,%XMM2,%XMM4        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM8,0x1d8(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVFMADD231SD %XMM0,%XMM1,%XMM4         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x12c2e(%RIP),%XMM8            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVFMADD132SD %XMM5,%XMM7,%XMM4         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM17,%XMM2,%XMM13       | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM4,0x28(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVFMADD231SD %XMM8,%XMM1,%XMM13        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM1,%XMM2,%XMM4              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM23,%XMM13,%XMM15           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nCMOVS %RAX,%R11                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nVMOVSD %XMM5,0x1e0(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVFMADD231SD %XMM10,%XMM3,%XMM4        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM4,%XMM14,%XMM5             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOV 0x2d0(%RSP),%R9                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSUB %R11,%R14                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x12c33(%RIP),%XMM18           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nTEST %RDX,%RDX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD %XMM15,0x40(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVADDSD %XMM3,%XMM2,%XMM15             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOV (%R9),%R9D                        | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nCMOVS %RAX,%RDX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nVMOVSD %XMM23,0x20(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVFMADD132SD %XMM1,%XMM15,%XMM10       | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM6,0x30(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM4,0x48(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nIMUL %RDX,%RCX                        | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nVMOVSD %XMM5,0x1d0(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nMOV %R15,0x220(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R11,0x218(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RDX,0x228(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nTEST %RCX,%RCX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EDI,0x250(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nVMOVSD 0x12b9f(%RIP),%XMM13           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nCMOVS %RAX,%RCX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nVMOVSD %XMM10,0x58(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nSUB %RDX,%R10                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMULSD %XMM10,%XMM14,%XMM10           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nSUB %RCX,%R10                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x12b7a(%RIP),%XMM14           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nCMP $0x2,%R9D                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMULSD %XMM14,%XMM3,%XMM4             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x12b97(%RIP),%XMM19           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM13,%XMM3,%XMM7             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM10,0x1c8(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD 0x12b29(%RIP),%XMM10           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x12b29(%RIP),%XMM9            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVFMADD231SD %XMM19,%XMM2,%XMM4        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM10,%XMM1,%XMM4        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM23,%XMM4,%XMM5             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM18,%XMM2,%XMM7        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM9,%XMM1,%XMM7         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM23,%XMM7,%XMM6             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0xef07(%RIP),%XMM4             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM4,%XMM15,%XMM7             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM5,0x60(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD 0xeefd(%RIP),%XMM5             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD %XMM6,0x50(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM5,%XMM3,%XMM6              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM5,%XMM1,%XMM7         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x68(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM4,%XMM3,%XMM7              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x12b12(%RIP),%XMM20           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVFMADD231SD %XMM4,%XMM1,%XMM6         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM4,%XMM2,%XMM6         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM6,0x70(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVADDSD %XMM15,%XMM1,%XMM6             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM4,%XMM1,%XMM7         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM5,%XMM2,%XMM7         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x78(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0xeeb5(%RIP),%XMM6,%XMM7       | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMULSD 0xeeb5(%RIP),%XMM3,%XMM6       | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x80(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVFMADD231SD 0xeeab(%RIP),%XMM2,%XMM6  | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD 0xee9a(%RIP),%XMM1,%XMM6  | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM6,%XMM6,%XMM7              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD 0xee8e(%RIP),%XMM2,%XMM6       | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x1c0(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVFMADD231SD 0xee7c(%RIP),%XMM1,%XMM6  | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD 0xee7b(%RIP),%XMM3,%XMM6  | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM6,%XMM6,%XMM7              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD 0xee6f(%RIP),%XMM1,%XMM6       | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x1b8(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD 0x12a26(%RIP),%XMM7            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVFMADD132SD 0xee4d(%RIP),%XMM6,%XMM15 | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM15,%XMM15,%XMM15           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM15,0x1b0(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD 0x12a2f(%RIP),%XMM15           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM15,%XMM3,%XMM6             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM23,%XMM3,%XMM3             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM20,%XMM2,%XMM6        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM7,%XMM1,%XMM6         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM6,0x88(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM23,%XMM1,%XMM6             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM3,%XMM11,%XMM11            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM6,%XMM0,%XMM1              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM6,0x90(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVQ 0xedd1(%RIP),%XMM0              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD 0x1266f(%RIP),%XMM23,%XMM26    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0xeae5(%RIP),%XMM24            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD %XMM3,(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVXORPD %XMM0,%XMM1,%XMM1              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVSD %XMM1,0x98(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVAPD %ZMM26,%ZMM1                  | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVXORPD %XMM0,%XMM1,%XMM1              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVSD %XMM1,0xa0(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM6,%XMM6,%XMM1              | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVMULSD %XMM6,%XMM24,%XMM6             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM1,%XMM9,%XMM9              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM1,%XMM8,%XMM8              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM6,0xa8(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD 0xedad(%RIP),%XMM6             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD %XMM9,0xb8(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM1,%XMM1,%XMM9              | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVMULSD %XMM1,%XMM6,%XMM1              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM8,0xb0(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM10,%XMM10            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM9,%XMM7,%XMM7              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM1,0x18(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD 0xea4b(%RIP),%XMM1             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM1,%XMM26,%XMM8             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM10,0xc0(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM7,0xe8(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVXORPD %XMM0,%XMM8,%XMM10             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMULSD %XMM9,%XMM4,%XMM8              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM10,0xc8(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM5,%XMM10             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM8,0xd0(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD 0xed23(%RIP),%XMM8             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD %XMM10,0xd8(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM8,%XMM10             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVAPD %ZMM23,%ZMM8                  | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVXORPD %XMM0,%XMM11,%XMM9             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVAPD %ZMM24,%ZMM11                 | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMULSD 0x1259b(%RIP),%XMM23,%XMM23    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM9,0xf0(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM3,%XMM3,%XMM9              | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVMULSD %XMM9,%XMM13,%XMM13            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM10,0xe0(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM3,%XMM24,%XMM3             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVAPD %ZMM23,%ZMM10                 | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMULSD %XMM9,%XMM12,%XMM12            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVXORPD %XMM0,%XMM10,%XMM7             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVSD %XMM7,0xf8(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM6,%XMM10             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM13,0x108(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM1,%XMM23,%XMM7             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0xeca6(%RIP),%XMM13            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM9,%XMM14,%XMM14            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM3,0x1a8(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM15,%XMM15            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM12,0x100(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVXORPD %XMM0,%XMM7,%XMM3              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMULSD %XMM9,%XMM4,%XMM12             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM10,0x10(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM13,%XMM7             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM3,0x110(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM5,%XMM10             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM14,0x118(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM8,%XMM2,%XMM9              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM12,0x120(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM7,0x130(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM10,0x128(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM15,0x138(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM16,%XMM2             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM9,0x140(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0x124d5(%RIP),%XMM8,%XMM24     | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM9,%XMM6,%XMM6              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVXORPD %XMM0,%XMM2,%XMM3              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVSD %XMM3,0x148(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM1,%XMM24,%XMM10            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVAPD %ZMM24,%ZMM8                  | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVSD 0xebf7(%RIP),%XMM3             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVXORPD %XMM0,%XMM8,%XMM14             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMULSD %XMM9,%XMM17,%XMM12            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM14,0x150(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM11,%XMM7             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM6,0x1a0(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVXORPD %XMM0,%XMM10,%XMM13            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMULSD %XMM9,%XMM18,%XMM15            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM12,0x158(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM19,%XMM2             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM13,0x160(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM5,%XMM5              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x198(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM4,%XMM4              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM15,0x168(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM3,%XMM8              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM2,0x170(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM20,%XMM9             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM5,0x178(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM4,0x180(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM8,0x188(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM9,0x190(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nJLE 1ff73 <jacld_+0x12d3>             | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOVSXD %EDI,%RAX                      | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA 0x2(%RSI),%ESI                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,%RDI                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nIMUL 0x218(%RSP),%RAX                 | 1     | 0     | 0    | 1    | 0    | 1     | 0    | 0  | 5       | 2\nSUB $0x1,%RDI                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x1c0(%RBP),%RBP                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %RDI,%R15                        | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nLEA 0x1c0(%R13),%R13                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %ESI,0x254(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD %R14,%RAX                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %RDX,%RDI                        | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOVSXD (%RBX),%R14                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RAX,0x1f8(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R15),%R11                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RBP,0x260(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%RDX),%R15                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R13,0x268(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R14),%RDX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %R8,%RDX                         | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nVMOVSD 0xe85c(%RIP),%XMM8             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nIMUL %RCX,%R14                        | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOV %RDX,%RBX                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSUB %R8,%RDX                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R12,%RBX                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R12,%RDX                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RBX,0x230(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R14),%RAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R14),%RBX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSUB %R15,%R14                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSUB %RCX,%RBX                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSUB %RCX,%R14                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x2c0(%RSP),%R12                  | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RBX,%R8                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV 0x2c8(%RSP),%RCX                  | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nADD %R10,%RAX                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,0x238(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD %R10,%R8                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD $0x1c0,%R12                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x3(%R9),%R10D                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD $0x1c0,%RCX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x3(%R10),%R15                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RDX,0x240(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R8,0x248(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R14,0x258(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RCX,0x278(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R12,0x270(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nNOPW %CS:(%RAX,%RAX,1)                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nNOPL (%RAX)                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA 0x288(%RSP),%RSP                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nPOP %RBX                              | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %RBP                              | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R12                              | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R13                              | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R14                              | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R15                              | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nRET\nADD $0x1,%EAX                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EDX,%EDX\nJMP 1ed03 <jacld_+0x63>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\n",
        },
      },
      header = {
        "Warnings:\nDetected a function call instruction: ignoring called function instructions.\nRerun with --follow-calls=append to include them to analysis  or with --follow-calls=inline to simulate inlining.",
        "2% of peak computational performance is used (0.68 out of 32.00 FLOP per cycle (GFLOPS @ 1GHz))",
      },
      brief = {
      },
      gain = {
        {
          workaround = " - Try to reorganize arrays of structures to structures of arrays\n - Consider to permute loops (see vectorization gain report)\n - To reference allocatable arrays, use \"allocatable\" instead of \"pointer\" pointers or qualify them with the \"contiguous\" attribute (Fortran 2008)\n - For structures, limit to one indirection. For example, use a_b%c instead of a%b%c with a_b set to a%b before this function\n",
          title = "Code clean check",
          txt = "Detected a slowdown caused by scalar integer instructions (typically used for address computation).\nBy removing them, you can lower the cost of an iteration from 169.00 to 106.00 cycles (1.59x speedup).",
        },
        {
          workaround = " - Try another compiler or update/tune your current one\n - Make array accesses unit-stride:\n  * If your function streams arrays of structures (AoS), try to use structures of arrays instead (SoA):\ndo i a(i)%x = b(i)%x (slow, non stride 1) => do i a%x(i) = b%x(i) (fast, stride 1)\n",
          details = "Store and arithmetical SSE/AVX instructions are used in scalar version (process only one data element in vector registers).\nSince your execution units are vector units, only a vectorized function can use their full power.\n",
          title = "Vectorization",
          txt = "Your function is probably not vectorized.\nOnly 14% of vector register length is used (average across all SSE/AVX instructions).\nBy vectorizing your function, you can lower the cost of an iteration from 169.00 to 17.22 cycles (9.81x speedup).",
        },
        {
          title = "Execution units bottlenecks",
          txt = "Found no such bottlenecks but see expert reports for more complex bottlenecks.",
        },
      },
      potential = {
        {
          workaround = "Try to change order in which elements are evaluated (using parentheses) in arithmetic expressions containing both ADD/SUB and MUL operations to enable your compiler to generate FMA instructions wherever possible.\nFor instance a + b*c is a valid FMA (MUL then ADD).\nHowever (a+b)* c cannot be translated into an FMA (ADD then MUL).",
          title = "FMA",
          txt = "Detected 24 FMA (fused multiply-add) operations.\nPresence of both ADD/SUB and MUL operations.",
        },
      },
    },
  },
  AVG = {
      hint = {
        {
          details = "Calling (and then returning from) a function prevents many compiler optimizations (like vectorization), breaks control flow (which reduces pipeline performance) and executes extra instructions to save/restore the registers used inside it, which is very expensive (dozens of cycles). Consider to inline small functions.\n - unknown: 2 occurrences\n",
          title = "CALL instructions",
          txt = "Detected function call instructions.\n",
        },
        {
          title = "Type of elements and instruction set",
          txt = "91 SSE or AVX instructions are processing arithmetic or math operations on double precision FP elements in scalar mode (one at a time).\n",
        },
        {
          title = "Matching between your function (in the source code) and the binary function",
          txt = "The binary function is composed of 115 FP arithmetical operations:\n - 32: addition or subtraction (24 inside FMA instructions)\n - 83: multiply (24 inside FMA instructions)\nThe binary function is loading 424 bytes (53 double precision FP elements).\nThe binary function is storing 616 bytes (77 double precision FP elements).",
        },
        {
          title = "Arithmetic intensity",
          txt = "Arithmetic intensity is 0.11 FP operations per loaded or stored byte.",
        },
      },
      expert = {
        {
          title = "General properties",
          txt = "nb instructions    : 330\nloop length        : 1917\nused x86 registers : 16\nused mmx registers : 0\nused xmm registers : 24\nused ymm registers : 0\nused zmm registers : 7\nnb stack references: 86\nADD-SUB / MUL ratio: 0.14\n",
        },
        {
          title = "Front-end",
          txt = "MACRO FUSION NOT POSSIBLE\ninstruction fetch    : 120.00 cycles\ninstruction queue    : 165.00 cycles\ndecoding             : 165.00 cycles\nmicro-operation queue: 169.00 cycles\nfront end            : 169.00 cycles\n",
        },
        {
          title = "Back-end",
          txt = "       | P0    | P1    | P2    | P3    | P4    | P5    | P6\n--------------------------------------------------------------\nuops   | 65.50 | 65.50 | 69.50 | 69.50 | 52.50 | 52.50 | 84.00\ncycles | 65.50 | 65.50 | 69.50 | 69.50 | 52.50 | 52.50 | 84.00\n\nCycles executing div or sqrt instructions: 22.00-26.00\n",
        },
        {
          title = "Cycles summary",
          txt = "Front-end : 169.00\nDispatch  : 84.00\nDIV/SQRT  : 22.00-26.00\nOverall L1: 169.00\n",
        },
        {
          title = "Vectorization ratios",
          txt = "INT\nall    : 0%\nload   : 0%\nstore  : 0%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: 0%\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 0%\nFP\nall     : 7%\nload    : 0%\nstore   : 0%\nmul     : 0%\nadd-sub : 0%\nfma     : 0%\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 82%\nINT+FP\nall     : 6%\nload    : 0%\nstore   : 0%\nmul     : 0%\nadd-sub : 0%\nfma     : 0%\ndiv/sqrt: 0%\nother   : 51%\n",
        },
        {
          title = "Vector efficiency ratios",
          txt = "INT\nall    : 11%\nload   : 12%\nstore  : 11%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: 12%\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 10%\nFP\nall     : 15%\nload    : 12%\nstore   : 12%\nmul     : 12%\nadd-sub : 12%\nfma     : 12%\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 44%\nINT+FP\nall     : 14%\nload    : 12%\nstore   : 12%\nmul     : 12%\nadd-sub : 12%\nfma     : 12%\ndiv/sqrt: 6%\nother   : 32%\n",
        },
        {
          title = "Cycles and memory resources usage",
          txt = "Assuming all data fit into the L1 cache, each call to the function takes 169.00 cycles. At this rate:\n - 1% of peak load performance is reached (2.51 out of 128.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 5% of peak store performance is reached (3.64 out of 64.00 bytes stored per cycle (GB/s @ 1GHz))\n",
        },
        {
          title = "Front-end bottlenecks",
          txt = "Performance is limited by instruction throughput (loading/decoding program instructions to execution core) (front-end is a bottleneck).\n",
        },
        {
          title = "ASM code",
          txt = "In the binary file, the address of the function is: 1eca0\n\nInstruction                           | Nb FU | P0    | P1   | P2   | P3   | P4    | P5   | P6 | Latency | Recip. throughput\n----------------------------------------------------------------------------------------------------------------------------\nPUSH %R15                             | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R14                             | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R13                             | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nLEA (%R9),%R13                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nPUSH %R12                             | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %RBP                             | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nLEA (%R8),%RBP                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nPUSH %RBX                             | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nLEA (%RDI),%RBX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x288(%RSP),%RSP                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x2e0(%RSP),%RAX                  | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RDX,0x1e8(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RSI,0x210(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV (%RAX),%R14D                      | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RCX,0x1f0(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 2060 <@plt_start@+0x40>          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nLEA (%RAX),%R12D                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 2120 <@plt_start@+0x100>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nLEA (%RAX),%EDI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R14D,%EAX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSUB $0x2,%EAX                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EAX,%EDX                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAR $0x1f,%EDX                        | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nIDIV %R12D                            | 29    | 14.50 | 0    | 0    | 0    | 14.50 | 0    | 0  | 37-49   | 22-26\nCMP %EDX,%EDI                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJL 1ff86 <jacld_+0x12e6>              | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nIMUL %EAX,%EDI                        | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 3       | 1\nMOV %EAX,%ESI                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nADD %EDX,%EDI                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %EDI,%ESI                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %ESI,%EDI                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJGE 1ff73 <jacld_+0x12d3>             | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0x2d8(%RSP),%RCX                  | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nXOR %EAX,%EAX\nVMOVSD 0x12d90(%RIP),%XMM23           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOV %RAX,%R15                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nVMOVSD 0xee35(%RIP),%XMM9             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVADDSD %XMM23,%XMM23,%XMM5            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOVSXD (%RCX),%R9                     | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOVSXD %R14D,%RCX                     | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nVMULSD 0xee17(%RIP),%XMM23,%XMM14     | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nLEA 0x2(%RDI),%EDI                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x1299c(%RIP),%XMM1            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOV $-0x6,%R10                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nTEST %R9,%R9                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x1(%R9),%R11D                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMULSD %XMM23,%XMM9,%XMM12            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOVSXD %R11D,%R14                     | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nCMOVNS %R9,%R15                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nLEA -0x5(%R14,%R14,4),%RDX            | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nVMOVSD 0x1298c(%RIP),%XMM3            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA (%RDX,%RDX,4),%R11                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD %XMM1,%XMM3,%XMM6              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nLEA (%R15),%R8                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %RCX,%R8                         | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nVMOVSD 0x1298d(%RIP),%XMM2            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0xee0d(%RIP),%XMM10            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA (%R15),%R12                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVFMADD231SD %XMM10,%XMM2,%XMM6        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x12cd5(%RIP),%XMM11           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM6,%XMM14,%XMM8             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nNOT %R12                              | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD %XMM12,0x38(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nTEST %R8,%R8                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x12cb5(%RIP),%XMM12           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA (%R9,%R9,4),%RDX                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMULSD %XMM11,%XMM3,%XMM4             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nCMOVS %RAX,%R8                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nVMOVSD 0x12c80(%RIP),%XMM0            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOV $-0x38,%R14                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMULSD %XMM12,%XMM3,%XMM13            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nSUB %R8,%R12                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x12cbf(%RIP),%XMM16           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nTEST %R11,%R11                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0xe4cc(%RIP),%XMM7             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x12ca2(%RIP),%XMM17           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVFMADD231SD %XMM16,%XMM2,%XMM4        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM8,0x1d8(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVFMADD231SD %XMM0,%XMM1,%XMM4         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x12c2e(%RIP),%XMM8            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVFMADD132SD %XMM5,%XMM7,%XMM4         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM17,%XMM2,%XMM13       | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM4,0x28(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVFMADD231SD %XMM8,%XMM1,%XMM13        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM1,%XMM2,%XMM4              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM23,%XMM13,%XMM15           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nCMOVS %RAX,%R11                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nVMOVSD %XMM5,0x1e0(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVFMADD231SD %XMM10,%XMM3,%XMM4        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM4,%XMM14,%XMM5             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOV 0x2d0(%RSP),%R9                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSUB %R11,%R14                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x12c33(%RIP),%XMM18           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nTEST %RDX,%RDX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD %XMM15,0x40(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVADDSD %XMM3,%XMM2,%XMM15             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOV (%R9),%R9D                        | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nCMOVS %RAX,%RDX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nVMOVSD %XMM23,0x20(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVFMADD132SD %XMM1,%XMM15,%XMM10       | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM6,0x30(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM4,0x48(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nIMUL %RDX,%RCX                        | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nVMOVSD %XMM5,0x1d0(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nMOV %R15,0x220(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R11,0x218(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RDX,0x228(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nTEST %RCX,%RCX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EDI,0x250(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nVMOVSD 0x12b9f(%RIP),%XMM13           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nCMOVS %RAX,%RCX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nVMOVSD %XMM10,0x58(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nSUB %RDX,%R10                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMULSD %XMM10,%XMM14,%XMM10           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nSUB %RCX,%R10                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x12b7a(%RIP),%XMM14           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nCMP $0x2,%R9D                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMULSD %XMM14,%XMM3,%XMM4             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x12b97(%RIP),%XMM19           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM13,%XMM3,%XMM7             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM10,0x1c8(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD 0x12b29(%RIP),%XMM10           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x12b29(%RIP),%XMM9            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVFMADD231SD %XMM19,%XMM2,%XMM4        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM10,%XMM1,%XMM4        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM23,%XMM4,%XMM5             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM18,%XMM2,%XMM7        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM9,%XMM1,%XMM7         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM23,%XMM7,%XMM6             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0xef07(%RIP),%XMM4             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM4,%XMM15,%XMM7             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM5,0x60(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD 0xeefd(%RIP),%XMM5             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD %XMM6,0x50(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM5,%XMM3,%XMM6              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM5,%XMM1,%XMM7         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x68(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM4,%XMM3,%XMM7              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x12b12(%RIP),%XMM20           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVFMADD231SD %XMM4,%XMM1,%XMM6         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM4,%XMM2,%XMM6         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM6,0x70(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVADDSD %XMM15,%XMM1,%XMM6             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM4,%XMM1,%XMM7         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM5,%XMM2,%XMM7         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x78(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0xeeb5(%RIP),%XMM6,%XMM7       | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMULSD 0xeeb5(%RIP),%XMM3,%XMM6       | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x80(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVFMADD231SD 0xeeab(%RIP),%XMM2,%XMM6  | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD 0xee9a(%RIP),%XMM1,%XMM6  | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM6,%XMM6,%XMM7              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD 0xee8e(%RIP),%XMM2,%XMM6       | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x1c0(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVFMADD231SD 0xee7c(%RIP),%XMM1,%XMM6  | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD 0xee7b(%RIP),%XMM3,%XMM6  | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM6,%XMM6,%XMM7              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD 0xee6f(%RIP),%XMM1,%XMM6       | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x1b8(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD 0x12a26(%RIP),%XMM7            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVFMADD132SD 0xee4d(%RIP),%XMM6,%XMM15 | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM15,%XMM15,%XMM15           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM15,0x1b0(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD 0x12a2f(%RIP),%XMM15           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM15,%XMM3,%XMM6             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM23,%XMM3,%XMM3             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM20,%XMM2,%XMM6        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM7,%XMM1,%XMM6         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM6,0x88(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM23,%XMM1,%XMM6             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM3,%XMM11,%XMM11            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM6,%XMM0,%XMM1              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM6,0x90(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVQ 0xedd1(%RIP),%XMM0              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD 0x1266f(%RIP),%XMM23,%XMM26    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0xeae5(%RIP),%XMM24            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD %XMM3,(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVXORPD %XMM0,%XMM1,%XMM1              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVSD %XMM1,0x98(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVAPD %ZMM26,%ZMM1                  | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVXORPD %XMM0,%XMM1,%XMM1              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVSD %XMM1,0xa0(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM6,%XMM6,%XMM1              | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVMULSD %XMM6,%XMM24,%XMM6             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM1,%XMM9,%XMM9              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM1,%XMM8,%XMM8              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM6,0xa8(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD 0xedad(%RIP),%XMM6             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD %XMM9,0xb8(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM1,%XMM1,%XMM9              | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVMULSD %XMM1,%XMM6,%XMM1              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM8,0xb0(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM10,%XMM10            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM9,%XMM7,%XMM7              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM1,0x18(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD 0xea4b(%RIP),%XMM1             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM1,%XMM26,%XMM8             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM10,0xc0(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM7,0xe8(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVXORPD %XMM0,%XMM8,%XMM10             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMULSD %XMM9,%XMM4,%XMM8              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM10,0xc8(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM5,%XMM10             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM8,0xd0(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD 0xed23(%RIP),%XMM8             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD %XMM10,0xd8(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM8,%XMM10             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVAPD %ZMM23,%ZMM8                  | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVXORPD %XMM0,%XMM11,%XMM9             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVAPD %ZMM24,%ZMM11                 | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMULSD 0x1259b(%RIP),%XMM23,%XMM23    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM9,0xf0(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM3,%XMM3,%XMM9              | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVMULSD %XMM9,%XMM13,%XMM13            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM10,0xe0(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM3,%XMM24,%XMM3             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVAPD %ZMM23,%ZMM10                 | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMULSD %XMM9,%XMM12,%XMM12            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVXORPD %XMM0,%XMM10,%XMM7             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVSD %XMM7,0xf8(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM6,%XMM10             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM13,0x108(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM1,%XMM23,%XMM7             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0xeca6(%RIP),%XMM13            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM9,%XMM14,%XMM14            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM3,0x1a8(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM15,%XMM15            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM12,0x100(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVXORPD %XMM0,%XMM7,%XMM3              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMULSD %XMM9,%XMM4,%XMM12             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM10,0x10(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM13,%XMM7             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM3,0x110(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM5,%XMM10             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM14,0x118(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM8,%XMM2,%XMM9              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM12,0x120(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM7,0x130(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM10,0x128(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM15,0x138(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM16,%XMM2             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM9,0x140(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0x124d5(%RIP),%XMM8,%XMM24     | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM9,%XMM6,%XMM6              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVXORPD %XMM0,%XMM2,%XMM3              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVSD %XMM3,0x148(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM1,%XMM24,%XMM10            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVAPD %ZMM24,%ZMM8                  | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMOVSD 0xebf7(%RIP),%XMM3             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVXORPD %XMM0,%XMM8,%XMM14             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMULSD %XMM9,%XMM17,%XMM12            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM14,0x150(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM11,%XMM7             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM6,0x1a0(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVXORPD %XMM0,%XMM10,%XMM13            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nVMULSD %XMM9,%XMM18,%XMM15            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM12,0x158(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM19,%XMM2             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM13,0x160(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM5,%XMM5              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x198(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM4,%XMM4              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM15,0x168(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM3,%XMM8              | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM2,0x170(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM20,%XMM9             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM5,0x178(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM4,0x180(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM8,0x188(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM9,0x190(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nJLE 1ff73 <jacld_+0x12d3>             | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOVSXD %EDI,%RAX                      | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA 0x2(%RSI),%ESI                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,%RDI                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nIMUL 0x218(%RSP),%RAX                 | 1     | 0     | 0    | 1    | 0    | 1     | 0    | 0  | 5       | 2\nSUB $0x1,%RDI                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x1c0(%RBP),%RBP                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %RDI,%R15                        | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nLEA 0x1c0(%R13),%R13                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %ESI,0x254(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD %R14,%RAX                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %RDX,%RDI                        | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOVSXD (%RBX),%R14                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RAX,0x1f8(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R15),%R11                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RBP,0x260(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%RDX),%R15                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R13,0x268(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R14),%RDX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %R8,%RDX                         | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nVMOVSD 0xe85c(%RIP),%XMM8             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nIMUL %RCX,%R14                        | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOV %RDX,%RBX                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSUB %R8,%RDX                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R12,%RBX                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R12,%RDX                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RBX,0x230(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R14),%RAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R14),%RBX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSUB %R15,%R14                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSUB %RCX,%RBX                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSUB %RCX,%R14                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x2c0(%RSP),%R12                  | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RBX,%R8                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV 0x2c8(%RSP),%RCX                  | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nADD %R10,%RAX                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,0x238(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD %R10,%R8                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD $0x1c0,%R12                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x3(%R9),%R10D                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD $0x1c0,%RCX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x3(%R10),%R15                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RDX,0x240(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R8,0x248(%RSP)                   | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R14,0x258(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RCX,0x278(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R12,0x270(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nNOPW %CS:(%RAX,%RAX,1)                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nNOPL (%RAX)                           | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA 0x288(%RSP),%RSP                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nPOP %RBX                              | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %RBP                              | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R12                              | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R13                              | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R14                              | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R15                              | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nRET\nADD $0x1,%EAX                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EDX,%EDX\nJMP 1ed03 <jacld_+0x63>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\n",
        },
      },
      header = {
        "Warnings:\nDetected a function call instruction: ignoring called function instructions.\nRerun with --follow-calls=append to include them to analysis  or with --follow-calls=inline to simulate inlining.",
        "2% of peak computational performance is used (0.68 out of 32.00 FLOP per cycle (GFLOPS @ 1GHz))",
      },
      brief = {
      },
      gain = {
        {
          workaround = " - Try to reorganize arrays of structures to structures of arrays\n - Consider to permute loops (see vectorization gain report)\n - To reference allocatable arrays, use \"allocatable\" instead of \"pointer\" pointers or qualify them with the \"contiguous\" attribute (Fortran 2008)\n - For structures, limit to one indirection. For example, use a_b%c instead of a%b%c with a_b set to a%b before this function\n",
          title = "Code clean check",
          txt = "Detected a slowdown caused by scalar integer instructions (typically used for address computation).\nBy removing them, you can lower the cost of an iteration from 169.00 to 106.00 cycles (1.59x speedup).",
        },
        {
          workaround = " - Try another compiler or update/tune your current one\n - Make array accesses unit-stride:\n  * If your function streams arrays of structures (AoS), try to use structures of arrays instead (SoA):\ndo i a(i)%x = b(i)%x (slow, non stride 1) => do i a%x(i) = b%x(i) (fast, stride 1)\n",
          details = "Store and arithmetical SSE/AVX instructions are used in scalar version (process only one data element in vector registers).\nSince your execution units are vector units, only a vectorized function can use their full power.\n",
          title = "Vectorization",
          txt = "Your function is probably not vectorized.\nOnly 14% of vector register length is used (average across all SSE/AVX instructions).\nBy vectorizing your function, you can lower the cost of an iteration from 169.00 to 17.22 cycles (9.81x speedup).",
        },
        {
          title = "Execution units bottlenecks",
          txt = "Found no such bottlenecks but see expert reports for more complex bottlenecks.",
        },
      },
      potential = {
        {
          workaround = "Try to change order in which elements are evaluated (using parentheses) in arithmetic expressions containing both ADD/SUB and MUL operations to enable your compiler to generate FMA instructions wherever possible.\nFor instance a + b*c is a valid FMA (MUL then ADD).\nHowever (a+b)* c cannot be translated into an FMA (ADD then MUL).",
          title = "FMA",
          txt = "Detected 24 FMA (fused multiply-add) operations.\nPresence of both ADD/SUB and MUL operations.",
        },
      },
    },
  common = {
    header = {
      "The function is defined in /users/user2222/NPB3.4.1-MZ/NPB3.4-MZ-OMP/LU-MZ/jacld.f90:5,39-59,65-73,79-87,93-94,107-172,182-188,194-245,255-259,266-273,279-320,330,337-349,356.\n",
      "Warnings:\nIgnoring paths for analysis",
    },
  },
}
