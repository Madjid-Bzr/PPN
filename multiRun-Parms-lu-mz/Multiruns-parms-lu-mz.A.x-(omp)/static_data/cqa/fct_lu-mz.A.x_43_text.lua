_cqa_text_report = {
  paths = {
    {
      hint = {
        {
          details = "Calling (and then returning from) a function prevents many compiler optimizations (like vectorization), breaks control flow (which reduces pipeline performance) and executes extra instructions to save/restore the registers used inside it, which is very expensive (dozens of cycles). Consider to inline small functions.\n - unknown: 2 occurrences\n",
          title = "CALL instructions",
          txt = "Detected function call instructions.\n",
        },
        {
          workaround = "Avoid mixing data with different types. In particular, check if the type of constants is the same as array elements.",
          details = " - CLTQ: 1 occurrences\n",
          title = "Conversion instructions",
          txt = "Detected expensive conversion instructions.",
        },
        {
          title = "Type of elements and instruction set",
          txt = "94 SSE or AVX instructions are processing arithmetic or math operations on double precision FP elements in scalar mode (one at a time).\n4 AVX-512 instructions are processing arithmetic or math operations on double precision FP elements in vector mode (eight at a time).\n",
        },
        {
          title = "Matching between your function (in the source code) and the binary function",
          txt = "The binary function is composed of 152 FP arithmetical operations:\n - 41: addition or subtraction (26 inside FMA instructions)\n - 111: multiply (26 inside FMA instructions)\nThe binary function is loading 776 bytes (97 double precision FP elements).\nThe binary function is storing 980 bytes (122 double precision FP elements).",
        },
        {
          title = "Arithmetic intensity",
          txt = "Arithmetic intensity is 0.09 FP operations per loaded or stored byte.",
        },
      },
      expert = {
        {
          title = "General properties",
          txt = "nb instructions    : 389\nloop length        : 2268\nused x86 registers : 16\nused mmx registers : 0\nused xmm registers : 24\nused ymm registers : 0\nused zmm registers : 16\nnb stack references: 104\nADD-SUB / MUL ratio: 0.13\n",
        },
        {
          title = "Front-end",
          txt = "MACRO FUSION NOT POSSIBLE\ninstruction fetch    : 142.00 cycles\ninstruction queue    : 194.50 cycles\ndecoding             : 194.50 cycles\nmicro-operation queue: 199.00 cycles\nfront end            : 199.00 cycles\n",
        },
        {
          title = "Back-end",
          txt = "       | P0    | P1    | P2    | P3    | P4    | P5    | P6\n---------------------------------------------------------------\nuops   | 68.00 | 68.00 | 84.50 | 84.50 | 66.50 | 66.50 | 103.00\ncycles | 68.00 | 68.00 | 84.50 | 84.50 | 66.50 | 66.50 | 103.00\n\nCycles executing div or sqrt instructions: 22.00-26.00\n",
        },
        {
          title = "Cycles summary",
          txt = "Front-end : 199.00\nDispatch  : 103.00\nDIV/SQRT  : 22.00-26.00\nOverall L1: 199.00\n",
        },
        {
          title = "Vectorization ratios",
          txt = "INT\nall    : 2%\nload   : 100%\nstore  : 0%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 0%\nFP\nall     : 8%\nload    : 15%\nstore   : 6%\nmul     : 4%\nadd-sub : 12%\nfma     : 0%\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 50%\nINT+FP\nall     : 7%\nload    : 16%\nstore   : 4%\nmul     : 4%\nadd-sub : 12%\nfma     : 0%\ndiv/sqrt: 0%\nother   : 29%\n",
        },
        {
          title = "Vector efficiency ratios",
          txt = "INT\nall    : 13%\nload   : 100%\nstore  : 11%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 9%\nFP\nall     : 18%\nload    : 18%\nstore   : 18%\nmul     : 16%\nadd-sub : 23%\nfma     : 12%\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 29%\nINT+FP\nall     : 17%\nload    : 20%\nstore   : 15%\nmul     : 16%\nadd-sub : 23%\nfma     : 12%\ndiv/sqrt: 6%\nother   : 21%\n",
        },
        {
          title = "Cycles and memory resources usage",
          txt = "Assuming all data fit into the L1 cache, each call to the function takes 199.00 cycles. At this rate:\n - 3% of peak load performance is reached (3.90 out of 128.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 7% of peak store performance is reached (4.92 out of 64.00 bytes stored per cycle (GB/s @ 1GHz))\n",
        },
        {
          title = "Front-end bottlenecks",
          txt = "Performance is limited by instruction throughput (loading/decoding program instructions to execution core) (front-end is a bottleneck).\n",
        },
        {
          title = "ASM code",
          txt = "In the binary file, the address of the function is: 20b70\n\nInstruction                          | Nb FU | P0    | P1   | P2   | P3   | P4    | P5   | P6 | Latency | Recip. throughput\n---------------------------------------------------------------------------------------------------------------------------\nPUSH %RBP                            | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nMOV %RSP,%RBP                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nPUSH %R15                            | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R14                            | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R13                            | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nLEA (%RDI),%R13                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nPUSH %R12                            | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %RBX                            | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nAND $-0x40,%RSP                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x13c0(%RSP),%RSP               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x30(%RBP),%RAX                  | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RDX,0x1c0(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RCX,0x1f8(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV (%RAX),%R12D                     | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RSI,0x240(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R8,0x158(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R9,0x150(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 2060 <@plt_start@+0x40>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nLEA (%RAX),%EBX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 2120 <@plt_start@+0x100>        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nLEA (%RAX),%ECX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R12),%EAX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSUB $0x2,%EAX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EAX,%EDX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAR $0x1f,%EDX                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nIDIV %EBX                            | 29    | 14.50 | 0    | 0    | 0    | 14.50 | 0    | 0  | 37-49   | 22-26\nCMP %EDX,%ECX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJL 25f73 <jacu_+0x5403>              | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nIMUL %EAX,%ECX                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 3       | 1\nADD %ECX,%EDX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %EDX,%EAX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %EAX,%EDX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJGE 25f44 <jacu_+0x53d4>             | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0x28(%RBP),%RSI                  | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOVSXD %R12D,%RDI                    | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nVMOVSD 0x10b0b(%RIP),%XMM5           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA -0x1(%R12),%R12D                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x10e76(%RIP),%XMM13          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOVSXD (%RSI),%R8                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nXOR %ESI,%ESI\nVMOVSD 0x10ad9(%RIP),%XMM4           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOV %RSI,%R15                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nVMOVSD 0x10e96(%RIP),%XMM0           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVADDSD %XMM4,%XMM5,%XMM6             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nTEST %R8,%R8                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x1(%R8),%EBX                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVSXD %EBX,%RCX                     | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV $-0x38,%RBX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMOVNS %R8,%R15                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nLEA -0x5(%RCX,%RCX,4),%R14           | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA (%R14,%R14,4),%R14               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD %XMM0,%XMM0,%XMM9             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nLEA (%R15),%R9                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R15),%R10                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %RDI,%R9                        | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nNOT %R10                             | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R10,%R11                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA (%R12),%ECX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMULSD %XMM13,%XMM5,%XMM1            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x10ab7(%RIP),%XMM3           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD 0xcef7(%RIP),%XMM0,%XMM12     | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nTEST %R9,%R9                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0xcf2c(%RIP),%XMM7            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVFMADD231SD %XMM7,%XMM3,%XMM6        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x10e27(%RIP),%XMM8           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM9,%XMM6,%XMM10            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nCMOVS %RSI,%R9                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nVMOVSD 0x10dbc(%RIP),%XMM17          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVFMADD231SD %XMM8,%XMM3,%XMM1        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0xc61f(%RIP),%XMM2            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nSUB %R9,%R11                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x10dc4(%RIP),%XMM14          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nTEST %R14,%R14                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMULSD %XMM14,%XMM5,%XMM15           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM17,%XMM4,%XMM1       | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nCMOVS %RSI,%R14                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nVFMADD132SD %XMM9,%XMM2,%XMM1        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM3,%XMM3,%XMM2             | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVXORPD 0xd169(%RIP),%XMM10,%XMM11    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 0.50\nMOV %R14,0x148(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nSUB %R14,%RBX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD %XMM12,0x1288(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nLEA (%R8,%R8,4),%R14                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nTEST %R14,%R14                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVXORPD 0xd146(%RIP),%XMM2,%XMM12     | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 0.50\nVMOVSD %XMM6,0x1110(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVSUBSD %XMM4,%XMM12,%XMM6            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nCMOVS %RSI,%R14                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nVSUBSD %XMM5,%XMM12,%XMM12           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x10d91(%RIP),%XMM10          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nIMUL %R14,%RDI                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nVMOVSD 0x10d2b(%RIP),%XMM18          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVFNMADD231SD %XMM7,%XMM5,%XMM6       | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFNMADD231SD %XMM7,%XMM4,%XMM12      | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM10,%XMM3,%XMM15      | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM1,0x1398(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVFMADD231SD %XMM18,%XMM4,%XMM15      | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM11,0x1120(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM15,%XMM0,%XMM1            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nTEST %RDI,%RDI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD %XMM4,%XMM3,%XMM15            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOV %R14,0x140(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nVMULSD %XMM9,%XMM6,%XMM11            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nCMOVS %RSI,%RDI                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nSUB %EAX,%R12D                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSUB %EDX,%ECX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMULSD %XMM9,%XMM12,%XMM6            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM7,%XMM5,%XMM15       | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOV 0x20(%RBP),%RAX                  | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %ECX,%EDX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV %ECX,0x1f4(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV $-0x6,%RSI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD %XMM9,0x1118(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nSUB %R14,%RSI                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV (%RAX),%ECX                      | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RSI,%R14                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nVMOVSD %XMM1,0x1280(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nMOV %RSI,%R8                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nVMOVSD %XMM15,0x1278(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nSUB %RDI,%R14                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R15,0x138(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%RCX),%ESI                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R12D,0x1f0(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nSUB $0x1,%ESI                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD %XMM11,0x1128(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nCMP $0x1,%ESI                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x10cc2(%RIP),%XMM11          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD %XMM6,0x1130(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVADDSD %XMM5,%XMM3,%XMM6             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x10c7d(%RIP),%XMM15          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x10c6b(%RIP),%XMM16          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVFMADD132SD %XMM4,%XMM6,%XMM7        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM15,%XMM5,%XMM1            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x1268(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM16,%XMM5,%XMM7            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x10c28(%RIP),%XMM19          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x10c70(%RIP),%XMM12          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x10c0e(%RIP),%XMM20          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVFMADD231SD %XMM11,%XMM3,%XMM1       | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM19,%XMM4,%XMM1       | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM1,%XMM0,%XMM2             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM12,%XMM3,%XMM7       | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM20,%XMM4,%XMM7       | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM7,%XMM0,%XMM1             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x10bde(%RIP),%XMM21          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD %XMM2,0x1270(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD 0xcfed(%RIP),%XMM2            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD %XMM1,0x1260(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD 0xcfd4(%RIP),%XMM1            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM1,%XMM6,%XMM7             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM2,%XMM4,%XMM7        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x1258(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM2,%XMM5,%XMM7             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM1,%XMM4,%XMM7        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM1,%XMM3,%XMM7        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x1250(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM1,%XMM5,%XMM7             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM1,%XMM4,%XMM7        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM2,%XMM3,%XMM7        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x1248(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVADDSD %XMM6,%XMM4,%XMM7             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD 0xcf98(%RIP),%XMM7,%XMM7      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x1240(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0xcf8f(%RIP),%XMM5,%XMM7      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD 0xcf8e(%RIP),%XMM3,%XMM7 | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD 0xcf7d(%RIP),%XMM4,%XMM7 | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM9,%XMM7,%XMM7             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x1138(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0xcf67(%RIP),%XMM3,%XMM7      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD 0xcf5e(%RIP),%XMM4,%XMM7 | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD 0xcf5d(%RIP),%XMM5,%XMM7 | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM9,%XMM7,%XMM7             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x1140(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0xcf47(%RIP),%XMM4,%XMM7      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVFMADD132SD 0xcf36(%RIP),%XMM7,%XMM6 | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM9,%XMM6,%XMM9             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x10b21(%RIP),%XMM7           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x10b49(%RIP),%XMM6           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD %XMM9,0x1148(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM7,%XMM5,%XMM9             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM6,%XMM3,%XMM9        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM21,%XMM4,%XMM9       | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM9,0x1238(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM3,%XMM0,%XMM9             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM9,%XMM8,%XMM3             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM9,0x13b8(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM10,%XMM10           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0xcbbf(%RIP),%XMM22           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM9,%XMM12,%XMM12           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVXORPD 0xceaa(%RIP),%XMM3,%XMM8      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 0.50\nVMOVSD %XMM8,0x1390(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0x10771(%RIP),%XMM0,%XMM8     | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM10,0x1230(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM11,%XMM11           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0xcebb(%RIP),%XMM3            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD %XMM12,0x1220(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM8,0x1108(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM8,%XMM8,%XMM10            | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVMULSD %XMM8,%XMM22,%XMM8            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0xce7e(%RIP),%XMM12           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM9,%XMM3,%XMM27            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM11,0x1228(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM6,%XMM6             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM8,0x13b0(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD 0xcb61(%RIP),%XMM8            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM9,%XMM8,%XMM8             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM27,0x1150(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM1,%XMM11            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM6,0x1200(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM8,0x1158(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM2,%XMM8             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM11,0x1210(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD 0xcb24(%RIP),%XMM11           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD %XMM8,0x1218(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM12,%XMM8            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM5,%XMM0,%XMM9             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD 0x106a2(%RIP),%XMM0,%XMM12    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM8,0x1208(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM3,%XMM6             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM9,0x11f8(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM11,%XMM8            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM9,%XMM13,%XMM5            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM6,0x1168(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM14,%XMM14           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0xcdcb(%RIP),%XMM6            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM9,%XMM15,%XMM15           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM8,0x1160(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVXORPD 0xcd95(%RIP),%XMM5,%XMM13     | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 0.50\nVMULSD %XMM9,%XMM1,%XMM8             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM14,0x11f0(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM16,%XMM11           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM15,0x11e8(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM2,%XMM14            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM13,0x1388(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM6,%XMM15            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM11,0x11e0(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM7,%XMM7             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM8,0x11d8(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM4,%XMM0,%XMM9             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM14,0x11d0(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM12,%XMM22,%XMM13          | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM9,%XMM17,%XMM4            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM13,0x1100(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM15,0x11c8(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0x105c3(%RIP),%XMM0,%XMM13    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0xca3b(%RIP),%XMM11           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVXORPD 0xcd0b(%RIP),%XMM4,%XMM5      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 0.50\nVMOVSD %XMM5,0x1380(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM11,%XMM14           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x11c0(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM13,%XMM22,%XMM5           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM13,%XMM13,%XMM4           | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVMOVSD 0xcd02(%RIP),%XMM13           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM9,%XMM18,%XMM6            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM9,0x11b8(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM19,%XMM15           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM14,0x11b0(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM3,%XMM3             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM6,0x11a8(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM20,%XMM7            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM15,0x11a0(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM1,%XMM1             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM3,0x1170(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM2,%XMM2             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x1198(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM13,%XMM11           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM5,0x10f8(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM21,%XMM8            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM1,0x1190(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM2,0x1188(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM11,0x1180(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM8,0x1178(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nJLE 25f44 <jacu_+0x53d4>             | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOVSXD %EDX,%RAX                     | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA (%R15),%R12                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %RAX,%R12                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOVSXD (%R13),%R13                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVBROADCASTSD %XMM10,%ZMM22           | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 5       | 1\nVBROADCASTSD %XMM12,%ZMM30           | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 5       | 1\nVBROADCASTSD %XMM4,%ZMM26            | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 5       | 1\nVBROADCASTSD %XMM0,%ZMM0             | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 5       | 1\nVADDPD %ZMM0,%ZMM0,%ZMM10            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVAPD %ZMM12,%ZMM18                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nMOV %R12,0x248(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nVMOVAPD %ZMM4,%ZMM17                 | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nMOV 0x140(%RSP),%R12                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %R12,%RDX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nIMUL %RAX,%RDX                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOV %RDX,0x1e8(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA 0x1(%RAX),%RDX                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %RDX,%R15                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nIMUL %R12,%RDX                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nNEG %R12                             | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSUB %RDI,%R12                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R15,0x1c8(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOVSXD %ECX,%R15                     | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %R15,0xf8(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RDX,0x1e0(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV 0x148(%RSP),%RDX                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nIMUL %RDX,%RAX                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nADD %RAX,%RBX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RBX,0x190(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%RDX),%RBX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nNEG %RDX                             | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%RDX                        | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RDX,0x108(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R15,%R15,4),%RDX               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RDX,0xd8(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%RDX,%RDX,4),%R15               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x158(%RSP),%RDX                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSUB %RBX,%R15                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x18(%RBP),%RBX                  | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nADD %R15,%RAX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x150(%RSP),%R15                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSAL $0x3,%RAX                        | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %RAX,%RBX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %RAX,%RDX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RBX,0x1a0(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD %RAX,%R15                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RDX,0x1a8(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD 0x10(%RBP),%RAX                  | 1     | 0     | 0    | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nMOV %R15,0x1b0(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RAX,0x1b8(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R13),%RAX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %R9,%RAX                        | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nIMUL %RDI,%R13                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOV %RAX,%RBX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA (%R10,%RAX,1),%R10               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R11,%RBX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RAX,%R9,1),%R9                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RBX,0x198(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R13),%RDX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x2(%RCX),%EBX                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R14,%RDX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R8,%R13,1),%R8                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x3(%RCX),%R14D                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R13,%RDI,1),%RDI               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R13),%RCX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RBX),%R13D                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RSI),%EAX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EBX,0x110(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nAND $-0x8,%EBX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSHR $0x3,%R13D                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %R12,%RCX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x6,%R13                        | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nSUB %EBX,%EAX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP $0x6,%R14D                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R9,%R11,1),%R11                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RDX,0x130(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%RDI,%R12,1),%R15               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R10,0x128(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCMOVBE %ESI,%EAX                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nMOV %R8,0x120(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R14D,0x114(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCLTQ\nMOV %RCX,0x118(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%RAX,%RAX,4),%RSI               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R11,0xe8(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%RSI,%RSI,4),%RDX               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R15,0xe0(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R13,0x100(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %EBX,0xf4(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RAX,0x160(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RSI,0xd0(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RDX,0xc8(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nVMOVAPD 0xcbea(%RIP),%ZMM25          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULPD %ZMM25,%ZMM22,%ZMM14          | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVDQA64 0xcada(%RIP),%ZMM31        | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULPD %ZMM25,%ZMM30,%ZMM6           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVAPD %ZMM10,0x200(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULPD %ZMM25,%ZMM26,%ZMM15          | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVAPD 0xcc3c(%RIP),%ZMM27          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVAPD 0xcc72(%RIP),%ZMM24          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVAPD %ZMM14,0x80(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVAPD %ZMM6,0x40(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVAPD %ZMM15,(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nNOPW %CS:(%RAX,%RAX,1)               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA -0x28(%RBP),%RSP                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nPOP %RBX                             | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R12                             | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R13                             | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R14                             | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R15                             | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %RBP                             | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nRET\nADD $0x1,%EAX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EDX,%EDX\nJMP 20bdf <jacu_+0x6f>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nNOPL (%RAX)                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\n",
        },
      },
      header = {
        "Warnings:\nDetected a function call instruction: ignoring called function instructions.\nRerun with --follow-calls=append to include them to analysis  or with --follow-calls=inline to simulate inlining.",
        "2% of peak computational performance is used (0.76 out of 32.00 FLOP per cycle (GFLOPS @ 1GHz))",
      },
      brief = {
      },
      gain = {
        {
          workaround = " - Try to reorganize arrays of structures to structures of arrays\n - Consider to permute loops (see vectorization gain report)\n - To reference allocatable arrays, use \"allocatable\" instead of \"pointer\" pointers or qualify them with the \"contiguous\" attribute (Fortran 2008)\n - For structures, limit to one indirection. For example, use a_b%c instead of a%b%c with a_b set to a%b before this function\n",
          title = "Code clean check",
          txt = "Detected a slowdown caused by scalar integer instructions (typically used for address computation).\nBy removing them, you can lower the cost of an iteration from 199.00 to 112.00 cycles (1.78x speedup).",
        },
        {
          workaround = " - Try another compiler or update/tune your current one\n - Make array accesses unit-stride:\n  * If your function streams arrays of structures (AoS), try to use structures of arrays instead (SoA):\ndo i a(i)%x = b(i)%x (slow, non stride 1) => do i a%x(i) = b%x(i) (fast, stride 1)\n",
          details = "7% of SSE/AVX instructions are used in vector version (process two or more data elements in vector registers):\n - 16% of SSE/AVX loads are used in vector version.\n - 4% of SSE/AVX stores are used in vector version.\n - 12% of SSE/AVX addition or subtraction instructions are used in vector version.\n - 4% of SSE/AVX multiply instructions are used in vector version.\n - 0% of SSE/AVX fused multiply-add instructions are used in vector version.\n - 0% of SSE/AVX nil are used in vector version.\n - 29% of SSE/AVX instructions that are not load, store, addition, subtraction nor multiply instructions are used in vector version.\nSince your execution units are vector units, only a fully vectorized function can use their full power.\n",
          title = "Vectorization",
          txt = "Your function is not vectorized.\nOnly 17% of vector register length is used (average across all SSE/AVX instructions).\nBy fully vectorizing your function, you can lower the cost of an iteration from 199.00 to 92.47 cycles (2.15x speedup).",
        },
        {
          title = "Execution units bottlenecks",
          txt = "Found no such bottlenecks but see expert reports for more complex bottlenecks.",
        },
      },
      potential = {
        {
          workaround = "Try to change order in which elements are evaluated (using parentheses) in arithmetic expressions containing both ADD/SUB and MUL operations to enable your compiler to generate FMA instructions wherever possible.\nFor instance a + b*c is a valid FMA (MUL then ADD).\nHowever (a+b)* c cannot be translated into an FMA (ADD then MUL).",
          title = "FMA",
          txt = "Detected 26 FMA (fused multiply-add) operations.\nPresence of both ADD/SUB and MUL operations.",
        },
      },
    },
  },
  AVG = {
      hint = {
        {
          details = "Calling (and then returning from) a function prevents many compiler optimizations (like vectorization), breaks control flow (which reduces pipeline performance) and executes extra instructions to save/restore the registers used inside it, which is very expensive (dozens of cycles). Consider to inline small functions.\n - unknown: 2 occurrences\n",
          title = "CALL instructions",
          txt = "Detected function call instructions.\n",
        },
        {
          workaround = "Avoid mixing data with different types. In particular, check if the type of constants is the same as array elements.",
          details = " - CLTQ: 1 occurrences\n",
          title = "Conversion instructions",
          txt = "Detected expensive conversion instructions.",
        },
        {
          title = "Type of elements and instruction set",
          txt = "94 SSE or AVX instructions are processing arithmetic or math operations on double precision FP elements in scalar mode (one at a time).\n4 AVX-512 instructions are processing arithmetic or math operations on double precision FP elements in vector mode (eight at a time).\n",
        },
        {
          title = "Matching between your function (in the source code) and the binary function",
          txt = "The binary function is composed of 152 FP arithmetical operations:\n - 41: addition or subtraction (26 inside FMA instructions)\n - 111: multiply (26 inside FMA instructions)\nThe binary function is loading 776 bytes (97 double precision FP elements).\nThe binary function is storing 980 bytes (122 double precision FP elements).",
        },
        {
          title = "Arithmetic intensity",
          txt = "Arithmetic intensity is 0.09 FP operations per loaded or stored byte.",
        },
      },
      expert = {
        {
          title = "General properties",
          txt = "nb instructions    : 389\nloop length        : 2268\nused x86 registers : 16\nused mmx registers : 0\nused xmm registers : 24\nused ymm registers : 0\nused zmm registers : 16\nnb stack references: 104\nADD-SUB / MUL ratio: 0.13\n",
        },
        {
          title = "Front-end",
          txt = "MACRO FUSION NOT POSSIBLE\ninstruction fetch    : 142.00 cycles\ninstruction queue    : 194.50 cycles\ndecoding             : 194.50 cycles\nmicro-operation queue: 199.00 cycles\nfront end            : 199.00 cycles\n",
        },
        {
          title = "Back-end",
          txt = "       | P0    | P1    | P2    | P3    | P4    | P5    | P6\n---------------------------------------------------------------\nuops   | 68.00 | 68.00 | 84.50 | 84.50 | 66.50 | 66.50 | 103.00\ncycles | 68.00 | 68.00 | 84.50 | 84.50 | 66.50 | 66.50 | 103.00\n\nCycles executing div or sqrt instructions: 22.00-26.00\n",
        },
        {
          title = "Cycles summary",
          txt = "Front-end : 199.00\nDispatch  : 103.00\nDIV/SQRT  : 22.00-26.00\nOverall L1: 199.00\n",
        },
        {
          title = "Vectorization ratios",
          txt = "INT\nall    : 2%\nload   : 100%\nstore  : 0%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 0%\nFP\nall     : 8%\nload    : 15%\nstore   : 6%\nmul     : 4%\nadd-sub : 12%\nfma     : 0%\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 50%\nINT+FP\nall     : 7%\nload    : 16%\nstore   : 4%\nmul     : 4%\nadd-sub : 12%\nfma     : 0%\ndiv/sqrt: 0%\nother   : 29%\n",
        },
        {
          title = "Vector efficiency ratios",
          txt = "INT\nall    : 13%\nload   : 100%\nstore  : 11%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 9%\nFP\nall     : 18%\nload    : 18%\nstore   : 18%\nmul     : 16%\nadd-sub : 23%\nfma     : 12%\ndiv/sqrt: NA (no div/sqrt vectorizable/vectorized instructions)\nother   : 29%\nINT+FP\nall     : 17%\nload    : 20%\nstore   : 15%\nmul     : 16%\nadd-sub : 23%\nfma     : 12%\ndiv/sqrt: 6%\nother   : 21%\n",
        },
        {
          title = "Cycles and memory resources usage",
          txt = "Assuming all data fit into the L1 cache, each call to the function takes 199.00 cycles. At this rate:\n - 3% of peak load performance is reached (3.90 out of 128.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 7% of peak store performance is reached (4.92 out of 64.00 bytes stored per cycle (GB/s @ 1GHz))\n",
        },
        {
          title = "Front-end bottlenecks",
          txt = "Performance is limited by instruction throughput (loading/decoding program instructions to execution core) (front-end is a bottleneck).\n",
        },
        {
          title = "ASM code",
          txt = "In the binary file, the address of the function is: 20b70\n\nInstruction                          | Nb FU | P0    | P1   | P2   | P3   | P4    | P5   | P6 | Latency | Recip. throughput\n---------------------------------------------------------------------------------------------------------------------------\nPUSH %RBP                            | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nMOV %RSP,%RBP                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nPUSH %R15                            | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R14                            | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %R13                            | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nLEA (%RDI),%R13                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nPUSH %R12                            | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nPUSH %RBX                            | 1     | 0     | 0    | 0    | 0    | 1     | 1    | 0  | 0       | 1\nAND $-0x40,%RSP                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x13c0(%RSP),%RSP               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x30(%RBP),%RAX                  | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RDX,0x1c0(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RCX,0x1f8(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV (%RAX),%R12D                     | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RSI,0x240(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R8,0x158(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R9,0x150(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 2060 <@plt_start@+0x40>         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nLEA (%RAX),%EBX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 2120 <@plt_start@+0x100>        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nLEA (%RAX),%ECX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R12),%EAX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSUB $0x2,%EAX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EAX,%EDX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAR $0x1f,%EDX                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nIDIV %EBX                            | 29    | 14.50 | 0    | 0    | 0    | 14.50 | 0    | 0  | 37-49   | 22-26\nCMP %EDX,%ECX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJL 25f73 <jacu_+0x5403>              | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nIMUL %EAX,%ECX                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 3       | 1\nADD %ECX,%EDX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %EDX,%EAX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %EAX,%EDX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJGE 25f44 <jacu_+0x53d4>             | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0x28(%RBP),%RSI                  | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOVSXD %R12D,%RDI                    | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nVMOVSD 0x10b0b(%RIP),%XMM5           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA -0x1(%R12),%R12D                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x10e76(%RIP),%XMM13          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOVSXD (%RSI),%R8                    | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nXOR %ESI,%ESI\nVMOVSD 0x10ad9(%RIP),%XMM4           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOV %RSI,%R15                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nVMOVSD 0x10e96(%RIP),%XMM0           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVADDSD %XMM4,%XMM5,%XMM6             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nTEST %R8,%R8                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x1(%R8),%EBX                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVSXD %EBX,%RCX                     | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV $-0x38,%RBX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMOVNS %R8,%R15                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nLEA -0x5(%RCX,%RCX,4),%R14           | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA (%R14,%R14,4),%R14               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD %XMM0,%XMM0,%XMM9             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nLEA (%R15),%R9                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R15),%R10                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %RDI,%R9                        | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nNOT %R10                             | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R10,%R11                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA (%R12),%ECX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMULSD %XMM13,%XMM5,%XMM1            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x10ab7(%RIP),%XMM3           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD 0xcef7(%RIP),%XMM0,%XMM12     | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nTEST %R9,%R9                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0xcf2c(%RIP),%XMM7            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVFMADD231SD %XMM7,%XMM3,%XMM6        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x10e27(%RIP),%XMM8           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM9,%XMM6,%XMM10            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nCMOVS %RSI,%R9                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nVMOVSD 0x10dbc(%RIP),%XMM17          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVFMADD231SD %XMM8,%XMM3,%XMM1        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0xc61f(%RIP),%XMM2            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nSUB %R9,%R11                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x10dc4(%RIP),%XMM14          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nTEST %R14,%R14                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMULSD %XMM14,%XMM5,%XMM15           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM17,%XMM4,%XMM1       | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nCMOVS %RSI,%R14                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nVFMADD132SD %XMM9,%XMM2,%XMM1        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM3,%XMM3,%XMM2             | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVXORPD 0xd169(%RIP),%XMM10,%XMM11    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 0.50\nMOV %R14,0x148(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nSUB %R14,%RBX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD %XMM12,0x1288(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nLEA (%R8,%R8,4),%R14                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nTEST %R14,%R14                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVXORPD 0xd146(%RIP),%XMM2,%XMM12     | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 0.50\nVMOVSD %XMM6,0x1110(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVSUBSD %XMM4,%XMM12,%XMM6            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nCMOVS %RSI,%R14                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nVSUBSD %XMM5,%XMM12,%XMM12           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x10d91(%RIP),%XMM10          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nIMUL %R14,%RDI                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nVMOVSD 0x10d2b(%RIP),%XMM18          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVFNMADD231SD %XMM7,%XMM5,%XMM6       | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFNMADD231SD %XMM7,%XMM4,%XMM12      | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM10,%XMM3,%XMM15      | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM1,0x1398(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVFMADD231SD %XMM18,%XMM4,%XMM15      | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM11,0x1120(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM15,%XMM0,%XMM1            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nTEST %RDI,%RDI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD %XMM4,%XMM3,%XMM15            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOV %R14,0x140(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nVMULSD %XMM9,%XMM6,%XMM11            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nCMOVS %RSI,%RDI                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nSUB %EAX,%R12D                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSUB %EDX,%ECX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMULSD %XMM9,%XMM12,%XMM6            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM7,%XMM5,%XMM15       | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nMOV 0x20(%RBP),%RAX                  | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %ECX,%EDX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV %ECX,0x1f4(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV $-0x6,%RSI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD %XMM9,0x1118(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nSUB %R14,%RSI                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV (%RAX),%ECX                      | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RSI,%R14                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nVMOVSD %XMM1,0x1280(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nMOV %RSI,%R8                         | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nVMOVSD %XMM15,0x1278(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nSUB %RDI,%R14                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R15,0x138(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%RCX),%ESI                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R12D,0x1f0(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nSUB $0x1,%ESI                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD %XMM11,0x1128(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nCMP $0x1,%ESI                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x10cc2(%RIP),%XMM11          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD %XMM6,0x1130(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVADDSD %XMM5,%XMM3,%XMM6             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x10c7d(%RIP),%XMM15          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x10c6b(%RIP),%XMM16          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVFMADD132SD %XMM4,%XMM6,%XMM7        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM15,%XMM5,%XMM1            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x1268(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM16,%XMM5,%XMM7            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x10c28(%RIP),%XMM19          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x10c70(%RIP),%XMM12          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x10c0e(%RIP),%XMM20          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVFMADD231SD %XMM11,%XMM3,%XMM1       | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM19,%XMM4,%XMM1       | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM1,%XMM0,%XMM2             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM12,%XMM3,%XMM7       | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM20,%XMM4,%XMM7       | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM7,%XMM0,%XMM1             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x10bde(%RIP),%XMM21          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD %XMM2,0x1270(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD 0xcfed(%RIP),%XMM2            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD %XMM1,0x1260(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD 0xcfd4(%RIP),%XMM1            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM1,%XMM6,%XMM7             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM2,%XMM4,%XMM7        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x1258(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM2,%XMM5,%XMM7             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM1,%XMM4,%XMM7        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM1,%XMM3,%XMM7        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x1250(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM1,%XMM5,%XMM7             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM1,%XMM4,%XMM7        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM2,%XMM3,%XMM7        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x1248(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVADDSD %XMM6,%XMM4,%XMM7             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD 0xcf98(%RIP),%XMM7,%XMM7      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x1240(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0xcf8f(%RIP),%XMM5,%XMM7      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD 0xcf8e(%RIP),%XMM3,%XMM7 | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD 0xcf7d(%RIP),%XMM4,%XMM7 | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM9,%XMM7,%XMM7             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x1138(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0xcf67(%RIP),%XMM3,%XMM7      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD 0xcf5e(%RIP),%XMM4,%XMM7 | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD 0xcf5d(%RIP),%XMM5,%XMM7 | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM9,%XMM7,%XMM7             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x1140(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0xcf47(%RIP),%XMM4,%XMM7      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVFMADD132SD 0xcf36(%RIP),%XMM7,%XMM6 | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM9,%XMM6,%XMM9             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0x10b21(%RIP),%XMM7           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD 0x10b49(%RIP),%XMM6           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD %XMM9,0x1148(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM7,%XMM5,%XMM9             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM6,%XMM3,%XMM9        | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVFMADD231SD %XMM21,%XMM4,%XMM9       | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM9,0x1238(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM3,%XMM0,%XMM9             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM9,%XMM8,%XMM3             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM9,0x13b8(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM10,%XMM10           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0xcbbf(%RIP),%XMM22           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM9,%XMM12,%XMM12           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVXORPD 0xceaa(%RIP),%XMM3,%XMM8      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 0.50\nVMOVSD %XMM8,0x1390(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0x10771(%RIP),%XMM0,%XMM8     | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM10,0x1230(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM11,%XMM11           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0xcebb(%RIP),%XMM3            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD %XMM12,0x1220(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM8,0x1108(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM8,%XMM8,%XMM10            | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVMULSD %XMM8,%XMM22,%XMM8            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0xce7e(%RIP),%XMM12           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM9,%XMM3,%XMM27            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM11,0x1228(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM6,%XMM6             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM8,0x13b0(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD 0xcb61(%RIP),%XMM8            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM9,%XMM8,%XMM8             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM27,0x1150(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM1,%XMM11            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM6,0x1200(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM8,0x1158(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM2,%XMM8             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM11,0x1210(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD 0xcb24(%RIP),%XMM11           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVSD %XMM8,0x1218(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM12,%XMM8            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM5,%XMM0,%XMM9             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD 0x106a2(%RIP),%XMM0,%XMM12    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM8,0x1208(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM3,%XMM6             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM9,0x11f8(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM11,%XMM8            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM9,%XMM13,%XMM5            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM6,0x1168(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM14,%XMM14           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0xcdcb(%RIP),%XMM6            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM9,%XMM15,%XMM15           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM8,0x1160(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVXORPD 0xcd95(%RIP),%XMM5,%XMM13     | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 0.50\nVMULSD %XMM9,%XMM1,%XMM8             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM14,0x11f0(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM16,%XMM11           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM15,0x11e8(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM2,%XMM14            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM13,0x1388(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM6,%XMM15            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM11,0x11e0(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM7,%XMM7             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM8,0x11d8(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM4,%XMM0,%XMM9             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM14,0x11d0(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM12,%XMM22,%XMM13          | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMULSD %XMM9,%XMM17,%XMM4            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM13,0x1100(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM15,0x11c8(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD 0x105c3(%RIP),%XMM0,%XMM13    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD 0xca3b(%RIP),%XMM11           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVXORPD 0xcd0b(%RIP),%XMM4,%XMM5      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 2       | 0.50\nVMOVSD %XMM5,0x1380(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM11,%XMM14           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x11c0(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM13,%XMM22,%XMM5           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM13,%XMM13,%XMM4           | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 2       | 1\nVMOVSD 0xcd02(%RIP),%XMM13           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULSD %XMM9,%XMM18,%XMM6            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM9,0x11b8(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM19,%XMM15           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM14,0x11b0(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM3,%XMM3             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM6,0x11a8(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM20,%XMM7            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM15,0x11a0(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM1,%XMM1             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM3,0x1170(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM2,%XMM2             | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM7,0x1198(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM13,%XMM11           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM5,0x10f8(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULSD %XMM9,%XMM21,%XMM8            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM1,0x1190(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM2,0x1188(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM11,0x1180(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVSD %XMM8,0x1178(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nJLE 25f44 <jacu_+0x53d4>             | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOVSXD %EDX,%RAX                     | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA (%R15),%R12                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %RAX,%R12                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOVSXD (%R13),%R13                   | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVBROADCASTSD %XMM10,%ZMM22           | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 5       | 1\nVBROADCASTSD %XMM12,%ZMM30           | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 5       | 1\nVBROADCASTSD %XMM4,%ZMM26            | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 5       | 1\nVBROADCASTSD %XMM0,%ZMM0             | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 5       | 1\nVADDPD %ZMM0,%ZMM0,%ZMM10            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVAPD %ZMM12,%ZMM18                | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nMOV %R12,0x248(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nVMOVAPD %ZMM4,%ZMM17                 | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 2       | 0.50\nMOV 0x140(%RSP),%R12                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %R12,%RDX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nIMUL %RAX,%RDX                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOV %RDX,0x1e8(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA 0x1(%RAX),%RDX                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %RDX,%R15                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nIMUL %R12,%RDX                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nNEG %R12                             | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSUB %RDI,%R12                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R15,0x1c8(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOVSXD %ECX,%R15                     | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %R15,0xf8(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RDX,0x1e0(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV 0x148(%RSP),%RDX                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nIMUL %RDX,%RAX                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nADD %RAX,%RBX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RBX,0x190(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%RDX),%RBX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nNEG %RDX                             | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x3,%RDX                        | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nMOV %RDX,0x108(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R15,%R15,4),%RDX               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RDX,0xd8(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%RDX,%RDX,4),%R15               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x158(%RSP),%RDX                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSUB %RBX,%R15                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x18(%RBP),%RBX                  | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nADD %R15,%RAX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x150(%RSP),%R15                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSAL $0x3,%RAX                        | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %RAX,%RBX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %RAX,%RDX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RBX,0x1a0(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD %RAX,%R15                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RDX,0x1a8(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nADD 0x10(%RBP),%RAX                  | 1     | 0     | 0    | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nMOV %R15,0x1b0(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RAX,0x1b8(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R13),%RAX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %R9,%RAX                        | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nIMUL %RDI,%R13                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nMOV %RAX,%RBX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA (%R10,%RAX,1),%R10               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R11,%RBX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RAX,%R9,1),%R9                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RBX,0x198(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R13),%RDX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x2(%RCX),%EBX                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R14,%RDX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R8,%R13,1),%R8                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA -0x3(%RCX),%R14D                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R13,%RDI,1),%RDI               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R13),%RCX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RBX),%R13D                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RSI),%EAX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EBX,0x110(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nAND $-0x8,%EBX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSHR $0x3,%R13D                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD %R12,%RCX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSAL $0x6,%R13                        | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nSUB %EBX,%EAX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP $0x6,%R14D                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R9,%R11,1),%R11                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RDX,0x130(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%RDI,%R12,1),%R15               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R10,0x128(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCMOVBE %ESI,%EAX                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nMOV %R8,0x120(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R14D,0x114(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCLTQ\nMOV %RCX,0x118(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%RAX,%RAX,4),%RSI               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R11,0xe8(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%RSI,%RSI,4),%RDX               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R15,0xe0(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R13,0x100(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %EBX,0xf4(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RAX,0x160(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RSI,0xd0(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %RDX,0xc8(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nVMOVAPD 0xcbea(%RIP),%ZMM25          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULPD %ZMM25,%ZMM22,%ZMM14          | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVDQA64 0xcada(%RIP),%ZMM31        | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMULPD %ZMM25,%ZMM30,%ZMM6           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVAPD %ZMM10,0x200(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMULPD %ZMM25,%ZMM26,%ZMM15          | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVMOVAPD 0xcc3c(%RIP),%ZMM27          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVAPD 0xcc72(%RIP),%ZMM24          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nVMOVAPD %ZMM14,0x80(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVAPD %ZMM6,0x40(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVMOVAPD %ZMM15,(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nNOPW %CS:(%RAX,%RAX,1)               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA -0x28(%RBP),%RSP                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nPOP %RBX                             | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R12                             | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R13                             | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R14                             | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %R15                             | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nPOP %RBP                             | 2     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nRET\nADD $0x1,%EAX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EDX,%EDX\nJMP 20bdf <jacu_+0x6f>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nNOPL (%RAX)                          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\n",
        },
      },
      header = {
        "Warnings:\nDetected a function call instruction: ignoring called function instructions.\nRerun with --follow-calls=append to include them to analysis  or with --follow-calls=inline to simulate inlining.",
        "2% of peak computational performance is used (0.76 out of 32.00 FLOP per cycle (GFLOPS @ 1GHz))",
      },
      brief = {
      },
      gain = {
        {
          workaround = " - Try to reorganize arrays of structures to structures of arrays\n - Consider to permute loops (see vectorization gain report)\n - To reference allocatable arrays, use \"allocatable\" instead of \"pointer\" pointers or qualify them with the \"contiguous\" attribute (Fortran 2008)\n - For structures, limit to one indirection. For example, use a_b%c instead of a%b%c with a_b set to a%b before this function\n",
          title = "Code clean check",
          txt = "Detected a slowdown caused by scalar integer instructions (typically used for address computation).\nBy removing them, you can lower the cost of an iteration from 199.00 to 112.00 cycles (1.78x speedup).",
        },
        {
          workaround = " - Try another compiler or update/tune your current one\n - Make array accesses unit-stride:\n  * If your function streams arrays of structures (AoS), try to use structures of arrays instead (SoA):\ndo i a(i)%x = b(i)%x (slow, non stride 1) => do i a%x(i) = b%x(i) (fast, stride 1)\n",
          details = "7% of SSE/AVX instructions are used in vector version (process two or more data elements in vector registers):\n - 16% of SSE/AVX loads are used in vector version.\n - 4% of SSE/AVX stores are used in vector version.\n - 12% of SSE/AVX addition or subtraction instructions are used in vector version.\n - 4% of SSE/AVX multiply instructions are used in vector version.\n - 0% of SSE/AVX fused multiply-add instructions are used in vector version.\n - 0% of SSE/AVX nil are used in vector version.\n - 29% of SSE/AVX instructions that are not load, store, addition, subtraction nor multiply instructions are used in vector version.\nSince your execution units are vector units, only a fully vectorized function can use their full power.\n",
          title = "Vectorization",
          txt = "Your function is not vectorized.\nOnly 17% of vector register length is used (average across all SSE/AVX instructions).\nBy fully vectorizing your function, you can lower the cost of an iteration from 199.00 to 92.47 cycles (2.15x speedup).",
        },
        {
          title = "Execution units bottlenecks",
          txt = "Found no such bottlenecks but see expert reports for more complex bottlenecks.",
        },
      },
      potential = {
        {
          workaround = "Try to change order in which elements are evaluated (using parentheses) in arithmetic expressions containing both ADD/SUB and MUL operations to enable your compiler to generate FMA instructions wherever possible.\nFor instance a + b*c is a valid FMA (MUL then ADD).\nHowever (a+b)* c cannot be translated into an FMA (ADD then MUL).",
          title = "FMA",
          txt = "Detected 26 FMA (fused multiply-add) operations.\nPresence of both ADD/SUB and MUL operations.",
        },
      },
    },
  common = {
    header = {
      "The function is defined in /users/user2222/NPB3.4.1-MZ/NPB3.4-MZ-OMP/LU-MZ/jacu.f90:5,36-58,64-72,78-86,92-93,106-171,181,188-247,257-261,268-322,332-338,344-348,355.\n",
      "Warnings:\nIgnoring paths for analysis",
    },
  },
}
