/users/user2222/NPB3.4.1-MZ/NPB3.4-MZ-OMP/LU-MZ/rhs.f90: 117 - 141
--------------------------------------------------------------------------------

117:             do i = 2, nx-1
118:                rsd(1,i,j,k) = rsd(1,i,j,k)  &
119:      &              + dx1 * tx1 * (            u(1,i-1,j,k)  &
120:      &                             - 2.0d+00 * u(1,i,j,k)  &
121:      &                             +           u(1,i+1,j,k) )
122:                rsd(2,i,j,k) = rsd(2,i,j,k)  &
123:      &          + tx3 * c3 * c4 * ( flux(2,i+1) - flux(2,i) )  &
124:      &              + dx2 * tx1 * (            u(2,i-1,j,k)  &
125:      &                             - 2.0d+00 * u(2,i,j,k)  &
126:      &                             +           u(2,i+1,j,k) )
127:                rsd(3,i,j,k) = rsd(3,i,j,k)  &
128:      &          + tx3 * c3 * c4 * ( flux(3,i+1) - flux(3,i) )  &
129:      &              + dx3 * tx1 * (            u(3,i-1,j,k)  &
130:      &                             - 2.0d+00 * u(3,i,j,k)  &
131:      &                             +           u(3,i+1,j,k) )
132:                rsd(4,i,j,k) = rsd(4,i,j,k)  &
133:      &          + tx3 * c3 * c4 * ( flux(4,i+1) - flux(4,i) )  &
134:      &              + dx4 * tx1 * (            u(4,i-1,j,k)  &
135:      &                             - 2.0d+00 * u(4,i,j,k)  &
136:      &                             +           u(4,i+1,j,k) )
137:                rsd(5,i,j,k) = rsd(5,i,j,k)  &
138:      &          + tx3 * c3 * c4 * ( flux(5,i+1) - flux(5,i) )  &
139:      &              + dx5 * tx1 * (            u(5,i-1,j,k)  &
140:      &                             - 2.0d+00 * u(5,i,j,k)  &
141:      &                             +           u(5,i+1,j,k) )
