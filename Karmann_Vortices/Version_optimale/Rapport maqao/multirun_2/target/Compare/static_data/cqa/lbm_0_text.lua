_cqa_text_report = {
  paths = {
    {
      hint = {
        {
          details = "Calling (and then returning from) a function prevents many compiler optimizations (like vectorization), breaks control flow (which reduces pipeline performance) and executes extra instructions to save/restore the registers used inside it, which is very expensive (dozens of cycles). Consider to inline small functions.\n - Mesh_init: 3 occurrences\n - save_frame_all_domain: 1 occurrences\n - setup_init_state: 2 occurrences\n - unknown: 25 occurrences\n",
          title = "CALL instructions",
          txt = "Detected function call instructions.\n",
        },
        {
          workaround = "Use vector aligned instructions:\n 1) align your arrays on 64 bytes boundaries: replace { void *p = malloc (size); } with { void *p; posix_memalign (&p, 64, size); }.\n 2) inform your compiler that your arrays are vector aligned: if array 'foo' is 64 bytes-aligned, define a pointer 'p_foo' as __builtin_assume_aligned (foo, 64) and use it instead of 'foo' in the loop.\n",
          details = " - VEXTRACTF128: 1 occurrences\n - VEXTRACTF64X4: 1 occurrences\n",
          title = "Vector unaligned load/store instructions",
          txt = "Detected 2 suboptimal vector unaligned load/store instructions.\n",
        },
        {
          workaround = "Avoid mixing data with different types. In particular, check if the type of constants is the same as array elements.",
          details = " - VCVTSI2SD (INT32/64 to FP64, scalar): 4 occurrences\n - VCVTUSI2SD (INT32/64 to FP64, scalar): 1 occurrences\n",
          title = "Conversion instructions",
          txt = "Detected expensive conversion instructions.",
        },
        {
          title = "Type of elements and instruction set",
          txt = "27 SSE or AVX instructions are processing arithmetic or math operations on double precision FP elements in scalar mode (one at a time).\n2 SSE or AVX instructions are processing arithmetic or math operations on double precision FP elements in vector mode (two at a time).\n1 AVX instructions are processing arithmetic or math operations on double precision FP elements in vector mode (four at a time).\n6 AVX-512 instructions are processing arithmetic or math operations on double precision FP elements in vector mode (eight at a time).\n",
        },
        {
          title = "Matching between your loop (in the source code) and the binary loop",
          txt = "The binary loop is composed of 84 FP arithmetical operations:\n - 78: addition or subtraction (1 inside FMA instructions)\n - 3: multiply (1 inside FMA instructions)\n - 3: divide\nThe binary loop is loading 996 bytes (124 double precision FP elements).\nThe binary loop is storing 280 bytes (35 double precision FP elements).",
        },
        {
          title = "Arithmetic intensity",
          txt = "Arithmetic intensity is 0.07 FP operations per loaded or stored byte.",
        },
      },
      expert = {
        {
          title = "General properties",
          txt = "nb instructions    : 420\nloop length        : 2254\nused x86 registers : 15\nused mmx registers : 0\nused xmm registers : 15\nused ymm registers : 3\nused zmm registers : 1\nnb stack references: 56\nADD-SUB / MUL ratio: 15.00\n",
        },
        {
          title = "Front-end",
          txt = "MACRO FUSION NOT POSSIBLE\ninstruction fetch    : 141.00 cycles\ninstruction queue    : 210.00 cycles\ndecoding             : 210.00 cycles\nmicro-operation queue: 226.00 cycles\nfront end            : 226.00 cycles\n",
        },
        {
          title = "Back-end",
          txt = "       | P0    | P1    | P2    | P3    | P4     | P5     | P6\n----------------------------------------------------------------\nuops   | 45.00 | 23.00 | 66.50 | 66.50 | 132.50 | 132.50 | 42.00\ncycles | 45.00 | 23.00 | 66.50 | 66.50 | 132.50 | 132.50 | 42.00\n\nCycles executing div or sqrt instructions: 58.00-191.00\n",
        },
        {
          title = "Cycles summary",
          txt = "Front-end : 226.00\nDispatch  : 132.50\nDIV/SQRT  : 58.00-191.00\nOverall L1: 226.00\n",
        },
        {
          title = "Vectorization ratios",
          txt = "INT\nall    : 7%\nload   : 0%\nstore  : 5%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 8%\nFP\nall     : 24%\nload    : 18%\nstore   : 0%\nmul     : 0%\nadd-sub : 30%\nfma     : 0%\ndiv/sqrt: 0%\nother   : 75%\nINT+FP\nall     : 13%\nload    : 15%\nstore   : 4%\nmul     : 0%\nadd-sub : 30%\nfma     : 0%\ndiv/sqrt: 0%\nother   : 13%\n",
        },
        {
          title = "Vector efficiency ratios",
          txt = "INT\nall    : 11%\nload   : 9%\nstore  : 8%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 12%\nFP\nall     : 26%\nload    : 28%\nstore   : 12%\nmul     : 12%\nadd-sub : 32%\nfma     : 12%\ndiv/sqrt: 12%\nother   : 28%\nINT+FP\nall     : 16%\nload    : 25%\nstore   : 9%\nmul     : 12%\nadd-sub : 32%\nfma     : 12%\ndiv/sqrt: 12%\nother   : 13%\n",
        },
        {
          title = "Cycles and memory resources usage",
          txt = "Assuming all data fit into the L1 cache, each iteration of the binary loop takes 226.00 cycles. At this rate:\n - 3% of peak load performance is reached (4.41 out of 128.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 1% of peak store performance is reached (1.24 out of 64.00 bytes stored per cycle (GB/s @ 1GHz))\n",
        },
        {
          title = "Front-end bottlenecks",
          txt = "Performance is limited by instruction throughput (loading/decoding program instructions to execution core) (front-end is a bottleneck).\n\nBy removing all these bottlenecks, you can lower the cost of an iteration from 226.00 to 210.00 cycles (1.08x speedup).\n",
        },
        {
          title = "ASM code",
          txt = "In the binary file, the address of the loop is: 281a\n\nInstruction                         | Nb FU | P0    | P1   | P2   | P3   | P4    | P5   | P6 | Latency | Recip. throughput\n--------------------------------------------------------------------------------------------------------------------------\nIMUL %ESI,%ECX                      | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 3       | 1\nADD %R14D,%ECX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %ECX,0x5d4(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCMP $0x1,%R8D                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJG 22a7 <main+0xf07>                | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOVQ $0,0x658(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nLEA 0x180(%RSP),%R13                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x44000000,%EDI                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R13),%RSI                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1310 <.plt.sec@start+0x120>    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x5a0(%RSP),%ECX                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nXOR %EAX,%EAX\nMOV 0x5cc(%RSP),%R8D                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x5ac(%RSP),%R10D               | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x5a4(%RSP),%R11D               | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x5d0(%RSP),%ESI                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x5c4(%RSP),%EDI                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x5a8(%RSP),%R14D               | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x5d4(%RSP),%R15D               | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x5c8(%RSP),%EBX                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x5c0(%RSP),%R9D                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %ECX,0x28(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R8D,0x10(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV 0x5bc(%RSP),%ECX                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x5b8(%RSP),%R8D                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x180(%RSP),%EDX                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %R10D,0x40(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R11D,0x30(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %ESI,0x18(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA 0x3a53(%RIP),%RSI               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EDI,(%RSP)                     | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV $0x1,%EDI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R14D,0x38(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R15D,0x20(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %EBX,0x8(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 1270 <.plt.sec@start+0x80>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x5ac(%RSP),%EDX                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA 0x170(%RSP),%RDI                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x5a8(%RSP),%ESI                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RDI,0xc8(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 3ef0 <Mesh_init>               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x5ac(%RSP),%EDX                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA 0x160(%RSP),%RDI                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x5a8(%RSP),%ESI                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RDI,0xc0(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 3ef0 <Mesh_init>               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x5ac(%RSP),%EDX                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA 0x150(%RSP),%RDI                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x5a8(%RSP),%ESI                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RDI,0x80(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 3ef0 <Mesh_init>               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x5a8(%RSP),%EAX                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x5ac(%RSP),%R9D                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %EAX,0x148(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA 0x2(%RAX),%EAX                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R9D,0x14c(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%RAX),%EDI                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %R9D,%EDI                      | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 3       | 1\nSAL $0x2,%RDI                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nCALL 1280 <.plt.sec@start+0x90>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV %RAX,0x140(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nTEST %RAX,%RAX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 2870 <main+0x14d0>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0xe8(%RSP),%EDX                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nTEST %EDX,%EDX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 243f <main+0x109f>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0xc8(%RSP),%RDI                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA 0x5a0(%RSP),%RBX                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x140(%RSP),%R15                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RBX),%RDX                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RBX,0xa0(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R15),%RSI                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R15,0xa8(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 29c0 <setup_init_state>        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0xc0(%RSP),%RDI                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA (%RBX),%RDX                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R15),%RSI                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 29c0 <setup_init_state>        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nCMPQ $0,0x55f9(%RIP)                | 1     | 0     | 0    | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nJE 1a8a <main+0x6ea>                | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0x80(%RSP),%RDX                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA (%R12),%RDI                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0xc8(%RSP),%RSI                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nCALL 41d0 <save_frame_all_domain>   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x5590(%RIP),%EDI               | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RDI,%RBX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAL $0x3,%RDI                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nCALL 1280 <.plt.sec@start+0x90>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nLEA 0x130(%RSP),%RSI                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x4,%EDI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RAX),%R14                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1230 <.plt.sec@start+0x40>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nCMP $0x1,%EBX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJBE 258a <main+0x11ea>              | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nVMOVQ 0xc0(%RSP),%XMM4              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA 0x120(%RSP),%R11                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x3b8d(%RIP),%XMM3           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA 0x110(%RSP),%RCX                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVPINSRQ $0x1,0xc8(%RSP),%XMM4,%XMM9 | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 4       | 6\nMOV $0x1,%EBX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R14,0xb0(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA 0x108(%RSP),%R15                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R12,0x88(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R11),%R14                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD %XMM3,0xb8(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nLEA (%RCX),%R12                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVDQA %XMM9,0x90(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nNOPL (%RAX,%RAX,1)                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV 0xb0(%RSP),%R14                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x88(%RSP),%R12                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA (%R13),%RSI                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x4,%EDI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1230 <.plt.sec@start+0x40>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x188(%RSP),%R13                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV $0x44000000,%EDI                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x180(%RSP),%R8                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSUB 0x138(%RSP),%R13                | 1     | 0     | 0    | 0.50 | 0.50 | 0.50  | 0.50 | 0  | 1       | 1\nSUB 0x130(%RSP),%R8                 | 1     | 0     | 0    | 0.50 | 0.50 | 0.50  | 0.50 | 0  | 1       | 1\nVCVTSI2SD %R13,%XMM5,%XMM5          | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 5       | 1\nVCVTSI2SD %R8,%XMM1,%XMM1           | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 5       | 1\nVFMADD132SD 0xb8(%RSP),%XMM1,%XMM5  | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM5,0x108(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nCALL 11f0 <.plt.sec@start>          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x5215(%RIP),%ESI               | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOVQ $0,0x100(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nTEST %RSI,%RSI                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RSI,%R10                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nJE 2579 <main+0x11d9>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA (%R14),%RAX                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0xb,%ECX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSHR $0x3,%RAX                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA -0x1(%RSI),%R9                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nNEG %RAX                            | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nAND $0x7,%EAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,%RDX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nADD $0x7,%RDX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP $0xb,%RDX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMOVB %RCX,%RDX                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nCMP %R9,%RDX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJA 25c5 <main+0x1225>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nTEST %RAX,%RAX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 25b2 <main+0x1212>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nVMOVSD (%R14),%XMM6                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nCMP $0x1,%RAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 25a8 <main+0x1208>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMP $0x2,%RAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD 0x8(%R14),%XMM6,%XMM6        | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nJE 25d0 <main+0x1230>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMP $0x3,%RAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD 0x10(%R14),%XMM6,%XMM6       | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nJE 2642 <main+0x12a2>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMP $0x4,%RAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD 0x18(%R14),%XMM6,%XMM6       | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nJE 264c <main+0x12ac>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMP $0x5,%RAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD 0x20(%R14),%XMM6,%XMM6       | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nJE 2656 <main+0x12b6>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMP $0x7,%RAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD 0x28(%R14),%XMM6,%XMM6       | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nJNE 2609 <main+0x1269>              | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nVADDSD 0x30(%R14),%XMM6,%XMM6       | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nMOV $0x7,%EBX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVXORPD %XMM7,%XMM7,%XMM7\nLEA (%RSI),%RDI                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSUB %RAX,%RDI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R14,%RAX,8),%RAX              | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RDI,%R11                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA (%RAX),%R13                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSHR $0x3,%R11                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nSAL $0x6,%R11                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA -0x40(%R11),%R8                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R11,%R13                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSHR $0x6,%R8                        | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD $0x1,%R8                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nAND $0x7,%R8D                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 1f64 <main+0xbc4>                | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMP $0x1,%R8                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 1f55 <main+0xbb5>                | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMP $0x2,%R8                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 1f4b <main+0xbab>                | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMP $0x3,%R8                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 1f41 <main+0xba1>                | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMP $0x4,%R8                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 1f37 <main+0xb97>                | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMP $0x5,%R8                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 1f2d <main+0xb8d>                | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMP $0x6,%R8                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 1f23 <main+0xb83>                | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nVMOVAPD (%RAX),%ZMM7                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA 0x40(%RAX),%RAX                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDPD (%RAX),%ZMM7,%ZMM7           | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nLEA 0x40(%RAX),%RAX                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDPD (%RAX),%ZMM7,%ZMM7           | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nLEA 0x40(%RAX),%RAX                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDPD (%RAX),%ZMM7,%ZMM7           | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nLEA 0x40(%RAX),%RAX                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDPD (%RAX),%ZMM7,%ZMM7           | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nLEA 0x40(%RAX),%RAX                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDPD (%RAX),%ZMM7,%ZMM7           | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nLEA 0x40(%RAX),%RAX                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDPD (%RAX),%ZMM7,%ZMM7           | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nLEA 0x40(%RAX),%RAX                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %R13,%RAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 1fa7 <main+0xc07>                | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nVEXTRACTF64X4 $0x1,%ZMM7,%YMM12     | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nLEA (%RDI),%RDX                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDPD %YMM7,%YMM12,%YMM13          | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nAND $-0x8,%RDX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %RDX,%RBX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %RDI,%RDX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVEXTRACTF128 $0x1,%YMM13,%XMM14     | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVADDPD %XMM13,%XMM14,%XMM15         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVUNPCKHPD %XMM15,%XMM15,%XMM0       | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 4-7     | 2\nVADDPD %XMM15,%XMM0,%XMM5           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM6,%XMM5,%XMM6            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nJE 25bd <main+0x121d>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nVZEROUPPER                          | 19    | 0     | 0    | 0    | 0    | 0     | 0    | 0  | 0       | 36\nLEA 0x1(%RBX),%RCX                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD (%R14,%RBX,8),%XMM6,%XMM6    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nCMP %RCX,%RSI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJBE 20ba <main+0xd1a>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA 0x2(%RBX),%R9                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD (%R14,%RCX,8),%XMM6,%XMM6    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nCMP %R9,%RSI                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJBE 20ba <main+0xd1a>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA 0x3(%RBX),%RDI                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD (%R14,%R9,8),%XMM6,%XMM6     | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nCMP %RDI,%RSI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJBE 20ba <main+0xd1a>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA 0x4(%RBX),%R11                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD (%R14,%RDI,8),%XMM6,%XMM6    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nCMP %RSI,%R11                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJAE 20ba <main+0xd1a>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA 0x5(%RBX),%R13                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD (%R14,%R11,8),%XMM6,%XMM6    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nCMP %RSI,%R13                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJAE 20ba <main+0xd1a>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA 0x6(%RBX),%R8                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD (%R14,%R13,8),%XMM6,%XMM6    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nCMP %RSI,%R8                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJAE 20ba <main+0xd1a>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA 0x7(%RBX),%RAX                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD (%R14,%R8,8),%XMM6,%XMM6     | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nCMP %RSI,%RAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJAE 20ba <main+0xd1a>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA 0x8(%RBX),%RDX                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD (%R14,%RAX,8),%XMM6,%XMM6    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nCMP %RSI,%RDX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJAE 20ba <main+0xd1a>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA 0x9(%RBX),%RCX                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD (%R14,%RDX,8),%XMM6,%XMM6    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nCMP %RSI,%RCX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJAE 20ba <main+0xd1a>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA 0xa(%RBX),%R9                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD (%R14,%RCX,8),%XMM6,%XMM6    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nCMP %RSI,%R9                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJAE 20ba <main+0xd1a>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA 0xb(%RBX),%RDI                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD (%R14,%R9,8),%XMM6,%XMM6     | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nCMP %RSI,%RDI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJAE 20ba <main+0xd1a>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA 0xc(%RBX),%R11                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD (%R14,%RDI,8),%XMM6,%XMM6    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nCMP %R11,%RSI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJBE 20ba <main+0xd1a>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA 0xd(%RBX),%RBX                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD (%R14,%R11,8),%XMM6,%XMM6    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nCMP %RBX,%RSI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJBE 20ba <main+0xd1a>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nVADDSD (%R14,%RBX,8),%XMM6,%XMM6    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM6,0x100(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVCVTUSI2SD %R10D,%XMM1,%XMM1        | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 5       | 1\nXOR %R9D,%R9D\nLEA 0xf8(%RSP),%RSI                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x100(%RSP),%RDI                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x58000003,%R8D                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x4c00080b,%ECX                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVL $0x44000000,(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nMOV $0x1,%EDX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVDIVSD %XMM1,%XMM6,%XMM7            | 3     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 40-42   | 12-32\nVMOVSD %XMM7,0x100(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nCALL 1330 <.plt.sec@start+0x140>    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nXOR %R9D,%R9D\nMOV $0x58000003,%R8D                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x4c00080b,%ECX                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R15),%RDI                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0xf0(%RSP),%RSI                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x1,%EDX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVL $0x44000000,(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nCALL 1330 <.plt.sec@start+0x140>    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nVMOVSD 0x3531(%RIP),%XMM8           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA 0x32e2(%RIP),%RSI               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMULSD 0x100(%RSP),%XMM8,%XMM0      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nMOV $0x1,%EDI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0xe8(%RSP),%EDX                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV $0x1,%EAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1270 <.plt.sec@start+0x80>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0xe8(%RSP),%EDX                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA 0x32fd(%RIP),%RSI               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x108(%RSP),%XMM0            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOV $0x1,%EDI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x1,%EAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1270 <.plt.sec@start+0x80>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0xe8(%RSP),%R15D                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nTEST %R15D,%R15D                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 24de <main+0x113e>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA (%R14),%RDI                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 12c0 <.plt.sec@start+0xd0>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x658(%RSP),%RDI                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVPXOR %XMM11,%XMM11,%XMM11\nVMOVDQA %XMM11,0x5a0(%RSP)          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nMOVQ $-0x1,0x5b8(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nTEST %RDI,%RDI                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 21c8 <main+0xe28>                | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCALL 12c0 <.plt.sec@start+0xd0>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x170(%RSP),%RDI                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOVQ $0,0x178(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nCALL 12c0 <.plt.sec@start+0xd0>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x160(%RSP),%RDI                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOVQ $0,0x168(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nCALL 12c0 <.plt.sec@start+0xd0>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x150(%RSP),%RDI                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOVQ $0,0x158(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nCALL 12c0 <.plt.sec@start+0xd0>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x140(%RSP),%RDI                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOVQ $0,0x148(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nCALL 12c0 <.plt.sec@start+0xd0>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nCALL 1350 <.plt.sec@start+0x160>    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x9a8(%RSP),%RAX                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nXOR %FS:0x28,%RAX                   | 1     | 0     | 0    | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nJNE 281a <main+0x147a>              | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA (%R9),%R9D                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EDX,%EDX\nIMUL $0x48,%R9,%RAX                 | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nDIV %RSI                            | 23    | 11.50 | 0    | 0    | 0    | 11.50 | 0    | 0  | 39-95   | 22-95\nMOV %RAX,%RDI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nCALL 1280 <.plt.sec@start+0x90>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV %RAX,0x658(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nJMP 18b5 <main+0x515>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nMOV 0x4c22(%RIP),%R12               | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nTEST %R12,%R12                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 2466 <main+0x10c6>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV %R12,%RDI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA 0x2db7(%RIP),%RSI               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1290 <.plt.sec@start+0xa0>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nTEST %RAX,%RAX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RAX),%R12                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 2840 <main+0x14a0>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0x4bb7(%RIP),%R10               | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %R12,%RCX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV 0x5b4(%RSP),%R14D               | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV $0x1,%EDX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x10,%ESI                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R13),%RDI                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVL $0x12345,0x180(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nMOV %R10,0x184(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R14D,0x18c(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 1380 <.plt.sec@start+0x190>    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nJMP 1a21 <main+0x681>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nVCVTSI2SDL 0xe4(%RSP),%XMM2,%XMM2   | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 1\nLEA 0x2fc2(%RIP),%RSI               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0xf8(%RSP),%XMM3             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOV $0x1,%EDI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x1,%EAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVDIVSD %XMM2,%XMM3,%XMM4            | 3     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 40-42   | 12-32\nVMULSD 0x315b(%RIP),%XMM4,%XMM0     | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nCALL 1270 <.plt.sec@start+0x80>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nVCVTSI2SDL 0xe4(%RSP),%XMM9,%XMM9   | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 1\nLEA 0x2fbe(%RIP),%RSI               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0xf0(%RSP),%XMM10            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOV $0x1,%EDI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x1,%EAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVDIVSD %XMM9,%XMM10,%XMM0           | 3     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 40-42   | 12-32\nCALL 1270 <.plt.sec@start+0x80>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nCMPL $0,0xe8(%RSP)                  | 1     | 0     | 0    | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nJNE 2194 <main+0xdf4>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nTEST %R12,%R12                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 2194 <main+0xdf4>                | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA (%R12),%RDI                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1370 <.plt.sec@start+0x180>    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nNOP                                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nJMP 2194 <main+0xdf4>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nVMOVSD 0x100(%RSP),%XMM6            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nXOR %R10D,%R10D\nJMP 20c3 <main+0xd23>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nVMOVSD 0x30ce(%RIP),%XMM2           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA 0x108(%RSP),%R15                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD %XMM2,0xb8(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nJMP 1db0 <main+0xa10>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nMOV $0x1,%EBX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJMP 1ec4 <main+0xb24>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nVPXOR %XMM6,%XMM6,%XMM6\nXOR %EBX,%EBX\nJMP 1ec4 <main+0xb24>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nVZEROUPPER                          | 19    | 0     | 0    | 0    | 0    | 0     | 0    | 0  | 0       | 36\nJMP 20ba <main+0xd1a>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nVPXOR %XMM6,%XMM6,%XMM6\nXOR %EBX,%EBX\nJMP 1fe1 <main+0xc41>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nMOV $0x2,%EBX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJMP 1ec4 <main+0xb24>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nMOV $0x6,%EBX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJMP 1ec4 <main+0xb24>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nMOV $0x3,%EBX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJMP 1ec4 <main+0xb24>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nMOV $0x4,%EBX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJMP 1ec4 <main+0xb24>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nMOV $0x5,%EBX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJMP 1ec4 <main+0xb24>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nOR $-0x1,%ECX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJMP 1898 <main+0x4f8>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nMOVL $-0x1,0x5d0(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nTEST %ECX,%ECX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJS 267e <main+0x12de>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMP %R8D,%ECX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJL 1892 <main+0x4f2>                | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nJMP 267e <main+0x12de>              | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nCALL 1340 <.plt.sec@start+0x150>    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOVL $-0x1,0x5cc(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nJMP 2780 <main+0x13e0>              | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\n",
        },
      },
      header = {
        "Warnings:\nDetected a function call instruction: ignoring called function instructions.\nRerun with --follow-calls=append to include them to analysis  or with --follow-calls=inline to simulate inlining.",
        "1% of peak computational performance is used (0.37 out of 32.00 FLOP per cycle (GFLOPS @ 1GHz))",
      },
      brief = {
      },
      gain = {
        {
          workaround = " - Try to reorganize arrays of structures to structures of arrays\n - Consider to permute loops (see vectorization gain report)\n",
          title = "Code clean check",
          txt = "Detected a slowdown caused by scalar integer instructions (typically used for address computation).\nBy removing them, you can lower the cost of an iteration from 226.00 to 96.00 cycles (2.35x speedup).",
        },
        {
          workaround = " - Try another compiler or update/tune your current one\n - Remove inter-iterations dependences from your loop and make it unit-stride:\n  * If your arrays have 2 or more dimensions, check whether elements are accessed contiguously and, otherwise, try to permute loops accordingly:\nC storage order is row-major: for(i) for(j) a[j][i] = b[j][i]; (slow, non stride 1) => for(i) for(j) a[i][j] = b[i][j]; (fast, stride 1)\n  * If your loop streams arrays of structures (AoS), try to use structures of arrays instead (SoA):\nfor(i) a[i].x = b[i].x; (slow, non stride 1) => for(i) a.x[i] = b.x[i]; (fast, stride 1)\n",
          details = "13% of SSE/AVX instructions are used in vector version (process two or more data elements in vector registers):\n - 15% of SSE/AVX loads are used in vector version.\n - 4% of SSE/AVX stores are used in vector version.\n - 30% of SSE/AVX addition or subtraction instructions are used in vector version.\n - 0% of SSE/AVX multiply instructions are used in vector version.\n - 0% of SSE/AVX fused multiply-add instructions are used in vector version.\n - 0% of SSE/AVX nil are used in vector version.\n - 13% of SSE/AVX instructions that are not load, store, addition, subtraction nor multiply instructions are used in vector version.\nSince your execution units are vector units, only a fully vectorized loop can use their full power.\n",
          title = "Vectorization",
          txt = "Your loop is not vectorized.\nOnly 16% of vector register length is used (average across all SSE/AVX instructions).\nBy fully vectorizing your loop, you can lower the cost of an iteration from 226.00 to 160.72 cycles (1.41x speedup).",
        },
        {
          title = "Execution units bottlenecks",
          txt = "Found no such bottlenecks but see expert reports for more complex bottlenecks.",
        },
      },
      potential = {
        {
          workaround = "Try to change order in which elements are evaluated (using parentheses) in arithmetic expressions containing both ADD/SUB and MUL operations to enable your compiler to generate FMA instructions wherever possible.\nFor instance a + b*c is a valid FMA (MUL then ADD).\nHowever (a+b)* c cannot be translated into an FMA (ADD then MUL).",
          title = "FMA",
          txt = "Detected 1 FMA (fused multiply-add) operations.\nPresence of both ADD/SUB and MUL operations.",
        },
      },
    },
  },
  AVG = {
      hint = {
        {
          details = "Calling (and then returning from) a function prevents many compiler optimizations (like vectorization), breaks control flow (which reduces pipeline performance) and executes extra instructions to save/restore the registers used inside it, which is very expensive (dozens of cycles). Consider to inline small functions.\n - Mesh_init: 3 occurrences\n - save_frame_all_domain: 1 occurrences\n - setup_init_state: 2 occurrences\n - unknown: 25 occurrences\n",
          title = "CALL instructions",
          txt = "Detected function call instructions.\n",
        },
        {
          workaround = "Use vector aligned instructions:\n 1) align your arrays on 64 bytes boundaries: replace { void *p = malloc (size); } with { void *p; posix_memalign (&p, 64, size); }.\n 2) inform your compiler that your arrays are vector aligned: if array 'foo' is 64 bytes-aligned, define a pointer 'p_foo' as __builtin_assume_aligned (foo, 64) and use it instead of 'foo' in the loop.\n",
          details = " - VEXTRACTF128: 1 occurrences\n - VEXTRACTF64X4: 1 occurrences\n",
          title = "Vector unaligned load/store instructions",
          txt = "Detected 2 suboptimal vector unaligned load/store instructions.\n",
        },
        {
          workaround = "Avoid mixing data with different types. In particular, check if the type of constants is the same as array elements.",
          details = " - VCVTSI2SD (INT32/64 to FP64, scalar): 4 occurrences\n - VCVTUSI2SD (INT32/64 to FP64, scalar): 1 occurrences\n",
          title = "Conversion instructions",
          txt = "Detected expensive conversion instructions.",
        },
        {
          title = "Type of elements and instruction set",
          txt = "27 SSE or AVX instructions are processing arithmetic or math operations on double precision FP elements in scalar mode (one at a time).\n2 SSE or AVX instructions are processing arithmetic or math operations on double precision FP elements in vector mode (two at a time).\n1 AVX instructions are processing arithmetic or math operations on double precision FP elements in vector mode (four at a time).\n6 AVX-512 instructions are processing arithmetic or math operations on double precision FP elements in vector mode (eight at a time).\n",
        },
        {
          title = "Matching between your loop (in the source code) and the binary loop",
          txt = "The binary loop is composed of 84 FP arithmetical operations:\n - 78: addition or subtraction (1 inside FMA instructions)\n - 3: multiply (1 inside FMA instructions)\n - 3: divide\nThe binary loop is loading 996 bytes (124 double precision FP elements).\nThe binary loop is storing 280 bytes (35 double precision FP elements).",
        },
        {
          title = "Arithmetic intensity",
          txt = "Arithmetic intensity is 0.07 FP operations per loaded or stored byte.",
        },
      },
      expert = {
        {
          title = "General properties",
          txt = "nb instructions    : 420\nloop length        : 2254\nused x86 registers : 15\nused mmx registers : 0\nused xmm registers : 15\nused ymm registers : 3\nused zmm registers : 1\nnb stack references: 56\nADD-SUB / MUL ratio: 15.00\n",
        },
        {
          title = "Front-end",
          txt = "MACRO FUSION NOT POSSIBLE\ninstruction fetch    : 141.00 cycles\ninstruction queue    : 210.00 cycles\ndecoding             : 210.00 cycles\nmicro-operation queue: 226.00 cycles\nfront end            : 226.00 cycles\n",
        },
        {
          title = "Back-end",
          txt = "       | P0    | P1    | P2    | P3    | P4     | P5     | P6\n----------------------------------------------------------------\nuops   | 45.00 | 23.00 | 66.50 | 66.50 | 132.50 | 132.50 | 42.00\ncycles | 45.00 | 23.00 | 66.50 | 66.50 | 132.50 | 132.50 | 42.00\n\nCycles executing div or sqrt instructions: 58.00-191.00\n",
        },
        {
          title = "Cycles summary",
          txt = "Front-end : 226.00\nDispatch  : 132.50\nDIV/SQRT  : 58.00-191.00\nOverall L1: 226.00\n",
        },
        {
          title = "Vectorization ratios",
          txt = "INT\nall    : 7%\nload   : 0%\nstore  : 5%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 8%\nFP\nall     : 24%\nload    : 18%\nstore   : 0%\nmul     : 0%\nadd-sub : 30%\nfma     : 0%\ndiv/sqrt: 0%\nother   : 75%\nINT+FP\nall     : 13%\nload    : 15%\nstore   : 4%\nmul     : 0%\nadd-sub : 30%\nfma     : 0%\ndiv/sqrt: 0%\nother   : 13%\n",
        },
        {
          title = "Vector efficiency ratios",
          txt = "INT\nall    : 11%\nload   : 9%\nstore  : 8%\nmul    : NA (no mul vectorizable/vectorized instructions)\nadd-sub: NA (no add-sub vectorizable/vectorized instructions)\nfma    : NA (no fma vectorizable/vectorized instructions)\nother  : 12%\nFP\nall     : 26%\nload    : 28%\nstore   : 12%\nmul     : 12%\nadd-sub : 32%\nfma     : 12%\ndiv/sqrt: 12%\nother   : 28%\nINT+FP\nall     : 16%\nload    : 25%\nstore   : 9%\nmul     : 12%\nadd-sub : 32%\nfma     : 12%\ndiv/sqrt: 12%\nother   : 13%\n",
        },
        {
          title = "Cycles and memory resources usage",
          txt = "Assuming all data fit into the L1 cache, each iteration of the binary loop takes 226.00 cycles. At this rate:\n - 3% of peak load performance is reached (4.41 out of 128.00 bytes loaded per cycle (GB/s @ 1GHz))\n - 1% of peak store performance is reached (1.24 out of 64.00 bytes stored per cycle (GB/s @ 1GHz))\n",
        },
        {
          title = "Front-end bottlenecks",
          txt = "Performance is limited by instruction throughput (loading/decoding program instructions to execution core) (front-end is a bottleneck).\n\nBy removing all these bottlenecks, you can lower the cost of an iteration from 226.00 to 210.00 cycles (1.08x speedup).\n",
        },
        {
          title = "ASM code",
          txt = "In the binary file, the address of the loop is: 281a\n\nInstruction                         | Nb FU | P0    | P1   | P2   | P3   | P4    | P5   | P6 | Latency | Recip. throughput\n--------------------------------------------------------------------------------------------------------------------------\nIMUL %ESI,%ECX                      | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 3       | 1\nADD %R14D,%ECX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %ECX,0x5d4(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCMP $0x1,%R8D                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJG 22a7 <main+0xf07>                | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOVQ $0,0x658(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nLEA 0x180(%RSP),%R13                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x44000000,%EDI                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R13),%RSI                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1310 <.plt.sec@start+0x120>    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x5a0(%RSP),%ECX                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nXOR %EAX,%EAX\nMOV 0x5cc(%RSP),%R8D                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x5ac(%RSP),%R10D               | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x5a4(%RSP),%R11D               | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x5d0(%RSP),%ESI                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x5c4(%RSP),%EDI                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x5a8(%RSP),%R14D               | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x5d4(%RSP),%R15D               | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x5c8(%RSP),%EBX                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x5c0(%RSP),%R9D                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %ECX,0x28(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R8D,0x10(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV 0x5bc(%RSP),%ECX                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x5b8(%RSP),%R8D                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x180(%RSP),%EDX                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %R10D,0x40(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R11D,0x30(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %ESI,0x18(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA 0x3a53(%RIP),%RSI               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %EDI,(%RSP)                     | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV $0x1,%EDI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R14D,0x38(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R15D,0x20(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %EBX,0x8(%RSP)                  | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 1270 <.plt.sec@start+0x80>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x5ac(%RSP),%EDX                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA 0x170(%RSP),%RDI                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x5a8(%RSP),%ESI                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RDI,0xc8(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 3ef0 <Mesh_init>               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x5ac(%RSP),%EDX                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA 0x160(%RSP),%RDI                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x5a8(%RSP),%ESI                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RDI,0xc0(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 3ef0 <Mesh_init>               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x5ac(%RSP),%EDX                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA 0x150(%RSP),%RDI                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x5a8(%RSP),%ESI                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RDI,0x80(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 3ef0 <Mesh_init>               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x5a8(%RSP),%EAX                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x5ac(%RSP),%R9D                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %EAX,0x148(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA 0x2(%RAX),%EAX                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R9D,0x14c(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%RAX),%EDI                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nIMUL %R9D,%EDI                      | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 3       | 1\nSAL $0x2,%RDI                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nCALL 1280 <.plt.sec@start+0x90>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV %RAX,0x140(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nTEST %RAX,%RAX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 2870 <main+0x14d0>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0xe8(%RSP),%EDX                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nTEST %EDX,%EDX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 243f <main+0x109f>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0xc8(%RSP),%RDI                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA 0x5a0(%RSP),%RBX                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x140(%RSP),%R15                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RBX),%RDX                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RBX,0xa0(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R15),%RSI                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R15,0xa8(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 29c0 <setup_init_state>        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0xc0(%RSP),%RDI                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA (%RBX),%RDX                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R15),%RSI                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 29c0 <setup_init_state>        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nCMPQ $0,0x55f9(%RIP)                | 1     | 0     | 0    | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nJE 1a8a <main+0x6ea>                | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0x80(%RSP),%RDX                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA (%R12),%RDI                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0xc8(%RSP),%RSI                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nCALL 41d0 <save_frame_all_domain>   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x5590(%RIP),%EDI               | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %RDI,%RBX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nSAL $0x3,%RDI                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nCALL 1280 <.plt.sec@start+0x90>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nLEA 0x130(%RSP),%RSI                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x4,%EDI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RAX),%R14                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1230 <.plt.sec@start+0x40>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nCMP $0x1,%EBX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJBE 258a <main+0x11ea>              | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nVMOVQ 0xc0(%RSP),%XMM4              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA 0x120(%RSP),%R11                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x3b8d(%RIP),%XMM3           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA 0x110(%RSP),%RCX                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVPINSRQ $0x1,0xc8(%RSP),%XMM4,%XMM9 | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 4       | 6\nMOV $0x1,%EBX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R14,0xb0(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA 0x108(%RSP),%R15                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %R12,0x88(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nLEA (%R11),%R14                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD %XMM3,0xb8(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nLEA (%RCX),%R12                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVDQA %XMM9,0x90(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nNOPL (%RAX,%RAX,1)                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV 0xb0(%RSP),%R14                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV 0x88(%RSP),%R12                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA (%R13),%RSI                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x4,%EDI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1230 <.plt.sec@start+0x40>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x188(%RSP),%R13                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV $0x44000000,%EDI                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0x180(%RSP),%R8                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nSUB 0x138(%RSP),%R13                | 1     | 0     | 0    | 0.50 | 0.50 | 0.50  | 0.50 | 0  | 1       | 1\nSUB 0x130(%RSP),%R8                 | 1     | 0     | 0    | 0.50 | 0.50 | 0.50  | 0.50 | 0  | 1       | 1\nVCVTSI2SD %R13,%XMM5,%XMM5          | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 5       | 1\nVCVTSI2SD %R8,%XMM1,%XMM1           | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 5       | 1\nVFMADD132SD 0xb8(%RSP),%XMM1,%XMM5  | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM5,0x108(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nCALL 11f0 <.plt.sec@start>          | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x5215(%RIP),%ESI               | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOVQ $0,0x100(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nTEST %RSI,%RSI                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RSI,%R10                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nJE 2579 <main+0x11d9>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA (%R14),%RAX                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0xb,%ECX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSHR $0x3,%RAX                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA -0x1(%RSI),%R9                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nNEG %RAX                            | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nAND $0x7,%EAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RAX,%RDX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nADD $0x7,%RDX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP $0xb,%RDX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMOVB %RCX,%RDX                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 2       | 1\nCMP %R9,%RDX                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJA 25c5 <main+0x1225>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nTEST %RAX,%RAX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 25b2 <main+0x1212>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nVMOVSD (%R14),%XMM6                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nCMP $0x1,%RAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 25a8 <main+0x1208>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMP $0x2,%RAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD 0x8(%R14),%XMM6,%XMM6        | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nJE 25d0 <main+0x1230>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMP $0x3,%RAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD 0x10(%R14),%XMM6,%XMM6       | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nJE 2642 <main+0x12a2>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMP $0x4,%RAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD 0x18(%R14),%XMM6,%XMM6       | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nJE 264c <main+0x12ac>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMP $0x5,%RAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD 0x20(%R14),%XMM6,%XMM6       | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nJE 2656 <main+0x12b6>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMP $0x7,%RAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD 0x28(%R14),%XMM6,%XMM6       | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nJNE 2609 <main+0x1269>              | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nVADDSD 0x30(%R14),%XMM6,%XMM6       | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nMOV $0x7,%EBX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVXORPD %XMM7,%XMM7,%XMM7\nLEA (%RSI),%RDI                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSUB %RAX,%RDI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R14,%RAX,8),%RAX              | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV %RDI,%R11                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA (%RAX),%R13                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSHR $0x3,%R11                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nSAL $0x6,%R11                       | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nLEA -0x40(%R11),%R8                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %R11,%R13                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nSHR $0x6,%R8                        | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 1       | 1\nADD $0x1,%R8                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nAND $0x7,%R8D                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 1f64 <main+0xbc4>                | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMP $0x1,%R8                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 1f55 <main+0xbb5>                | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMP $0x2,%R8                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 1f4b <main+0xbab>                | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMP $0x3,%R8                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 1f41 <main+0xba1>                | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMP $0x4,%R8                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 1f37 <main+0xb97>                | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMP $0x5,%R8                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 1f2d <main+0xb8d>                | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMP $0x6,%R8                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 1f23 <main+0xb83>                | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nVMOVAPD (%RAX),%ZMM7                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA 0x40(%RAX),%RAX                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDPD (%RAX),%ZMM7,%ZMM7           | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nLEA 0x40(%RAX),%RAX                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDPD (%RAX),%ZMM7,%ZMM7           | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nLEA 0x40(%RAX),%RAX                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDPD (%RAX),%ZMM7,%ZMM7           | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nLEA 0x40(%RAX),%RAX                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDPD (%RAX),%ZMM7,%ZMM7           | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nLEA 0x40(%RAX),%RAX                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDPD (%RAX),%ZMM7,%ZMM7           | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nLEA 0x40(%RAX),%RAX                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDPD (%RAX),%ZMM7,%ZMM7           | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nLEA 0x40(%RAX),%RAX                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %R13,%RAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 1fa7 <main+0xc07>                | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nVEXTRACTF64X4 $0x1,%ZMM7,%YMM12     | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nLEA (%RDI),%RDX                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDPD %YMM7,%YMM12,%YMM13          | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nAND $-0x8,%RDX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nADD %RDX,%RBX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCMP %RDI,%RDX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVEXTRACTF128 $0x1,%YMM13,%XMM14     | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 3-6     | 1\nVADDPD %XMM13,%XMM14,%XMM15         | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVUNPCKHPD %XMM15,%XMM15,%XMM0       | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 4-7     | 2\nVADDPD %XMM15,%XMM0,%XMM5           | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nVADDSD %XMM6,%XMM5,%XMM6            | 1     | 0.50  | 0.50 | 0    | 0    | 0     | 0    | 0  | 6       | 0.50\nJE 25bd <main+0x121d>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nVZEROUPPER                          | 19    | 0     | 0    | 0    | 0    | 0     | 0    | 0  | 0       | 36\nLEA 0x1(%RBX),%RCX                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD (%R14,%RBX,8),%XMM6,%XMM6    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nCMP %RCX,%RSI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJBE 20ba <main+0xd1a>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA 0x2(%RBX),%R9                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD (%R14,%RCX,8),%XMM6,%XMM6    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nCMP %R9,%RSI                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJBE 20ba <main+0xd1a>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA 0x3(%RBX),%RDI                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD (%R14,%R9,8),%XMM6,%XMM6     | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nCMP %RDI,%RSI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJBE 20ba <main+0xd1a>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA 0x4(%RBX),%R11                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD (%R14,%RDI,8),%XMM6,%XMM6    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nCMP %RSI,%R11                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJAE 20ba <main+0xd1a>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA 0x5(%RBX),%R13                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD (%R14,%R11,8),%XMM6,%XMM6    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nCMP %RSI,%R13                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJAE 20ba <main+0xd1a>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA 0x6(%RBX),%R8                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD (%R14,%R13,8),%XMM6,%XMM6    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nCMP %RSI,%R8                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJAE 20ba <main+0xd1a>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA 0x7(%RBX),%RAX                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD (%R14,%R8,8),%XMM6,%XMM6     | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nCMP %RSI,%RAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJAE 20ba <main+0xd1a>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA 0x8(%RBX),%RDX                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD (%R14,%RAX,8),%XMM6,%XMM6    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nCMP %RSI,%RDX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJAE 20ba <main+0xd1a>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA 0x9(%RBX),%RCX                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD (%R14,%RDX,8),%XMM6,%XMM6    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nCMP %RSI,%RCX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJAE 20ba <main+0xd1a>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA 0xa(%RBX),%R9                   | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD (%R14,%RCX,8),%XMM6,%XMM6    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nCMP %RSI,%R9                        | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJAE 20ba <main+0xd1a>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA 0xb(%RBX),%RDI                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD (%R14,%R9,8),%XMM6,%XMM6     | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nCMP %RSI,%RDI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJAE 20ba <main+0xd1a>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA 0xc(%RBX),%R11                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD (%R14,%RDI,8),%XMM6,%XMM6    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nCMP %R11,%RSI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJBE 20ba <main+0xd1a>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA 0xd(%RBX),%RBX                  | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVADDSD (%R14,%R11,8),%XMM6,%XMM6    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nCMP %RBX,%RSI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJBE 20ba <main+0xd1a>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nVADDSD (%R14,%RBX,8),%XMM6,%XMM6    | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nVMOVSD %XMM6,0x100(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nVCVTUSI2SD %R10D,%XMM1,%XMM1        | 1     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 5       | 1\nXOR %R9D,%R9D\nLEA 0xf8(%RSP),%RSI                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0x100(%RSP),%RDI                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x58000003,%R8D                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x4c00080b,%ECX                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVL $0x44000000,(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nMOV $0x1,%EDX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVDIVSD %XMM1,%XMM6,%XMM7            | 3     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 40-42   | 12-32\nVMOVSD %XMM7,0x100(%RSP)            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nCALL 1330 <.plt.sec@start+0x140>    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nXOR %R9D,%R9D\nMOV $0x58000003,%R8D                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x4c00080b,%ECX                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R15),%RDI                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA 0xf0(%RSP),%RSI                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x1,%EDX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVL $0x44000000,(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nCALL 1330 <.plt.sec@start+0x140>    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nVMOVSD 0x3531(%RIP),%XMM8           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA 0x32e2(%RIP),%RSI               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMULSD 0x100(%RSP),%XMM8,%XMM0      | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nMOV $0x1,%EDI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV 0xe8(%RSP),%EDX                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV $0x1,%EAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1270 <.plt.sec@start+0x80>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0xe8(%RSP),%EDX                 | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nLEA 0x32fd(%RIP),%RSI               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0x108(%RSP),%XMM0            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOV $0x1,%EDI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x1,%EAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1270 <.plt.sec@start+0x80>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0xe8(%RSP),%R15D                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nTEST %R15D,%R15D                    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 24de <main+0x113e>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA (%R14),%RDI                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 12c0 <.plt.sec@start+0xd0>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x658(%RSP),%RDI                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nVPXOR %XMM11,%XMM11,%XMM11\nVMOVDQA %XMM11,0x5a0(%RSP)          | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nMOVQ $-0x1,0x5b8(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nTEST %RDI,%RDI                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 21c8 <main+0xe28>                | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCALL 12c0 <.plt.sec@start+0xd0>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x170(%RSP),%RDI                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOVQ $0,0x178(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nCALL 12c0 <.plt.sec@start+0xd0>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x160(%RSP),%RDI                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOVQ $0,0x168(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nCALL 12c0 <.plt.sec@start+0xd0>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x150(%RSP),%RDI                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOVQ $0,0x158(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nCALL 12c0 <.plt.sec@start+0xd0>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x140(%RSP),%RDI                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOVQ $0,0x148(%RSP)                 | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nCALL 12c0 <.plt.sec@start+0xd0>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nCALL 1350 <.plt.sec@start+0x160>    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV 0x9a8(%RSP),%RAX                | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nXOR %FS:0x28,%RAX                   | 1     | 0     | 0    | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nJNE 281a <main+0x147a>              | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA (%R9),%R9D                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nXOR %EDX,%EDX\nIMUL $0x48,%R9,%RAX                 | 1     | 0     | 0    | 0    | 0    | 1     | 0    | 0  | 5       | 2\nDIV %RSI                            | 23    | 11.50 | 0    | 0    | 0    | 11.50 | 0    | 0  | 39-95   | 22-95\nMOV %RAX,%RDI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nCALL 1280 <.plt.sec@start+0x90>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOV %RAX,0x658(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nJMP 18b5 <main+0x515>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nMOV 0x4c22(%RIP),%R12               | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nTEST %R12,%R12                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 2466 <main+0x10c6>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV %R12,%RDI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nLEA 0x2db7(%RIP),%RSI               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1290 <.plt.sec@start+0xa0>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nTEST %RAX,%RAX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%RAX),%R12                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 2840 <main+0x14a0>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nMOV 0x4bb7(%RIP),%R10               | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV %R12,%RCX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nMOV 0x5b4(%RSP),%R14D               | 1     | 0     | 0    | 1    | 0    | 0     | 0    | 0  | 4       | 1\nMOV $0x1,%EDX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x10,%ESI                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nLEA (%R13),%RDI                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOVL $0x12345,0x180(%RSP)           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nMOV %R10,0x184(%RSP)                | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nMOV %R14D,0x18c(%RSP)               | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 0       | 1\nCALL 1380 <.plt.sec@start+0x190>    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nJMP 1a21 <main+0x681>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nVCVTSI2SDL 0xe4(%RSP),%XMM2,%XMM2   | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 1\nLEA 0x2fc2(%RIP),%RSI               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0xf8(%RSP),%XMM3             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOV $0x1,%EDI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x1,%EAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVDIVSD %XMM2,%XMM3,%XMM4            | 3     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 40-42   | 12-32\nVMULSD 0x315b(%RIP),%XMM4,%XMM0     | 1     | 0.50  | 0.50 | 0.50 | 0.50 | 0     | 0    | 0  | 6       | 0.50\nCALL 1270 <.plt.sec@start+0x80>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nVCVTSI2SDL 0xe4(%RSP),%XMM9,%XMM9   | 1     | 1     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 1\nLEA 0x2fbe(%RIP),%RSI               | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD 0xf0(%RSP),%XMM10            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nMOV $0x1,%EDI                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nMOV $0x1,%EAX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVDIVSD %XMM9,%XMM10,%XMM0           | 3     | 1     | 0    | 0    | 0    | 0     | 0    | 0  | 40-42   | 12-32\nCALL 1270 <.plt.sec@start+0x80>     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nCMPL $0,0xe8(%RSP)                  | 1     | 0     | 0    | 1    | 0    | 0.50  | 0.50 | 0  | 1       | 1\nJNE 2194 <main+0xdf4>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nTEST %R12,%R12                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJE 2194 <main+0xdf4>                | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nLEA (%R12),%RDI                     | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nCALL 1370 <.plt.sec@start+0x180>    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nNOP                                 | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 0.50\nJMP 2194 <main+0xdf4>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nVMOVSD 0x100(%RSP),%XMM6            | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nXOR %R10D,%R10D\nJMP 20c3 <main+0xd23>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nVMOVSD 0x30ce(%RIP),%XMM2           | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 0  | 5       | 0.50\nLEA 0x108(%RSP),%R15                | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nVMOVSD %XMM2,0xb8(%RSP)             | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 2       | 1\nJMP 1db0 <main+0xa10>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nMOV $0x1,%EBX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJMP 1ec4 <main+0xb24>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nVPXOR %XMM6,%XMM6,%XMM6\nXOR %EBX,%EBX\nJMP 1ec4 <main+0xb24>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nVZEROUPPER                          | 19    | 0     | 0    | 0    | 0    | 0     | 0    | 0  | 0       | 36\nJMP 20ba <main+0xd1a>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nVPXOR %XMM6,%XMM6,%XMM6\nXOR %EBX,%EBX\nJMP 1fe1 <main+0xc41>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nMOV $0x2,%EBX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJMP 1ec4 <main+0xb24>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nMOV $0x6,%EBX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJMP 1ec4 <main+0xb24>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nMOV $0x3,%EBX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJMP 1ec4 <main+0xb24>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nMOV $0x4,%EBX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJMP 1ec4 <main+0xb24>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nMOV $0x5,%EBX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJMP 1ec4 <main+0xb24>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nOR $-0x1,%ECX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJMP 1898 <main+0x4f8>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nMOVL $-0x1,0x5d0(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nTEST %ECX,%ECX                      | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJS 267e <main+0x12de>               | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nCMP %R8D,%ECX                       | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 1       | 0.50\nJL 1892 <main+0x4f2>                | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 1-2\nJMP 267e <main+0x12de>              | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\nCALL 1340 <.plt.sec@start+0x150>    | 1     | 0     | 0    | 0    | 0    | 0.50  | 0.50 | 0  | 0       | 2\nMOVL $-0x1,0x5cc(%RSP)              | 1     | 0     | 0    | 0.50 | 0.50 | 0     | 0    | 1  | 1       | 1\nJMP 2780 <main+0x13e0>              | 1     | 0     | 0    | 0    | 0    | 0     | 1    | 0  | 0       | 2\n",
        },
      },
      header = {
        "Warnings:\nDetected a function call instruction: ignoring called function instructions.\nRerun with --follow-calls=append to include them to analysis  or with --follow-calls=inline to simulate inlining.",
        "1% of peak computational performance is used (0.37 out of 32.00 FLOP per cycle (GFLOPS @ 1GHz))",
      },
      brief = {
      },
      gain = {
        {
          workaround = " - Try to reorganize arrays of structures to structures of arrays\n - Consider to permute loops (see vectorization gain report)\n",
          title = "Code clean check",
          txt = "Detected a slowdown caused by scalar integer instructions (typically used for address computation).\nBy removing them, you can lower the cost of an iteration from 226.00 to 96.00 cycles (2.35x speedup).",
        },
        {
          workaround = " - Try another compiler or update/tune your current one\n - Remove inter-iterations dependences from your loop and make it unit-stride:\n  * If your arrays have 2 or more dimensions, check whether elements are accessed contiguously and, otherwise, try to permute loops accordingly:\nC storage order is row-major: for(i) for(j) a[j][i] = b[j][i]; (slow, non stride 1) => for(i) for(j) a[i][j] = b[i][j]; (fast, stride 1)\n  * If your loop streams arrays of structures (AoS), try to use structures of arrays instead (SoA):\nfor(i) a[i].x = b[i].x; (slow, non stride 1) => for(i) a.x[i] = b.x[i]; (fast, stride 1)\n",
          details = "13% of SSE/AVX instructions are used in vector version (process two or more data elements in vector registers):\n - 15% of SSE/AVX loads are used in vector version.\n - 4% of SSE/AVX stores are used in vector version.\n - 30% of SSE/AVX addition or subtraction instructions are used in vector version.\n - 0% of SSE/AVX multiply instructions are used in vector version.\n - 0% of SSE/AVX fused multiply-add instructions are used in vector version.\n - 0% of SSE/AVX nil are used in vector version.\n - 13% of SSE/AVX instructions that are not load, store, addition, subtraction nor multiply instructions are used in vector version.\nSince your execution units are vector units, only a fully vectorized loop can use their full power.\n",
          title = "Vectorization",
          txt = "Your loop is not vectorized.\nOnly 16% of vector register length is used (average across all SSE/AVX instructions).\nBy fully vectorizing your loop, you can lower the cost of an iteration from 226.00 to 160.72 cycles (1.41x speedup).",
        },
        {
          title = "Execution units bottlenecks",
          txt = "Found no such bottlenecks but see expert reports for more complex bottlenecks.",
        },
      },
      potential = {
        {
          workaround = "Try to change order in which elements are evaluated (using parentheses) in arithmetic expressions containing both ADD/SUB and MUL operations to enable your compiler to generate FMA instructions wherever possible.\nFor instance a + b*c is a valid FMA (MUL then ADD).\nHowever (a+b)* c cannot be translated into an FMA (ADD then MUL).",
          title = "FMA",
          txt = "Detected 1 FMA (fused multiply-add) operations.\nPresence of both ADD/SUB and MUL operations.",
        },
      },
    },
  common = {
    header = {
      "The loop is defined in:\n - /users/user2207/lbm_opt/include/lbm_struct.h:139\n - /usr/include/x86_64-linux-gnu/bits/stdio2.h:107\n - /users/user2207/lbm_opt/src/main.c:27,35,46-52,62,114-115,147-162,169-184,203-227,235,242-259,267-270\n - /users/user2207/lbm_opt/src/lbm_comm.c:30,43-46,71,99-110,126-133,150,157-163,253-264\n - /users/user2207/lbm_opt/src/lbm_phys.c:187,212-215,229\n - /users/user2207/lbm_opt/src/lbm_struct.c:21-23,30-35,43-45\n\n",
      "Warnings:\n - Non-innermost loop: analyzing only self part (ignoring child loops).\n - Ignoring paths for analysis\n - Failed to get the number of paths\n - RecMII not computed since number of paths is unknown or > max_paths\n - Streams not analyzed since number of paths is unknown or > max_paths\n",
    },
  },
}
